{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2","program":"/home/acer/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","vec_map","/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=b792030440aa120b","-C","extra-filename=-b792030440aa120b","--out-dir","/home/acer/ProgettoIN490/MySniffer/target/rls/debug/deps","-L","dependency=/home/acer/ProgettoIN490/MySniffer/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/home/acer/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/acer/ProgettoIN490/MySniffer/target/rls/debug/deps/libvec_map-b792030440aa120b.rmeta"},"prelude":{"crate_id":{"name":"vec_map","disambiguator":[16997744766191567550,15610780483303513140]},"crate_root":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src","external_crates":[{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[11465483288401737638,5550572350724654778]}},{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[18244709825056937379,8541279172166540996]}},{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[5740174754597782991,14381932371412392788]}},{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[5912038166719388440,1348551350470015689]}},{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[8555818017763115910,12072062234804656131]}},{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4438720507160810541,18229149757739284107]}},{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[14956713765672054331,16711555291873599790]}},{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[11668151181258983540,17314908725283844671]}},{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[6538090605504255516,13885356363809628147]}},{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[4787848669120998683,5174148560041752949]}},{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[7027550587003088190,15466513828826127728]}},{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[5938899731853885013,18021396312511623872]}},{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[1865682747167002125,8647521614981767847]}},{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[1865007528563448287,2705491453355471832]}}],"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":472,"byte_end":43817,"line_start":11,"line_end":1623,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":472,"byte_end":43817,"line_start":11,"line_end":1623,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":20},{"krate":0,"index":24},{"krate":0,"index":27},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":36},{"krate":0,"index":45},{"krate":0,"index":50},{"krate":0,"index":55},{"krate":0,"index":58},{"krate":0,"index":62},{"krate":0,"index":96},{"krate":0,"index":102},{"krate":0,"index":106},{"krate":0,"index":114},{"krate":0,"index":118},{"krate":0,"index":121},{"krate":0,"index":123},{"krate":0,"index":126},{"krate":0,"index":129},{"krate":0,"index":132},{"krate":0,"index":136},{"krate":0,"index":141},{"krate":0,"index":147},{"krate":0,"index":153},{"krate":0,"index":157},{"krate":0,"index":163},{"krate":0,"index":167},{"krate":0,"index":172},{"krate":0,"index":175},{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":181},{"krate":0,"index":189},{"krate":0,"index":323},{"krate":0,"index":193},{"krate":0,"index":329},{"krate":0,"index":196},{"krate":0,"index":333},{"krate":0,"index":204},{"krate":0,"index":339},{"krate":0,"index":207},{"krate":0,"index":211},{"krate":0,"index":215},{"krate":0,"index":219},{"krate":0,"index":223},{"krate":0,"index":227},{"krate":0,"index":232},{"krate":0,"index":236},{"krate":0,"index":242},{"krate":0,"index":245},{"krate":0,"index":249},{"krate":0,"index":256},{"krate":0,"index":259},{"krate":0,"index":264},{"krate":0,"index":271},{"krate":0,"index":274},{"krate":0,"index":279},{"krate":0,"index":286},{"krate":0,"index":289},{"krate":0,"index":294},{"krate":0,"index":299},{"krate":0,"index":301},{"krate":0,"index":304}],"decl_id":null,"docs":" A simple map based on a vector for small integer keys. Space requirements\n are O(highest integer key).\n","sig":null,"attributes":[{"value":"deny(missing_docs)","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":472,"byte_end":494,"line_start":11,"line_end":11,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":32},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":1686,"byte_end":1692,"line_start":65,"line_end":65,"column_start":12,"column_end":18},"name":"VecMap","qualname":"::VecMap","value":"VecMap {  }","parent":null,"children":[{"krate":0,"index":34},{"krate":0,"index":35}],"decl_id":null,"docs":" A map optimized for small integer keys.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":39},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":1874,"byte_end":1880,"line_start":73,"line_end":73,"column_start":5,"column_end":11},"name":"Vacant","qualname":"::Entry::Vacant","value":"Entry::Vacant(VacantEntry<'a, V>)","parent":{"krate":0,"index":36},"children":[],"decl_id":null,"docs":" A vacant Entry\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":42},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":1933,"byte_end":1941,"line_start":76,"line_end":76,"column_start":5,"column_end":13},"name":"Occupied","qualname":"::Entry::Occupied","value":"Entry::Occupied(OccupiedEntry<'a, V>)","parent":{"krate":0,"index":36},"children":[],"decl_id":null,"docs":" An occupied Entry\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":36},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":1828,"byte_end":1833,"line_start":71,"line_end":71,"column_start":10,"column_end":15},"name":"Entry","qualname":"::Entry","value":"Entry::{Vacant, Occupied}","parent":null,"children":[{"krate":0,"index":39},{"krate":0,"index":42}],"decl_id":null,"docs":" A view into a single entry in a map, which may either be vacant or occupied.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":45},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":1999,"byte_end":2010,"line_start":80,"line_end":80,"column_start":12,"column_end":23},"name":"VacantEntry","qualname":"::VacantEntry","value":"VacantEntry {  }","parent":null,"children":[{"krate":0,"index":48},{"krate":0,"index":49}],"decl_id":null,"docs":" A vacant Entry.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":50},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":2107,"byte_end":2120,"line_start":86,"line_end":86,"column_start":12,"column_end":25},"name":"OccupiedEntry","qualname":"::OccupiedEntry","value":"OccupiedEntry {  }","parent":null,"children":[{"krate":0,"index":53},{"krate":0,"index":54}],"decl_id":null,"docs":" An occupied Entry.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":64},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":2823,"byte_end":2826,"line_start":118,"line_end":118,"column_start":12,"column_end":15},"name":"new","qualname":"<VecMap<V>>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `VecMap`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":65},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":3134,"byte_end":3147,"line_start":129,"line_end":129,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<VecMap<V>>::with_capacity","value":"fn (capacity: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `VecMap` with space for at least `capacity`\n elements before resizing.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":66},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":3543,"byte_end":3551,"line_start":144,"line_end":144,"column_start":12,"column_end":20},"name":"capacity","qualname":"<VecMap<V>>::capacity","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements the `VecMap` can hold without\n reallocating.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":3522,"byte_end":3531,"line_start":143,"line_end":143,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":67},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":4119,"byte_end":4130,"line_start":162,"line_end":162,"column_start":12,"column_end":23},"name":"reserve_len","qualname":"<VecMap<V>>::reserve_len","value":"fn (&mut self, len: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Reserves capacity for the given `VecMap` to contain `len` distinct keys.\n In the case of `VecMap` this means reallocations will not occur as long\n as all inserted keys are less than `len`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":68},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":4959,"byte_end":4976,"line_start":185,"line_end":185,"column_start":12,"column_end":29},"name":"reserve_len_exact","qualname":"<VecMap<V>>::reserve_len_exact","value":"fn (&mut self, len: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Reserves the minimum capacity for the given `VecMap` to contain `len` distinct keys.\n In the case of `VecMap` this means reallocations will not occur as long as all inserted\n keys are less than `len`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":69},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":5500,"byte_end":5513,"line_start":204,"line_end":204,"column_start":12,"column_end":25},"name":"shrink_to_fit","qualname":"<VecMap<V>>::shrink_to_fit","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Trims the `VecMap` of any excess capacity.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":70},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":5904,"byte_end":5908,"line_start":217,"line_end":217,"column_start":12,"column_end":16},"name":"keys","qualname":"<VecMap<V>>::keys","value":"fn (&self) -> Keys<V>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator visiting all keys in ascending order of the keys.\n The iterator's element type is `usize`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":71},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":6110,"byte_end":6116,"line_start":223,"line_end":223,"column_start":12,"column_end":18},"name":"values","qualname":"<VecMap<V>>::values","value":"fn (&self) -> Values<V>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator visiting all values in ascending order of the keys.\n The iterator's element type is `&'r V`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":72},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":6326,"byte_end":6336,"line_start":229,"line_end":229,"column_start":12,"column_end":22},"name":"values_mut","qualname":"<VecMap<V>>::values_mut","value":"fn (&mut self) -> ValuesMut<V>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator visiting all values in ascending order of the keys.\n The iterator's element type is `&'r mut V`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":73},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":6946,"byte_end":6950,"line_start":251,"line_end":251,"column_start":12,"column_end":16},"name":"iter","qualname":"<VecMap<V>>::iter","value":"fn (&self) -> Iter<V>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator visiting all key-value pairs in ascending order of the keys.\n The iterator's element type is `(usize, &'r V)`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":74},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":7740,"byte_end":7748,"line_start":283,"line_end":283,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<VecMap<V>>::iter_mut","value":"fn (&mut self) -> IterMut<V>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator visiting all key-value pairs in ascending order of the keys,\n with mutable references to the values.\n The iterator's element type is `(usize, &'r mut V)`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":75},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":8553,"byte_end":8559,"line_start":317,"line_end":317,"column_start":12,"column_end":18},"name":"append","qualname":"<VecMap<V>>::append","value":"fn (&mut self, other: &mut Self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Moves all elements from `other` into the map while overwriting existing keys.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":76},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":9336,"byte_end":9345,"line_start":347,"line_end":347,"column_start":12,"column_end":21},"name":"split_off","qualname":"<VecMap<V>>::split_off","value":"fn (&mut self, at: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Splits the collection into two at the given key.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":80},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":11130,"byte_end":11135,"line_start":406,"line_end":406,"column_start":12,"column_end":17},"name":"drain","qualname":"<VecMap<V>>::drain","value":"fn (&mut self) -> Drain<V>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator visiting all key-value pairs in ascending order of\n the keys, emptying (but not consuming) the original `VecMap`.\n The iterator's element type is `(usize, &'r V)`. Keeps the allocated memory for reuse.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":11752,"byte_end":11755,"line_start":428,"line_end":428,"column_start":12,"column_end":15},"name":"len","qualname":"<VecMap<V>>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements in the map.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":12081,"byte_end":12089,"line_start":444,"line_end":444,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<VecMap<V>>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the map contains no elements.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":12406,"byte_end":12411,"line_start":460,"line_end":460,"column_start":12,"column_end":17},"name":"clear","qualname":"<VecMap<V>>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clears the map, removing all key-value pairs.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":12776,"byte_end":12779,"line_start":474,"line_end":474,"column_start":12,"column_end":15},"name":"get","qualname":"<VecMap<V>>::get","value":"fn (&self, key: usize) -> Option<&V>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the value corresponding to the key.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":13284,"byte_end":13296,"line_start":495,"line_end":495,"column_start":12,"column_end":24},"name":"contains_key","qualname":"<VecMap<V>>::contains_key","value":"fn (&self, key: usize) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the map contains a value for the specified key.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":13263,"byte_end":13272,"line_start":494,"line_end":494,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":89},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":13719,"byte_end":13726,"line_start":513,"line_end":513,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<VecMap<V>>::get_mut","value":"fn (&mut self, key: usize) -> Option<&mut V>","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the value corresponding to the key.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":14404,"byte_end":14410,"line_start":537,"line_end":537,"column_start":12,"column_end":18},"name":"insert","qualname":"<VecMap<V>>::insert","value":"fn (&mut self, key: usize, value: V) -> Option<V>","parent":null,"children":[],"decl_id":null,"docs":" Inserts a key-value pair into the map. If the key already had a value\n present in the map, that value is returned. Otherwise, `None` is returned.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":15097,"byte_end":15103,"line_start":562,"line_end":562,"column_start":12,"column_end":18},"name":"remove","qualname":"<VecMap<V>>::remove","value":"fn (&mut self, key: usize) -> Option<V>","parent":null,"children":[],"decl_id":null,"docs":" Removes a key from the map, returning the value at the key if the key\n was previously in the map.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":15831,"byte_end":15836,"line_start":590,"line_end":590,"column_start":12,"column_end":17},"name":"entry","qualname":"<VecMap<V>>::entry","value":"fn (&mut self, key: usize) -> Entry<V>","parent":null,"children":[],"decl_id":null,"docs":" Gets the given key's corresponding entry in the map for in-place manipulation.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":16871,"byte_end":16877,"line_start":621,"line_end":621,"column_start":12,"column_end":18},"name":"retain","qualname":"<VecMap<V>>::retain","value":"fn <F> (&mut self, mut f: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Retains only the elements specified by the predicate.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":17436,"byte_end":17445,"line_start":640,"line_end":640,"column_start":12,"column_end":21},"name":"or_insert","qualname":"<Entry>::or_insert","value":"fn (self, default: V) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting the default if empty, and\n returns a mutable reference to the value in the entry.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":17802,"byte_end":17816,"line_start":650,"line_end":650,"column_start":12,"column_end":26},"name":"or_insert_with","qualname":"<Entry>::or_insert_with","value":"fn <F> (self, default: F) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting the result of the default\n function if empty, and returns a mutable reference to the value in the\n entry.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":18166,"byte_end":18172,"line_start":661,"line_end":661,"column_start":12,"column_end":18},"name":"insert","qualname":"<VacantEntry>::insert","value":"fn (self, value: V) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry with the VacantEntry's key,\n and returns a mutable reference to it.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":18411,"byte_end":18414,"line_start":670,"line_end":670,"column_start":12,"column_end":15},"name":"get","qualname":"<OccupiedEntry>::get","value":"fn (&self) -> &V","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the value in the entry.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":18565,"byte_end":18572,"line_start":676,"line_end":676,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<OccupiedEntry>::get_mut","value":"fn (&mut self) -> &mut V","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the value in the entry.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":18741,"byte_end":18749,"line_start":682,"line_end":682,"column_start":12,"column_end":20},"name":"into_mut","qualname":"<OccupiedEntry>::into_mut","value":"fn (self) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":" Converts the entry into a mutable reference to its value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":18959,"byte_end":18965,"line_start":689,"line_end":689,"column_start":12,"column_end":18},"name":"insert","qualname":"<OccupiedEntry>::insert","value":"fn (&mut self, value: V) -> V","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry with the OccupiedEntry's key,\n and returns the entry's old value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":113},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":19160,"byte_end":19166,"line_start":695,"line_end":695,"column_start":12,"column_end":18},"name":"remove","qualname":"<OccupiedEntry>::remove","value":"fn (self) -> V","parent":null,"children":[],"decl_id":null,"docs":" Takes the value of the entry out of the map, and returns it.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":181},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":24331,"byte_end":24335,"line_start":895,"line_end":895,"column_start":12,"column_end":16},"name":"Iter","qualname":"::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188}],"decl_id":null,"docs":" An iterator over the key-value pairs of a map.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":196},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":25034,"byte_end":25041,"line_start":922,"line_end":922,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":203}],"decl_id":null,"docs":" An iterator over the key-value pairs of a map, with the\n values being mutable.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":207},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":25398,"byte_end":25402,"line_start":935,"line_end":935,"column_start":12,"column_end":16},"name":"Keys","qualname":"::Keys","value":"Keys {  }","parent":null,"children":[{"krate":0,"index":210}],"decl_id":null,"docs":" An iterator over the keys of a map.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":215},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":25693,"byte_end":25699,"line_start":949,"line_end":949,"column_start":12,"column_end":18},"name":"Values","qualname":"::Values","value":"Values {  }","parent":null,"children":[{"krate":0,"index":218}],"decl_id":null,"docs":" An iterator over the values of a map.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":223},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":25996,"byte_end":26005,"line_start":963,"line_end":963,"column_start":12,"column_end":21},"name":"ValuesMut","qualname":"::ValuesMut","value":"ValuesMut {  }","parent":null,"children":[{"krate":0,"index":226}],"decl_id":null,"docs":" An iterator over the values of a map.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":227},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":26123,"byte_end":26131,"line_start":968,"line_end":968,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":229},{"krate":0,"index":230},{"krate":0,"index":231}],"decl_id":null,"docs":" A consuming iterator over the key-value pairs of a map.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":232},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":26291,"byte_end":26296,"line_start":975,"line_end":975,"column_start":12,"column_end":17},"name":"Drain","qualname":"::Drain","value":"Drain {  }","parent":null,"children":[{"krate":0,"index":235}],"decl_id":null,"docs":" A draining iterator over the key-value pairs of a map.\n","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":2203,"byte_end":2209,"line_start":91,"line_end":91,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":57}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":2296,"byte_end":2302,"line_start":96,"line_end":96,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":60}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":2626,"byte_end":2632,"line_start":109,"line_end":109,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":80},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":17268,"byte_end":17273,"line_start":637,"line_end":637,"column_start":13,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":99},{"krate":0,"index":100}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":18023,"byte_end":18034,"line_start":658,"line_end":658,"column_start":13,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":105}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":18325,"byte_end":18338,"line_start":668,"line_end":668,"column_start":13,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":113}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":19286,"byte_end":19292,"line_start":701,"line_end":701,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":116},{"krate":0,"index":117}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":19564,"byte_end":19570,"line_start":714,"line_end":714,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":120}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":19703,"byte_end":19709,"line_start":720,"line_end":720,"column_start":20,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":19752,"byte_end":19758,"line_start":722,"line_end":722,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":125}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":19916,"byte_end":19922,"line_start":729,"line_end":729,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":128}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":20070,"byte_end":20076,"line_start":736,"line_end":736,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":131}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":20232,"byte_end":20238,"line_start":742,"line_end":742,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":134}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":20423,"byte_end":20429,"line_start":750,"line_end":750,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":140}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":21622,"byte_end":21628,"line_start":799,"line_end":799,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":155}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":21830,"byte_end":21836,"line_start":807,"line_end":807,"column_start":46,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":160}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":22025,"byte_end":22031,"line_start":813,"line_end":813,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":165},{"krate":0,"index":166}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":22199,"byte_end":22205,"line_start":822,"line_end":822,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":170},{"krate":0,"index":171}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":22370,"byte_end":22376,"line_start":831,"line_end":831,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":174}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":22541,"byte_end":22547,"line_start":838,"line_end":838,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":178}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":24535,"byte_end":24539,"line_start":904,"line_end":904,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":192}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":24858,"byte_end":24862,"line_start":917,"line_end":917,"column_start":35,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":25258,"byte_end":25265,"line_start":931,"line_end":931,"column_start":35,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":25519,"byte_end":25523,"line_start":940,"line_end":940,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":214}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":25816,"byte_end":25822,"line_start":954,"line_end":954,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":222}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":26451,"byte_end":26456,"line_start":981,"line_end":981,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":241}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":26674,"byte_end":26679,"line_start":988,"line_end":988,"column_start":35,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":26727,"byte_end":26732,"line_start":990,"line_end":990,"column_start":37,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":248}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":26846,"byte_end":26850,"line_start":994,"line_end":994,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":252},{"krate":0,"index":253},{"krate":0,"index":255}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":27071,"byte_end":27075,"line_start":1001,"line_end":1001,"column_start":35,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":27123,"byte_end":27127,"line_start":1003,"line_end":1003,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":262}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":27249,"byte_end":27255,"line_start":1007,"line_end":1007,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":267},{"krate":0,"index":268},{"krate":0,"index":270}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":27478,"byte_end":27484,"line_start":1014,"line_end":1014,"column_start":35,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":27532,"byte_end":27538,"line_start":1016,"line_end":1016,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":277}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":27662,"byte_end":27671,"line_start":1020,"line_end":1020,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":282},{"krate":0,"index":283},{"krate":0,"index":285}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":27910,"byte_end":27919,"line_start":1027,"line_end":1027,"column_start":35,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":27967,"byte_end":27976,"line_start":1029,"line_end":1029,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":292}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":28102,"byte_end":28110,"line_start":1033,"line_end":1033,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":296},{"krate":0,"index":297},{"krate":0,"index":298}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":28634,"byte_end":28642,"line_start":1054,"line_end":1054,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":28682,"byte_end":28690,"line_start":1056,"line_end":1056,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":303}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":2203,"byte_end":2209,"line_start":91,"line_end":91,"column_start":21,"column_end":27},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":32},"to":{"krate":2,"index":2204}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":2296,"byte_end":2302,"line_start":96,"line_end":96,"column_start":24,"column_end":30},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":32},"to":{"krate":2,"index":7121}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":2626,"byte_end":2632,"line_start":109,"line_end":109,"column_start":9,"column_end":15},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":32},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":17268,"byte_end":17273,"line_start":637,"line_end":637,"column_start":13,"column_end":18},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":36},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":18023,"byte_end":18034,"line_start":658,"line_end":658,"column_start":13,"column_end":24},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":45},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":18325,"byte_end":18338,"line_start":668,"line_end":668,"column_start":13,"column_end":26},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":50},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":19286,"byte_end":19292,"line_start":701,"line_end":701,"column_start":26,"column_end":32},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":32},"to":{"krate":2,"index":2179}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":19564,"byte_end":19570,"line_start":714,"line_end":714,"column_start":34,"column_end":40},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":32},"to":{"krate":2,"index":2039}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":19703,"byte_end":19709,"line_start":720,"line_end":720,"column_start":20,"column_end":26},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":32},"to":{"krate":2,"index":2044}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":19752,"byte_end":19758,"line_start":722,"line_end":722,"column_start":36,"column_end":42},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":32},"to":{"krate":2,"index":2076}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":19916,"byte_end":19922,"line_start":729,"line_end":729,"column_start":22,"column_end":28},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":32},"to":{"krate":2,"index":2065}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":20070,"byte_end":20076,"line_start":736,"line_end":736,"column_start":36,"column_end":42},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":32},"to":{"krate":2,"index":7479}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":20232,"byte_end":20238,"line_start":742,"line_end":742,"column_start":38,"column_end":44},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":32},"to":{"krate":2,"index":3804}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":20423,"byte_end":20429,"line_start":750,"line_end":750,"column_start":26,"column_end":32},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":32},"to":{"krate":2,"index":3808}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":21622,"byte_end":21628,"line_start":799,"line_end":799,"column_start":32,"column_end":38},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":32},"to":{"krate":2,"index":3817}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":21830,"byte_end":21836,"line_start":807,"line_end":807,"column_start":46,"column_end":52},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":32},"to":{"krate":2,"index":3817}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":22025,"byte_end":22031,"line_start":813,"line_end":813,"column_start":26,"column_end":32},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":32},"to":{"krate":2,"index":1779}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":22199,"byte_end":22205,"line_start":822,"line_end":822,"column_start":34,"column_end":40},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":32},"to":{"krate":2,"index":1779}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":22370,"byte_end":22376,"line_start":831,"line_end":831,"column_start":29,"column_end":35},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":32},"to":{"krate":2,"index":1783}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":22541,"byte_end":22547,"line_start":838,"line_end":838,"column_start":37,"column_end":43},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":32},"to":{"krate":2,"index":1783}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":24535,"byte_end":24539,"line_start":904,"line_end":904,"column_start":23,"column_end":27},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":181},"to":{"krate":2,"index":2179}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":24858,"byte_end":24862,"line_start":917,"line_end":917,"column_start":35,"column_end":39},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":181},"to":{"krate":2,"index":3796}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":25258,"byte_end":25265,"line_start":931,"line_end":931,"column_start":35,"column_end":42},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":196},"to":{"krate":2,"index":3796}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":25519,"byte_end":25523,"line_start":940,"line_end":940,"column_start":23,"column_end":27},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":207},"to":{"krate":2,"index":2179}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":25816,"byte_end":25822,"line_start":954,"line_end":954,"column_start":23,"column_end":29},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":215},"to":{"krate":2,"index":2179}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":26451,"byte_end":26456,"line_start":981,"line_end":981,"column_start":26,"column_end":31},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":232},"to":{"krate":2,"index":3510}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":26674,"byte_end":26679,"line_start":988,"line_end":988,"column_start":35,"column_end":40},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":232},"to":{"krate":2,"index":3796}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":26727,"byte_end":26732,"line_start":990,"line_end":990,"column_start":37,"column_end":42},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":232},"to":{"krate":2,"index":3767}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":26846,"byte_end":26850,"line_start":994,"line_end":994,"column_start":26,"column_end":30},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":207},"to":{"krate":2,"index":3510}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":27071,"byte_end":27075,"line_start":1001,"line_end":1001,"column_start":35,"column_end":39},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":207},"to":{"krate":2,"index":3796}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":27123,"byte_end":27127,"line_start":1003,"line_end":1003,"column_start":37,"column_end":41},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":207},"to":{"krate":2,"index":3767}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":27249,"byte_end":27255,"line_start":1007,"line_end":1007,"column_start":26,"column_end":32},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":215},"to":{"krate":2,"index":3510}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":27478,"byte_end":27484,"line_start":1014,"line_end":1014,"column_start":35,"column_end":41},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":215},"to":{"krate":2,"index":3796}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":27532,"byte_end":27538,"line_start":1016,"line_end":1016,"column_start":37,"column_end":43},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":215},"to":{"krate":2,"index":3767}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":27662,"byte_end":27671,"line_start":1020,"line_end":1020,"column_start":26,"column_end":35},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":223},"to":{"krate":2,"index":3510}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":27910,"byte_end":27919,"line_start":1027,"line_end":1027,"column_start":35,"column_end":44},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":223},"to":{"krate":2,"index":3796}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":27967,"byte_end":27976,"line_start":1029,"line_end":1029,"column_start":37,"column_end":46},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":223},"to":{"krate":2,"index":3767}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":28102,"byte_end":28110,"line_start":1033,"line_end":1033,"column_start":22,"column_end":30},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":227},"to":{"krate":2,"index":3510}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":28634,"byte_end":28642,"line_start":1054,"line_end":1054,"column_start":31,"column_end":39},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":227},"to":{"krate":2,"index":3796}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/vec_map-0.8.2/src/lib.rs","byte_start":28682,"byte_end":28690,"line_start":1056,"line_end":1056,"column_start":33,"column_end":41},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":227},"to":{"krate":2,"index":3767}}]}