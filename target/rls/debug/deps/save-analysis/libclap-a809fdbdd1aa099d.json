{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1","program":"/home/acer/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","clap","/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"ansi_term\"","--cfg","feature=\"atty\"","--cfg","feature=\"color\"","--cfg","feature=\"default\"","--cfg","feature=\"strsim\"","--cfg","feature=\"suggestions\"","--cfg","feature=\"vec_map\"","-C","metadata=a809fdbdd1aa099d","-C","extra-filename=-a809fdbdd1aa099d","--out-dir","/home/acer/ProgettoIN490/MySniffer/target/rls/debug/deps","-L","dependency=/home/acer/ProgettoIN490/MySniffer/target/rls/debug/deps","--extern","ansi_term=/home/acer/ProgettoIN490/MySniffer/target/rls/debug/deps/libansi_term-e639384fcfc82a13.rmeta","--extern","atty=/home/acer/ProgettoIN490/MySniffer/target/rls/debug/deps/libatty-08140cf283b8d4d2.rmeta","--extern","bitflags=/home/acer/ProgettoIN490/MySniffer/target/rls/debug/deps/libbitflags-4e9ad555ae8044d6.rmeta","--extern","strsim=/home/acer/ProgettoIN490/MySniffer/target/rls/debug/deps/libstrsim-b2e8bd92277d76a9.rmeta","--extern","textwrap=/home/acer/ProgettoIN490/MySniffer/target/rls/debug/deps/libtextwrap-1e904879722a8092.rmeta","--extern","unicode_width=/home/acer/ProgettoIN490/MySniffer/target/rls/debug/deps/libunicode_width-9808dbeb84118922.rmeta","--extern","vec_map=/home/acer/ProgettoIN490/MySniffer/target/rls/debug/deps/libvec_map-b792030440aa120b.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/acer/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/acer/ProgettoIN490/MySniffer/target/rls/debug/deps/libclap-a809fdbdd1aa099d.rmeta"},"prelude":{"crate_id":{"name":"clap","disambiguator":[4965361077148584086,331721708058823625]},"crate_root":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src","external_crates":[{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[11465483288401737638,5550572350724654778]}},{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[18244709825056937379,8541279172166540996]}},{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[5740174754597782991,14381932371412392788]}},{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[5912038166719388440,1348551350470015689]}},{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[8555818017763115910,12072062234804656131]}},{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4438720507160810541,18229149757739284107]}},{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[14956713765672054331,16711555291873599790]}},{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[11668151181258983540,17314908725283844671]}},{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[6538090605504255516,13885356363809628147]}},{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[4787848669120998683,5174148560041752949]}},{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[7027550587003088190,15466513828826127728]}},{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[5938899731853885013,18021396312511623872]}},{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[1865682747167002125,8647521614981767847]}},{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[1865007528563448287,2705491453355471832]}},{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/lib.rs","num":15,"id":{"name":"ansi_term","disambiguator":[12737175216157650272,5571231908893856280]}},{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/lib.rs","num":16,"id":{"name":"atty","disambiguator":[13197220931915996377,3794532119840889116]}},{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/lib.rs","num":17,"id":{"name":"libc","disambiguator":[3788287329090602773,3486361580310634080]}},{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/lib.rs","num":18,"id":{"name":"bitflags","disambiguator":[17215305307943534339,17386179787251686105]}},{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/lib.rs","num":19,"id":{"name":"strsim","disambiguator":[611357769013877639,13191801866990274474]}},{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/lib.rs","num":20,"id":{"name":"textwrap","disambiguator":[18105283363638939380,6093414396268801092]}},{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/lib.rs","num":21,"id":{"name":"unicode_width","disambiguator":[9163494220696922081,6939700189653127482]}},{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/lib.rs","num":22,"id":{"name":"vec_map","disambiguator":[16997744766191567550,15610780483303513140]}}],"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/lib.rs","byte_start":351,"byte_end":24299,"line_start":6,"line_end":639,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":661},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/lib.rs","byte_start":22035,"byte_end":22038,"line_start":561,"line_end":561,"column_start":15,"column_end":18},"alias_span":null,"name":"App","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2364},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/lib.rs","byte_start":22040,"byte_end":22051,"line_start":561,"line_end":561,"column_start":20,"column_end":31},"alias_span":null,"name":"AppSettings","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2528},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/lib.rs","byte_start":22069,"byte_end":22072,"line_start":562,"line_end":562,"column_start":16,"column_end":19},"alias_span":null,"name":"Arg","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2681},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/lib.rs","byte_start":22074,"byte_end":22082,"line_start":562,"line_end":562,"column_start":21,"column_end":29},"alias_span":null,"name":"ArgGroup","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2643},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/lib.rs","byte_start":22084,"byte_end":22094,"line_start":562,"line_end":562,"column_start":31,"column_end":41},"alias_span":null,"name":"ArgMatches","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2890},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/lib.rs","byte_start":22096,"byte_end":22107,"line_start":562,"line_end":562,"column_start":43,"column_end":54},"alias_span":null,"name":"ArgSettings","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2663},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/lib.rs","byte_start":22109,"byte_end":22117,"line_start":562,"line_end":562,"column_start":56,"column_end":64},"alias_span":null,"name":"OsValues","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2938},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/lib.rs","byte_start":22119,"byte_end":22129,"line_start":562,"line_end":562,"column_start":66,"column_end":76},"alias_span":null,"name":"SubCommand","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2654},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/lib.rs","byte_start":22131,"byte_end":22137,"line_start":562,"line_end":562,"column_start":78,"column_end":84},"alias_span":null,"name":"Values","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2967},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/lib.rs","byte_start":22161,"byte_end":22166,"line_start":563,"line_end":563,"column_start":22,"column_end":27},"alias_span":null,"name":"Shell","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3035},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/lib.rs","byte_start":22185,"byte_end":22190,"line_start":564,"line_end":564,"column_start":18,"column_end":23},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2987},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/lib.rs","byte_start":22192,"byte_end":22201,"line_start":564,"line_end":564,"column_start":25,"column_end":34},"alias_span":null,"name":"ErrorKind","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1704},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/lib.rs","byte_start":22203,"byte_end":22209,"line_start":564,"line_end":564,"column_start":36,"column_end":42},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3058},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/lib.rs","byte_start":22225,"byte_end":22231,"line_start":565,"line_end":565,"column_start":14,"column_end":20},"alias_span":null,"name":"Format","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2967},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/completions/mod.rs","byte_start":599206,"byte_end":599211,"line_start":18,"line_end":18,"column_start":22,"column_end":27},"alias_span":null,"name":"Shell","value":"","parent":{"krate":0,"index":1532}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/lib.rs","byte_start":351,"byte_end":24299,"line_start":6,"line_end":639,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":22},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":72},{"krate":0,"index":803},{"krate":0,"index":1532},{"krate":0,"index":1688},{"krate":0,"index":1763},{"krate":0,"index":1798},{"krate":0,"index":1802},{"krate":0,"index":1823},{"krate":0,"index":1828},{"krate":0,"index":1851},{"krate":0,"index":1874},{"krate":0,"index":1875}],"decl_id":null,"docs":" `clap` is a simple-to-use, efficient, and full-featured library for parsing command line\n arguments and subcommands when writing console/terminal applications.","sig":null,"attributes":[{"value":"crate_type = \"lib\"","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/lib.rs","byte_start":20693,"byte_end":20715,"line_start":519,"line_end":519,"column_start":1,"column_end":23}},{"value":"deny(missing_docs, missing_debug_implementations,\n       missing_copy_implementations, trivial_casts, unused_import_braces,\n       unused_allocation)","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/lib.rs","byte_start":20771,"byte_end":20936,"line_start":521,"line_end":528,"column_start":1,"column_end":3}},{"value":"forbid(unstable_features)","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/lib.rs","byte_start":21183,"byte_end":21208,"line_start":534,"line_end":534,"column_start":5,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":1879},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/meta.rs","byte_start":169752,"byte_end":169759,"line_start":4,"line_end":4,"column_start":12,"column_end":19},"name":"AppMeta","qualname":"::app::meta::AppMeta","value":"AppMeta { name, bin_name, author, version, long_version, about, long_about, more_help, pre_help, aliases, usage_str, usage, help_str, disp_ord, term_w, max_w, template }","parent":null,"children":[{"krate":0,"index":1881},{"krate":0,"index":1882},{"krate":0,"index":1883},{"krate":0,"index":1884},{"krate":0,"index":1885},{"krate":0,"index":1886},{"krate":0,"index":1887},{"krate":0,"index":1888},{"krate":0,"index":1889},{"krate":0,"index":1890},{"krate":0,"index":1891},{"krate":0,"index":1892},{"krate":0,"index":1893},{"krate":0,"index":1894},{"krate":0,"index":1895},{"krate":0,"index":1896},{"krate":0,"index":1897}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/meta.rs","byte_start":169675,"byte_end":169714,"line_start":2,"line_end":2,"column_start":1,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":1881},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/meta.rs","byte_start":169774,"byte_end":169778,"line_start":5,"line_end":5,"column_start":9,"column_end":13},"name":"name","qualname":"::app::meta::AppMeta::name","value":"std::string::String","parent":{"krate":0,"index":1879},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1882},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/meta.rs","byte_start":169796,"byte_end":169804,"line_start":6,"line_end":6,"column_start":9,"column_end":17},"name":"bin_name","qualname":"::app::meta::AppMeta::bin_name","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":1879},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1883},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/meta.rs","byte_start":169830,"byte_end":169836,"line_start":7,"line_end":7,"column_start":9,"column_end":15},"name":"author","qualname":"::app::meta::AppMeta::author","value":"std::option::Option<&'b str>","parent":{"krate":0,"index":1879},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1884},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/meta.rs","byte_start":169863,"byte_end":169870,"line_start":8,"line_end":8,"column_start":9,"column_end":16},"name":"version","qualname":"::app::meta::AppMeta::version","value":"std::option::Option<&'b str>","parent":{"krate":0,"index":1879},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1885},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/meta.rs","byte_start":169897,"byte_end":169909,"line_start":9,"line_end":9,"column_start":9,"column_end":21},"name":"long_version","qualname":"::app::meta::AppMeta::long_version","value":"std::option::Option<&'b str>","parent":{"krate":0,"index":1879},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1886},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/meta.rs","byte_start":169936,"byte_end":169941,"line_start":10,"line_end":10,"column_start":9,"column_end":14},"name":"about","qualname":"::app::meta::AppMeta::about","value":"std::option::Option<&'b str>","parent":{"krate":0,"index":1879},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1887},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/meta.rs","byte_start":169968,"byte_end":169978,"line_start":11,"line_end":11,"column_start":9,"column_end":19},"name":"long_about","qualname":"::app::meta::AppMeta::long_about","value":"std::option::Option<&'b str>","parent":{"krate":0,"index":1879},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1888},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/meta.rs","byte_start":170005,"byte_end":170014,"line_start":12,"line_end":12,"column_start":9,"column_end":18},"name":"more_help","qualname":"::app::meta::AppMeta::more_help","value":"std::option::Option<&'b str>","parent":{"krate":0,"index":1879},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1889},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/meta.rs","byte_start":170041,"byte_end":170049,"line_start":13,"line_end":13,"column_start":9,"column_end":17},"name":"pre_help","qualname":"::app::meta::AppMeta::pre_help","value":"std::option::Option<&'b str>","parent":{"krate":0,"index":1879},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1890},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/meta.rs","byte_start":170076,"byte_end":170083,"line_start":14,"line_end":14,"column_start":9,"column_end":16},"name":"aliases","qualname":"::app::meta::AppMeta::aliases","value":"std::option::Option<std::vec::Vec<(&'b str, bool)>>","parent":{"krate":0,"index":1879},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1891},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/meta.rs","byte_start":170142,"byte_end":170151,"line_start":15,"line_end":15,"column_start":9,"column_end":18},"name":"usage_str","qualname":"::app::meta::AppMeta::usage_str","value":"std::option::Option<&'b str>","parent":{"krate":0,"index":1879},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1892},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/meta.rs","byte_start":170178,"byte_end":170183,"line_start":16,"line_end":16,"column_start":9,"column_end":14},"name":"usage","qualname":"::app::meta::AppMeta::usage","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":1879},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1893},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/meta.rs","byte_start":170209,"byte_end":170217,"line_start":17,"line_end":17,"column_start":9,"column_end":17},"name":"help_str","qualname":"::app::meta::AppMeta::help_str","value":"std::option::Option<&'b str>","parent":{"krate":0,"index":1879},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1894},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/meta.rs","byte_start":170244,"byte_end":170252,"line_start":18,"line_end":18,"column_start":9,"column_end":17},"name":"disp_ord","qualname":"::app::meta::AppMeta::disp_ord","value":"usize","parent":{"krate":0,"index":1879},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1895},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/meta.rs","byte_start":170269,"byte_end":170275,"line_start":19,"line_end":19,"column_start":9,"column_end":15},"name":"term_w","qualname":"::app::meta::AppMeta::term_w","value":"std::option::Option<usize>","parent":{"krate":0,"index":1879},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1896},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/meta.rs","byte_start":170300,"byte_end":170305,"line_start":20,"line_end":20,"column_start":9,"column_end":14},"name":"max_w","qualname":"::app::meta::AppMeta::max_w","value":"std::option::Option<usize>","parent":{"krate":0,"index":1879},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1897},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/meta.rs","byte_start":170330,"byte_end":170338,"line_start":21,"line_end":21,"column_start":9,"column_end":17},"name":"template","qualname":"::app::meta::AppMeta::template","value":"std::option::Option<&'b str>","parent":{"krate":0,"index":1879},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":228},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/meta.rs","byte_start":170394,"byte_end":170397,"line_start":25,"line_end":25,"column_start":12,"column_end":15},"name":"new","qualname":"<AppMeta>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":229},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/meta.rs","byte_start":170454,"byte_end":170463,"line_start":28,"line_end":28,"column_start":12,"column_end":21},"name":"with_name","qualname":"<AppMeta>::with_name","value":"fn (s: String) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1934},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs","byte_start":171944,"byte_end":171950,"line_start":57,"line_end":57,"column_start":12,"column_end":18},"name":"Parser","qualname":"::app::parser::Parser","value":"Parser { meta, g_settings, flags, opts, positionals, subcommands, groups, global_args, required, r_ifs, overrides, help_message, version_message }","parent":null,"children":[{"krate":0,"index":1937},{"krate":0,"index":1938},{"krate":0,"index":1939},{"krate":0,"index":1940},{"krate":0,"index":1941},{"krate":0,"index":1942},{"krate":0,"index":1943},{"krate":0,"index":1944},{"krate":0,"index":1945},{"krate":0,"index":1946},{"krate":0,"index":1947},{"krate":0,"index":1948},{"krate":0,"index":1949},{"krate":0,"index":1950},{"krate":0,"index":1951},{"krate":0,"index":1952},{"krate":0,"index":1953},{"krate":0,"index":1954}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs","byte_start":171852,"byte_end":171891,"line_start":54,"line_end":54,"column_start":1,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":1937},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs","byte_start":171987,"byte_end":171991,"line_start":61,"line_end":61,"column_start":9,"column_end":13},"name":"meta","qualname":"::app::parser::Parser::meta","value":"app::meta::AppMeta<'b>","parent":{"krate":0,"index":1934},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1939},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs","byte_start":172038,"byte_end":172048,"line_start":63,"line_end":63,"column_start":9,"column_end":19},"name":"g_settings","qualname":"::app::parser::Parser::g_settings","value":"app::settings::AppFlags","parent":{"krate":0,"index":1934},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1940},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs","byte_start":172068,"byte_end":172073,"line_start":64,"line_end":64,"column_start":9,"column_end":14},"name":"flags","qualname":"::app::parser::Parser::flags","value":"std::vec::Vec<args::arg_builder::flag::FlagBuilder<'a, 'b>>","parent":{"krate":0,"index":1934},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1941},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs","byte_start":172109,"byte_end":172113,"line_start":65,"line_end":65,"column_start":9,"column_end":13},"name":"opts","qualname":"::app::parser::Parser::opts","value":"std::vec::Vec<args::arg_builder::option::OptBuilder<'a, 'b>>","parent":{"krate":0,"index":1934},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1942},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs","byte_start":172148,"byte_end":172159,"line_start":66,"line_end":66,"column_start":9,"column_end":20},"name":"positionals","qualname":"::app::parser::Parser::positionals","value":"vec_map::VecMap<args::arg_builder::positional::PosBuilder<'a, 'b>>","parent":{"krate":0,"index":1934},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1943},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs","byte_start":172197,"byte_end":172208,"line_start":67,"line_end":67,"column_start":9,"column_end":20},"name":"subcommands","qualname":"::app::parser::Parser::subcommands","value":"std::vec::Vec<app::App<'a, 'b>>","parent":{"krate":0,"index":1934},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1944},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs","byte_start":172236,"byte_end":172242,"line_start":68,"line_end":68,"column_start":9,"column_end":15},"name":"groups","qualname":"::app::parser::Parser::groups","value":"std::vec::Vec<args::group::ArgGroup<'a>>","parent":{"krate":0,"index":1934},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1945},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs","byte_start":172271,"byte_end":172282,"line_start":69,"line_end":69,"column_start":9,"column_end":20},"name":"global_args","qualname":"::app::parser::Parser::global_args","value":"std::vec::Vec<args::arg::Arg<'a, 'b>>","parent":{"krate":0,"index":1934},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1946},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs","byte_start":172310,"byte_end":172318,"line_start":70,"line_end":70,"column_start":9,"column_end":17},"name":"required","qualname":"::app::parser::Parser::required","value":"std::vec::Vec<&'a str>","parent":{"krate":0,"index":1934},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1947},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs","byte_start":172342,"byte_end":172347,"line_start":71,"line_end":71,"column_start":9,"column_end":14},"name":"r_ifs","qualname":"::app::parser::Parser::r_ifs","value":"std::vec::Vec<(&'a str, &'b str, &'a str)>","parent":{"krate":0,"index":1934},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1948},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs","byte_start":172391,"byte_end":172400,"line_start":72,"line_end":72,"column_start":9,"column_end":18},"name":"overrides","qualname":"::app::parser::Parser::overrides","value":"std::vec::Vec<(&'b str, &'a str)>","parent":{"krate":0,"index":1934},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1952},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs","byte_start":172526,"byte_end":172538,"line_start":76,"line_end":76,"column_start":9,"column_end":21},"name":"help_message","qualname":"::app::parser::Parser::help_message","value":"std::option::Option<&'a str>","parent":{"krate":0,"index":1934},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1953},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs","byte_start":172565,"byte_end":172580,"line_start":77,"line_end":77,"column_start":9,"column_end":24},"name":"version_message","qualname":"::app::parser::Parser::version_message","value":"std::option::Option<&'a str>","parent":{"krate":0,"index":1934},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":280},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs","byte_start":172687,"byte_end":172696,"line_start":85,"line_end":85,"column_start":12,"column_end":21},"name":"with_name","qualname":"<Parser>::with_name","value":"fn (n: String) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":281},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs","byte_start":172916,"byte_end":172926,"line_start":94,"line_end":94,"column_start":12,"column_end":22},"name":"help_short","qualname":"<Parser>::help_short","value":"fn (&mut self, s: &str) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":283},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs","byte_start":173135,"byte_end":173148,"line_start":103,"line_end":103,"column_start":12,"column_end":25},"name":"version_short","qualname":"<Parser>::version_short","value":"fn (&mut self, s: &str) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":285},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs","byte_start":173360,"byte_end":173378,"line_start":112,"line_end":112,"column_start":12,"column_end":30},"name":"gen_completions_to","qualname":"<Parser>::gen_completions_to","value":"fn <W> (&mut self, for_shell: Shell, buf: &mut W) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":287},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs","byte_start":173751,"byte_end":173766,"line_start":124,"line_end":124,"column_start":12,"column_end":27},"name":"gen_completions","qualname":"<Parser>::gen_completions","value":"fn (&mut self, for_shell: Shell, od: OsString) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":310},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs","byte_start":180052,"byte_end":180059,"line_start":297,"line_end":297,"column_start":12,"column_end":19},"name":"add_arg","qualname":"<Parser>::add_arg","value":"fn (&mut self, a: Arg<'a, 'b>) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":311},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs","byte_start":181235,"byte_end":181246,"line_start":326,"line_end":326,"column_start":12,"column_end":23},"name":"add_arg_ref","qualname":"<Parser>::add_arg_ref","value":"fn (&mut self, a: &Arg<'a, 'b>) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":312},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs","byte_start":182290,"byte_end":182299,"line_start":354,"line_end":354,"column_start":12,"column_end":21},"name":"add_group","qualname":"<Parser>::add_group","value":"fn (&mut self, group: ArgGroup<'a>) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":315},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs","byte_start":183216,"byte_end":183230,"line_start":379,"line_end":379,"column_start":12,"column_end":26},"name":"add_subcommand","qualname":"<Parser>::add_subcommand","value":"fn (&mut self, mut subcmd: App<'a, 'b>) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":316},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs","byte_start":183627,"byte_end":183645,"line_start":393,"line_end":393,"column_start":12,"column_end":30},"name":"propagate_settings","qualname":"<Parser>::propagate_settings","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":317},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs","byte_start":185075,"byte_end":185095,"line_start":429,"line_end":429,"column_start":12,"column_end":32},"name":"derive_display_order","qualname":"<Parser>::derive_display_order","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":321},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs","byte_start":186142,"byte_end":186150,"line_start":462,"line_end":462,"column_start":12,"column_end":20},"name":"required","qualname":"<Parser>::required","value":"fn (&self) -> Iter<&str>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":322},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs","byte_start":186294,"byte_end":186302,"line_start":468,"line_end":468,"column_start":12,"column_end":20},"name":"has_args","qualname":"<Parser>::has_args","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs","byte_start":186273,"byte_end":186282,"line_start":467,"line_end":467,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":323},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs","byte_start":186440,"byte_end":186448,"line_start":473,"line_end":473,"column_start":12,"column_end":20},"name":"has_opts","qualname":"<Parser>::has_opts","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs","byte_start":186419,"byte_end":186428,"line_start":472,"line_end":472,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":324},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs","byte_start":186528,"byte_end":186537,"line_start":478,"line_end":478,"column_start":12,"column_end":21},"name":"has_flags","qualname":"<Parser>::has_flags","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs","byte_start":186507,"byte_end":186516,"line_start":477,"line_end":477,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":325},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs","byte_start":186618,"byte_end":186633,"line_start":483,"line_end":483,"column_start":12,"column_end":27},"name":"has_positionals","qualname":"<Parser>::has_positionals","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs","byte_start":186597,"byte_end":186606,"line_start":482,"line_end":482,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":326},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs","byte_start":186720,"byte_end":186735,"line_start":488,"line_end":488,"column_start":12,"column_end":27},"name":"has_subcommands","qualname":"<Parser>::has_subcommands","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs","byte_start":186699,"byte_end":186708,"line_start":487,"line_end":487,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":327},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs","byte_start":186822,"byte_end":186838,"line_start":493,"line_end":493,"column_start":12,"column_end":28},"name":"has_visible_opts","qualname":"<Parser>::has_visible_opts","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs","byte_start":186801,"byte_end":186810,"line_start":492,"line_end":492,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":329},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs","byte_start":187023,"byte_end":187040,"line_start":501,"line_end":501,"column_start":12,"column_end":29},"name":"has_visible_flags","qualname":"<Parser>::has_visible_flags","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs","byte_start":187002,"byte_end":187011,"line_start":500,"line_end":500,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":331},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs","byte_start":187227,"byte_end":187250,"line_start":509,"line_end":509,"column_start":12,"column_end":35},"name":"has_visible_positionals","qualname":"<Parser>::has_visible_positionals","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs","byte_start":187206,"byte_end":187215,"line_start":508,"line_end":508,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":333},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs","byte_start":187477,"byte_end":187500,"line_start":519,"line_end":519,"column_start":12,"column_end":35},"name":"has_visible_subcommands","qualname":"<Parser>::has_visible_subcommands","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs","byte_start":187456,"byte_end":187465,"line_start":518,"line_end":518,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":336},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs","byte_start":187761,"byte_end":187767,"line_start":529,"line_end":529,"column_start":12,"column_end":18},"name":"is_set","qualname":"<Parser>::is_set","value":"fn (&self, s: AS) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs","byte_start":187740,"byte_end":187749,"line_start":528,"line_end":528,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":337},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs","byte_start":187856,"byte_end":187859,"line_start":534,"line_end":534,"column_start":12,"column_end":15},"name":"set","qualname":"<Parser>::set","value":"fn (&mut self, s: AS) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs","byte_start":187835,"byte_end":187844,"line_start":533,"line_end":533,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":338},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs","byte_start":187941,"byte_end":187946,"line_start":539,"line_end":539,"column_start":12,"column_end":17},"name":"unset","qualname":"<Parser>::unset","value":"fn (&mut self, s: AS) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs","byte_start":187920,"byte_end":187929,"line_start":538,"line_end":538,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":339},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs","byte_start":188086,"byte_end":188104,"line_start":544,"line_end":544,"column_start":12,"column_end":30},"name":"verify_positionals","qualname":"<Parser>::verify_positionals","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":343},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs","byte_start":194204,"byte_end":194221,"line_start":678,"line_end":678,"column_start":12,"column_end":29},"name":"propagate_globals","qualname":"<Parser>::propagate_globals","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":362},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs","byte_start":201779,"byte_end":201795,"line_start":883,"line_end":883,"column_start":12,"column_end":28},"name":"get_matches_with","qualname":"<Parser>::get_matches_with","value":"fn <I, T> (&mut self, matcher: &mut ArgMatcher<'a>, it: &mut Peekable<I>) -> ClapResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":379},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs","byte_start":223112,"byte_end":223126,"line_start":1391,"line_end":1391,"column_start":12,"column_end":26},"name":"groups_for_arg","qualname":"<Parser>::groups_for_arg","value":"fn (&self, name: &str) -> Option<Vec<&'a str>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":380},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs","byte_start":223813,"byte_end":223826,"line_start":1415,"line_end":1415,"column_start":12,"column_end":25},"name":"args_in_group","qualname":"<Parser>::args_in_group","value":"fn (&self, group: &str) -> Vec<String>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":386},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs","byte_start":224797,"byte_end":224815,"line_start":1446,"line_end":1446,"column_start":12,"column_end":30},"name":"arg_names_in_group","qualname":"<Parser>::arg_names_in_group","value":"fn (&self, group: &str) -> Vec<&'a str>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":390},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs","byte_start":225393,"byte_end":225416,"line_start":1468,"line_end":1468,"column_start":12,"column_end":35},"name":"create_help_and_version","qualname":"<Parser>::create_help_and_version","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":426},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs","byte_start":244996,"byte_end":245009,"line_start":1981,"line_end":1981,"column_start":12,"column_end":25},"name":"write_version","qualname":"<Parser>::write_version","value":"fn <W> (&self, w: &mut W, use_long: bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":430},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs","byte_start":245817,"byte_end":245827,"line_start":2003,"line_end":2003,"column_start":12,"column_end":22},"name":"print_help","qualname":"<Parser>::print_help","value":"fn (&self) -> ClapResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":431},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs","byte_start":245993,"byte_end":246003,"line_start":2009,"line_end":2009,"column_start":12,"column_end":22},"name":"write_help","qualname":"<Parser>::write_help","value":"fn <W> (&self, w: &mut W) -> ClapResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":433},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs","byte_start":246118,"byte_end":246133,"line_start":2013,"line_end":2013,"column_start":12,"column_end":27},"name":"write_long_help","qualname":"<Parser>::write_long_help","value":"fn <W> (&self, w: &mut W) -> ClapResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":435},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs","byte_start":246247,"byte_end":246261,"line_start":2017,"line_end":2017,"column_start":12,"column_end":26},"name":"write_help_err","qualname":"<Parser>::write_help_err","value":"fn <W> (&self, w: &mut W) -> ClapResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":437},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs","byte_start":246379,"byte_end":246391,"line_start":2021,"line_end":2021,"column_start":12,"column_end":24},"name":"add_defaults","qualname":"<Parser>::add_defaults","value":"fn (&mut self, matcher: &mut ArgMatcher<'a>) -> ClapResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":439},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs","byte_start":249755,"byte_end":249762,"line_start":2096,"line_end":2096,"column_start":12,"column_end":19},"name":"add_env","qualname":"<Parser>::add_env","value":"fn (&mut self, matcher: &mut ArgMatcher<'a>) -> ClapResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":441},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs","byte_start":251160,"byte_end":251165,"line_start":2135,"line_end":2135,"column_start":12,"column_end":17},"name":"flags","qualname":"<Parser>::flags","value":"fn (&self) -> Iter<FlagBuilder<'a, 'b>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":442},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs","byte_start":251248,"byte_end":251252,"line_start":2139,"line_end":2139,"column_start":12,"column_end":16},"name":"opts","qualname":"<Parser>::opts","value":"fn (&self) -> Iter<OptBuilder<'a, 'b>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":443},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs","byte_start":251333,"byte_end":251344,"line_start":2143,"line_end":2143,"column_start":12,"column_end":23},"name":"positionals","qualname":"<Parser>::positionals","value":"fn (&self) -> map::Values<PosBuilder<'a, 'b>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":444},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs","byte_start":251441,"byte_end":251452,"line_start":2147,"line_end":2147,"column_start":12,"column_end":23},"name":"subcommands","qualname":"<Parser>::subcommands","value":"fn (&self) -> Iter<App>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":445},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs","byte_start":251634,"byte_end":251639,"line_start":2153,"line_end":2153,"column_start":12,"column_end":17},"name":"color","qualname":"<Parser>::color","value":"fn (&self) -> ColorWhen","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":446},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs","byte_start":252067,"byte_end":252079,"line_start":2168,"line_end":2168,"column_start":12,"column_end":24},"name":"find_any_arg","qualname":"<Parser>::find_any_arg","value":"fn (&self, name: &str) -> Option<&AnyArg<'a, 'b>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":451},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs","byte_start":253329,"byte_end":253344,"line_start":2208,"line_end":2208,"column_start":12,"column_end":27},"name":"find_subcommand","qualname":"<Parser>::find_subcommand","value":"fn (&'b self, sc: &str) -> Option<&'b App<'a, 'b>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2350},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/settings.rs","byte_start":256483,"byte_end":256491,"line_start":56,"line_end":56,"column_start":12,"column_end":20},"name":"AppFlags","qualname":"::app::settings::AppFlags","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":466},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/settings.rs","byte_start":256963,"byte_end":256966,"line_start":79,"line_end":79,"column_start":12,"column_end":15},"name":"new","qualname":"<AppFlags>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":467},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/settings.rs","byte_start":257024,"byte_end":257030,"line_start":82,"line_end":82,"column_start":12,"column_end":18},"name":"zeroed","qualname":"<AppFlags>::zeroed","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2365},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/settings.rs","byte_start":261429,"byte_end":261445,"line_start":180,"line_end":180,"column_start":5,"column_end":21},"name":"AllowInvalidUtf8","qualname":"::app::settings::AppSettings::AllowInvalidUtf8","value":"AppSettings::AllowInvalidUtf8","parent":{"krate":0,"index":2364},"children":[],"decl_id":null,"docs":" Specifies that any invalid UTF-8 code points should *not* be treated as an error.\n This is the default behavior of `clap`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2367},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/settings.rs","byte_start":261804,"byte_end":261823,"line_start":187,"line_end":187,"column_start":5,"column_end":24},"name":"AllArgsOverrideSelf","qualname":"::app::settings::AppSettings::AllArgsOverrideSelf","value":"AppSettings::AllArgsOverrideSelf","parent":{"krate":0,"index":2364},"children":[],"decl_id":null,"docs":" Essentially sets [`Arg::overrides_with(\"itself\")`] for all arguments.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2369},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/settings.rs","byte_start":262872,"byte_end":262890,"line_start":212,"line_end":212,"column_start":5,"column_end":23},"name":"AllowLeadingHyphen","qualname":"::app::settings::AppSettings::AllowLeadingHyphen","value":"AppSettings::AllowLeadingHyphen","parent":{"krate":0,"index":2364},"children":[],"decl_id":null,"docs":" Specifies that leading hyphens are allowed in argument *values*, such as negative numbers\n like `-10`. (which would otherwise be parsed as another flag or option)","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2371},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/settings.rs","byte_start":263653,"byte_end":263673,"line_start":234,"line_end":234,"column_start":5,"column_end":25},"name":"AllowNegativeNumbers","qualname":"::app::settings::AppSettings::AllowNegativeNumbers","value":"AppSettings::AllowNegativeNumbers","parent":{"krate":0,"index":2364},"children":[],"decl_id":null,"docs":" Allows negative numbers to pass as values. This is similar to\n `AllowLeadingHyphen` except that it only allows numbers, all\n other undefined leading hyphens will fail to parse.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2373},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/settings.rs","byte_start":268068,"byte_end":268090,"line_start":341,"line_end":341,"column_start":5,"column_end":27},"name":"AllowMissingPositional","qualname":"::app::settings::AppSettings::AllowMissingPositional","value":"AppSettings::AllowMissingPositional","parent":{"krate":0,"index":2364},"children":[],"decl_id":null,"docs":" Allows one to implement two styles of CLIs where positionals can be used out of order.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2375},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/settings.rs","byte_start":269675,"byte_end":269699,"line_start":377,"line_end":377,"column_start":5,"column_end":29},"name":"AllowExternalSubcommands","qualname":"::app::settings::AppSettings::AllowExternalSubcommands","value":"AppSettings::AllowExternalSubcommands","parent":{"krate":0,"index":2364},"children":[],"decl_id":null,"docs":" Specifies that an unexpected positional argument,\n which would otherwise cause a [`ErrorKind::UnknownArgument`] error,\n should instead be treated as a [`SubCommand`] within the [`ArgMatches`] struct.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2377},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/settings.rs","byte_start":270535,"byte_end":270556,"line_start":399,"line_end":399,"column_start":5,"column_end":26},"name":"ArgsNegateSubcommands","qualname":"::app::settings::AppSettings::ArgsNegateSubcommands","value":"AppSettings::ArgsNegateSubcommands","parent":{"krate":0,"index":2364},"children":[],"decl_id":null,"docs":" Specifies that use of a valid [argument] negates [subcommands] being used after. By default\n `clap` allows arguments between subcommands such as\n `<cmd> [cmd_args] <cmd2> [cmd2_args] <cmd3> [cmd3_args]`. This setting disables that\n functionality and says that arguments can only follow the *final* subcommand. For instance\n using this setting makes only the following invocations possible:","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2379},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/settings.rs","byte_start":271267,"byte_end":271286,"line_start":419,"line_end":419,"column_start":5,"column_end":24},"name":"ArgRequiredElseHelp","qualname":"::app::settings::AppSettings::ArgRequiredElseHelp","value":"AppSettings::ArgRequiredElseHelp","parent":{"krate":0,"index":2364},"children":[],"decl_id":null,"docs":" Specifies that the help text should be displayed (and then exit gracefully),\n if no arguments are present at runtime (i.e. an empty run such as, `$ myprog`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2381},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/settings.rs","byte_start":271762,"byte_end":271773,"line_start":437,"line_end":437,"column_start":5,"column_end":16},"name":"ColoredHelp","qualname":"::app::settings::AppSettings::ColoredHelp","value":"AppSettings::ColoredHelp","parent":{"krate":0,"index":2364},"children":[],"decl_id":null,"docs":" Uses colorized help messages.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2383},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/settings.rs","byte_start":272360,"byte_end":272369,"line_start":457,"line_end":457,"column_start":5,"column_end":14},"name":"ColorAuto","qualname":"::app::settings::AppSettings::ColorAuto","value":"AppSettings::ColorAuto","parent":{"krate":0,"index":2364},"children":[],"decl_id":null,"docs":" Enables colored output only when the output is going to a terminal or TTY.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2385},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/settings.rs","byte_start":272908,"byte_end":272919,"line_start":475,"line_end":475,"column_start":5,"column_end":16},"name":"ColorAlways","qualname":"::app::settings::AppSettings::ColorAlways","value":"AppSettings::ColorAlways","parent":{"krate":0,"index":2364},"children":[],"decl_id":null,"docs":" Enables colored output regardless of whether or not the output is going to a terminal/TTY.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2387},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/settings.rs","byte_start":273448,"byte_end":273458,"line_start":493,"line_end":493,"column_start":5,"column_end":15},"name":"ColorNever","qualname":"::app::settings::AppSettings::ColorNever","value":"AppSettings::ColorNever","parent":{"krate":0,"index":2364},"children":[],"decl_id":null,"docs":" Disables colored output no matter if the output is going to a terminal/TTY, or not.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2389},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/settings.rs","byte_start":273800,"byte_end":273823,"line_start":505,"line_end":505,"column_start":5,"column_end":28},"name":"DontCollapseArgsInUsage","qualname":"::app::settings::AppSettings::DontCollapseArgsInUsage","value":"AppSettings::DontCollapseArgsInUsage","parent":{"krate":0,"index":2364},"children":[],"decl_id":null,"docs":" Disables the automatic collapsing of positional args into `[ARGS]` inside the usage string","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2391},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/settings.rs","byte_start":274582,"byte_end":274607,"line_start":524,"line_end":524,"column_start":5,"column_end":30},"name":"DontDelimitTrailingValues","qualname":"::app::settings::AppSettings::DontDelimitTrailingValues","value":"AppSettings::DontDelimitTrailingValues","parent":{"krate":0,"index":2364},"children":[],"decl_id":null,"docs":" Disables the automatic delimiting of values when `--` or [`AppSettings::TrailingVarArg`]\n was used.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2393},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/settings.rs","byte_start":275684,"byte_end":275700,"line_start":555,"line_end":555,"column_start":5,"column_end":21},"name":"DisableHelpFlags","qualname":"::app::settings::AppSettings::DisableHelpFlags","value":"AppSettings::DisableHelpFlags","parent":{"krate":0,"index":2364},"children":[],"decl_id":null,"docs":" Disables `-h` and `--help` [`App`] without affecting any of the [`SubCommand`]s\n (Defaults to `false`; application *does* have help flags)","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2395},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/settings.rs","byte_start":276418,"byte_end":276439,"line_start":576,"line_end":576,"column_start":5,"column_end":26},"name":"DisableHelpSubcommand","qualname":"::app::settings::AppSettings::DisableHelpSubcommand","value":"AppSettings::DisableHelpSubcommand","parent":{"krate":0,"index":2364},"children":[],"decl_id":null,"docs":" Disables the `help` subcommand","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2397},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/settings.rs","byte_start":277580,"byte_end":277594,"line_start":609,"line_end":609,"column_start":5,"column_end":19},"name":"DisableVersion","qualname":"::app::settings::AppSettings::DisableVersion","value":"AppSettings::DisableVersion","parent":{"krate":0,"index":2364},"children":[],"decl_id":null,"docs":" Disables `-V` and `--version` [`App`] without affecting any of the [`SubCommand`]s\n (Defaults to `false`; application *does* have a version flag)","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2399},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/settings.rs","byte_start":278046,"byte_end":278064,"line_start":623,"line_end":623,"column_start":5,"column_end":23},"name":"DeriveDisplayOrder","qualname":"::app::settings::AppSettings::DeriveDisplayOrder","value":"AppSettings::DeriveDisplayOrder","parent":{"krate":0,"index":2364},"children":[],"decl_id":null,"docs":" Displays the arguments and [`SubCommand`]s in the help message in the order that they were\n declared in, and not alphabetically which is the default.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2401},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/settings.rs","byte_start":278850,"byte_end":278863,"line_start":644,"line_end":644,"column_start":5,"column_end":18},"name":"GlobalVersion","qualname":"::app::settings::AppSettings::GlobalVersion","value":"AppSettings::GlobalVersion","parent":{"krate":0,"index":2364},"children":[],"decl_id":null,"docs":" Specifies to use the version of the current command for all child [`SubCommand`]s.\n (Defaults to `false`; subcommands have independent version strings from their parents.)","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2403},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/settings.rs","byte_start":279254,"byte_end":279260,"line_start":658,"line_end":658,"column_start":5,"column_end":11},"name":"Hidden","qualname":"::app::settings::AppSettings::Hidden","value":"AppSettings::Hidden","parent":{"krate":0,"index":2364},"children":[],"decl_id":null,"docs":" Specifies that this [`SubCommand`] should be hidden from help messages","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2405},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/settings.rs","byte_start":279439,"byte_end":279463,"line_start":662,"line_end":662,"column_start":5,"column_end":29},"name":"HidePossibleValuesInHelp","qualname":"::app::settings::AppSettings::HidePossibleValuesInHelp","value":"AppSettings::HidePossibleValuesInHelp","parent":{"krate":0,"index":2364},"children":[],"decl_id":null,"docs":" Tells `clap` *not* to print possible values when displaying help information.\n This can be useful if there are many values, or they are explained elsewhere.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2407},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/settings.rs","byte_start":280961,"byte_end":280977,"line_start":692,"line_end":692,"column_start":5,"column_end":21},"name":"InferSubcommands","qualname":"::app::settings::AppSettings::InferSubcommands","value":"AppSettings::InferSubcommands","parent":{"krate":0,"index":2364},"children":[],"decl_id":null,"docs":" Tries to match unknown args to partial [`subcommands`] or their [aliases]. For example to\n match a subcommand named `test`, one could use `t`, `te`, `tes`, and `test`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2409},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/settings.rs","byte_start":281696,"byte_end":281708,"line_start":710,"line_end":710,"column_start":5,"column_end":17},"name":"NoBinaryName","qualname":"::app::settings::AppSettings::NoBinaryName","value":"AppSettings::NoBinaryName","parent":{"krate":0,"index":2364},"children":[],"decl_id":null,"docs":" Specifies that the parser should not assume the first argument passed is the binary name.\n This is normally the case when using a \"daemon\" style mode, or an interactive CLI where one\n one would not normally type the binary or program name for each command.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2411},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/settings.rs","byte_start":282021,"byte_end":282033,"line_start":722,"line_end":722,"column_start":5,"column_end":17},"name":"NextLineHelp","qualname":"::app::settings::AppSettings::NextLineHelp","value":"AppSettings::NextLineHelp","parent":{"krate":0,"index":2364},"children":[],"decl_id":null,"docs":" Places the help string for all arguments on the line after the argument.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2413},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/settings.rs","byte_start":283575,"byte_end":283600,"line_start":761,"line_end":761,"column_start":5,"column_end":30},"name":"PropagateGlobalValuesDown","qualname":"::app::settings::AppSettings::PropagateGlobalValuesDown","value":"AppSettings::PropagateGlobalValuesDown","parent":{"krate":0,"index":2364},"children":[],"decl_id":null,"docs":" **DEPRECATED**: This setting is no longer required in order to propagate values up or down","sig":null,"attributes":[{"value":"deprecated(since = \"2.27.0\", note =\n             \"No longer required to propagate values\")","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/settings.rs","byte_start":283490,"byte_end":283570,"line_start":760,"line_end":760,"column_start":5,"column_end":85}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2415},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/settings.rs","byte_start":285463,"byte_end":285484,"line_start":806,"line_end":806,"column_start":5,"column_end":26},"name":"SubcommandsNegateReqs","qualname":"::app::settings::AppSettings::SubcommandsNegateReqs","value":"AppSettings::SubcommandsNegateReqs","parent":{"krate":0,"index":2364},"children":[],"decl_id":null,"docs":" Allows [`SubCommand`]s to override all requirements of the parent command.\n For example if you had a subcommand or top level application with a required argument\n that is only required as long as there is no subcommand present,\n using this setting would allow you to set those arguments to [`Arg::required(true)`]\n and yet receive no error so long as the user uses a valid subcommand instead.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2417},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/settings.rs","byte_start":286560,"byte_end":286586,"line_start":829,"line_end":829,"column_start":5,"column_end":31},"name":"SubcommandRequiredElseHelp","qualname":"::app::settings::AppSettings::SubcommandRequiredElseHelp","value":"AppSettings::SubcommandRequiredElseHelp","parent":{"krate":0,"index":2364},"children":[],"decl_id":null,"docs":" Specifies that the help text should be displayed (before exiting gracefully) if no\n [`SubCommand`]s are present at runtime (i.e. an empty run such as `$ myprog`).","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2419},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/settings.rs","byte_start":287779,"byte_end":287789,"line_start":862,"line_end":862,"column_start":5,"column_end":15},"name":"StrictUtf8","qualname":"::app::settings::AppSettings::StrictUtf8","value":"AppSettings::StrictUtf8","parent":{"krate":0,"index":2364},"children":[],"decl_id":null,"docs":" Specifies that any invalid UTF-8 code points should be treated as an error and fail\n with a [`ErrorKind::InvalidUtf8`] error.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2421},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/settings.rs","byte_start":288519,"byte_end":288537,"line_start":884,"line_end":884,"column_start":5,"column_end":23},"name":"SubcommandRequired","qualname":"::app::settings::AppSettings::SubcommandRequired","value":"AppSettings::SubcommandRequired","parent":{"krate":0,"index":2364},"children":[],"decl_id":null,"docs":" Allows specifying that if no [`SubCommand`] is present at runtime,\n error and exit gracefully.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2423},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/settings.rs","byte_start":289438,"byte_end":289452,"line_start":907,"line_end":907,"column_start":5,"column_end":19},"name":"TrailingVarArg","qualname":"::app::settings::AppSettings::TrailingVarArg","value":"AppSettings::TrailingVarArg","parent":{"krate":0,"index":2364},"children":[],"decl_id":null,"docs":" Specifies that the final positional argument is a \"VarArg\" and that `clap` should not\n attempt to parse any further args.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2425},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/settings.rs","byte_start":290128,"byte_end":290146,"line_start":926,"line_end":926,"column_start":5,"column_end":23},"name":"UnifiedHelpMessage","qualname":"::app::settings::AppSettings::UnifiedHelpMessage","value":"AppSettings::UnifiedHelpMessage","parent":{"krate":0,"index":2364},"children":[],"decl_id":null,"docs":" Groups flags and options together, presenting a more unified help message\n (a la `getopts` or `docopt` style).","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2427},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/settings.rs","byte_start":290923,"byte_end":290945,"line_start":948,"line_end":948,"column_start":5,"column_end":27},"name":"VersionlessSubcommands","qualname":"::app::settings::AppSettings::VersionlessSubcommands","value":"AppSettings::VersionlessSubcommands","parent":{"krate":0,"index":2364},"children":[],"decl_id":null,"docs":" Disables `-V` and `--version` for all [`SubCommand`]s\n (Defaults to `false`; subcommands *do* have version flags.)","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2429},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/settings.rs","byte_start":291751,"byte_end":291762,"line_start":970,"line_end":970,"column_start":5,"column_end":16},"name":"WaitOnError","qualname":"::app::settings::AppSettings::WaitOnError","value":"AppSettings::WaitOnError","parent":{"krate":0,"index":2364},"children":[],"decl_id":null,"docs":" Will display a message \"Press \\[ENTER\\]/\\[RETURN\\] to continue...\" and wait for user before\n exiting","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2431},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/settings.rs","byte_start":291788,"byte_end":291804,"line_start":973,"line_end":973,"column_start":5,"column_end":21},"name":"NeedsLongVersion","qualname":"::app::settings::AppSettings::NeedsLongVersion","value":"AppSettings::NeedsLongVersion","parent":{"krate":0,"index":2364},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2433},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/settings.rs","byte_start":291830,"byte_end":291843,"line_start":976,"line_end":976,"column_start":5,"column_end":18},"name":"NeedsLongHelp","qualname":"::app::settings::AppSettings::NeedsLongHelp","value":"AppSettings::NeedsLongHelp","parent":{"krate":0,"index":2364},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2435},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/settings.rs","byte_start":291869,"byte_end":291888,"line_start":979,"line_end":979,"column_start":5,"column_end":24},"name":"NeedsSubcommandHelp","qualname":"::app::settings::AppSettings::NeedsSubcommandHelp","value":"AppSettings::NeedsSubcommandHelp","parent":{"krate":0,"index":2364},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2437},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/settings.rs","byte_start":291914,"byte_end":291940,"line_start":982,"line_end":982,"column_start":5,"column_end":31},"name":"LowIndexMultiplePositional","qualname":"::app::settings::AppSettings::LowIndexMultiplePositional","value":"AppSettings::LowIndexMultiplePositional","parent":{"krate":0,"index":2364},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2439},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/settings.rs","byte_start":291966,"byte_end":291980,"line_start":985,"line_end":985,"column_start":5,"column_end":19},"name":"TrailingValues","qualname":"::app::settings::AppSettings::TrailingValues","value":"AppSettings::TrailingValues","parent":{"krate":0,"index":2364},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2441},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/settings.rs","byte_start":292006,"byte_end":292022,"line_start":988,"line_end":988,"column_start":5,"column_end":21},"name":"ValidNegNumFound","qualname":"::app::settings::AppSettings::ValidNegNumFound","value":"AppSettings::ValidNegNumFound","parent":{"krate":0,"index":2364},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2443},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/settings.rs","byte_start":292048,"byte_end":292058,"line_start":991,"line_end":991,"column_start":5,"column_end":15},"name":"Propagated","qualname":"::app::settings::AppSettings::Propagated","value":"AppSettings::Propagated","parent":{"krate":0,"index":2364},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2445},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/settings.rs","byte_start":292084,"byte_end":292097,"line_start":994,"line_end":994,"column_start":5,"column_end":18},"name":"ValidArgFound","qualname":"::app::settings::AppSettings::ValidArgFound","value":"AppSettings::ValidArgFound","parent":{"krate":0,"index":2364},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2447},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/settings.rs","byte_start":292123,"byte_end":292135,"line_start":997,"line_end":997,"column_start":5,"column_end":17},"name":"ContainsLast","qualname":"::app::settings::AppSettings::ContainsLast","value":"AppSettings::ContainsLast","parent":{"krate":0,"index":2364},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2364},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/settings.rs","byte_start":259624,"byte_end":259635,"line_start":139,"line_end":139,"column_start":10,"column_end":21},"name":"AppSettings","qualname":"::app::settings::AppSettings","value":"AppSettings::{AllowInvalidUtf8, AllArgsOverrideSelf, AllowLeadingHyphen, AllowNegativeNumbers, AllowMissingPositional, AllowExternalSubcommands, ArgsNegateSubcommands, ArgRequiredElseHelp, ColoredHelp, ColorAuto, ColorAlways, ColorNever, DontCollapseArgsInUsage, DontDelimitTrailingValues, DisableHelpFlags, DisableHelpSubcommand, DisableVersion, DeriveDisplayOrder, GlobalVersion, Hidden, HidePossibleValuesInHelp, InferSubcommands, NoBinaryName, NextLineHelp, PropagateGlobalValuesDown, SubcommandsNegateReqs, SubcommandRequiredElseHelp, StrictUtf8, SubcommandRequired, TrailingVarArg, UnifiedHelpMessage, VersionlessSubcommands, WaitOnError, NeedsLongVersion, NeedsLongHelp, NeedsSubcommandHelp, LowIndexMultiplePositional, TrailingValues, ValidNegNumFound, Propagated, ValidArgFound, ContainsLast}","parent":null,"children":[{"krate":0,"index":2365},{"krate":0,"index":2367},{"krate":0,"index":2369},{"krate":0,"index":2371},{"krate":0,"index":2373},{"krate":0,"index":2375},{"krate":0,"index":2377},{"krate":0,"index":2379},{"krate":0,"index":2381},{"krate":0,"index":2383},{"krate":0,"index":2385},{"krate":0,"index":2387},{"krate":0,"index":2389},{"krate":0,"index":2391},{"krate":0,"index":2393},{"krate":0,"index":2395},{"krate":0,"index":2397},{"krate":0,"index":2399},{"krate":0,"index":2401},{"krate":0,"index":2403},{"krate":0,"index":2405},{"krate":0,"index":2407},{"krate":0,"index":2409},{"krate":0,"index":2411},{"krate":0,"index":2413},{"krate":0,"index":2415},{"krate":0,"index":2417},{"krate":0,"index":2419},{"krate":0,"index":2421},{"krate":0,"index":2423},{"krate":0,"index":2425},{"krate":0,"index":2427},{"krate":0,"index":2429},{"krate":0,"index":2431},{"krate":0,"index":2433},{"krate":0,"index":2435},{"krate":0,"index":2437},{"krate":0,"index":2439},{"krate":0,"index":2441},{"krate":0,"index":2443},{"krate":0,"index":2445},{"krate":0,"index":2447}],"decl_id":null,"docs":" Application level settings, which affect how [`App`] operates","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":661},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs","byte_start":63984,"byte_end":63987,"line_start":60,"line_end":60,"column_start":12,"column_end":15},"name":"App","qualname":"::app::App","value":"App { p }","parent":null,"children":[{"krate":0,"index":664}],"decl_id":null,"docs":" Used to create a representation of a command line program and all possible command line\n arguments. Application settings are set using the \"builder pattern\" with the\n [`App::get_matches`] family of methods being the terminal methods that starts the\n runtime-parsing process. These methods then return information about the user supplied\n arguments (or lack there of).","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs","byte_start":63933,"byte_end":63972,"line_start":59,"line_end":59,"column_start":1,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":664},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs","byte_start":64043,"byte_end":64044,"line_start":65,"line_end":65,"column_start":9,"column_end":10},"name":"p","qualname":"::app::App::p","value":"app::parser::Parser<'a, 'b>","parent":{"krate":0,"index":661},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":668},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs","byte_start":64502,"byte_end":64505,"line_start":80,"line_end":80,"column_start":12,"column_end":15},"name":"new","qualname":"<App>::new","value":"fn <S> (n: S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new instance of an application requiring a name. The name may be, but doesn't\n have to be same as the binary. The name will be displayed to the user when they request to\n print version or help and usage information.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":670},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs","byte_start":64657,"byte_end":64665,"line_start":87,"line_end":87,"column_start":12,"column_end":20},"name":"get_name","qualname":"<App>::get_name","value":"fn (&self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Get the name of the app\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":671},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs","byte_start":64762,"byte_end":64774,"line_start":92,"line_end":92,"column_start":12,"column_end":24},"name":"get_bin_name","qualname":"<App>::get_bin_name","value":"fn (&self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Get the name of the binary\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":673},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs","byte_start":65605,"byte_end":65618,"line_start":114,"line_end":114,"column_start":12,"column_end":25},"name":"with_defaults","qualname":"<App>::with_defaults","value":"fn <S> (n: S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new instance of an application requiring a name, but uses the [`crate_authors!`]\n and [`crate_version!`] macros to fill in the [`App::author`] and [`App::version`] fields.","sig":null,"attributes":[{"value":"deprecated(since = \"2.14.1\", note =\n             \"Can never work; use explicit App::author() and App::version() calls instead\")","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs","byte_start":65454,"byte_end":65593,"line_start":110,"line_end":113,"column_start":5,"column_end":7}}]},{"kind":"Method","id":{"krate":0,"index":675},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs","byte_start":68688,"byte_end":68694,"line_start":187,"line_end":187,"column_start":12,"column_end":18},"name":"author","qualname":"<App>::author","value":"fn <S> (mut self, author: S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets a string of author(s) that will be displayed to the user when they\n request the help information with `--help` or `-h`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":677},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs","byte_start":69509,"byte_end":69517,"line_start":210,"line_end":210,"column_start":12,"column_end":20},"name":"bin_name","qualname":"<App>::bin_name","value":"fn <S> (mut self, name: S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Overrides the system-determined binary name. This should only be used when absolutely\n necessary, such as when the binary name for your application is misleading, or perhaps\n *not* how the user should invoke your program.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":679},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs","byte_start":70343,"byte_end":70348,"line_start":233,"line_end":233,"column_start":12,"column_end":17},"name":"about","qualname":"<App>::about","value":"fn <S> (mut self, about: S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets a string describing what the program does. This will be displayed when displaying help\n information with `-h`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":681},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs","byte_start":71320,"byte_end":71330,"line_start":259,"line_end":259,"column_start":12,"column_end":22},"name":"long_about","qualname":"<App>::long_about","value":"fn <S> (mut self, about: S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets a string describing what the program does. This will be displayed when displaying help\n information.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":683},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs","byte_start":72263,"byte_end":72267,"line_start":286,"line_end":286,"column_start":12,"column_end":16},"name":"name","qualname":"<App>::name","value":"fn <S> (mut self, name: S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the program's name. This will be displayed when displaying help information.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":685},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs","byte_start":72876,"byte_end":72886,"line_start":303,"line_end":303,"column_start":12,"column_end":22},"name":"after_help","qualname":"<App>::after_help","value":"fn <S> (mut self, help: S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Adds additional help information to be displayed in addition to auto-generated help. This\n information is displayed **after** the auto-generated help information. This is often used\n to describe how to use the arguments, or caveats to be noted.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":687},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs","byte_start":73453,"byte_end":73464,"line_start":320,"line_end":320,"column_start":12,"column_end":23},"name":"before_help","qualname":"<App>::before_help","value":"fn <S> (mut self, help: S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Adds additional help information to be displayed in addition to auto-generated help. This\n information is displayed **before** the auto-generated help information. This is often used\n for header information.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":689},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs","byte_start":74522,"byte_end":74529,"line_start":346,"line_end":346,"column_start":12,"column_end":19},"name":"version","qualname":"<App>::version","value":"fn <S> (mut self, ver: S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets a string of the version number to be displayed when displaying version or help\n information with `-V`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":691},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs","byte_start":75690,"byte_end":75702,"line_start":377,"line_end":377,"column_start":12,"column_end":24},"name":"long_version","qualname":"<App>::long_version","value":"fn <S> (mut self, ver: S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets a string of the version number to be displayed when displaying version or help\n information with `--version`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":693},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs","byte_start":76821,"byte_end":76826,"line_start":406,"line_end":406,"column_start":12,"column_end":17},"name":"usage","qualname":"<App>::usage","value":"fn <S> (mut self, usage: S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets a custom usage string to override the auto-generated usage string.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":695},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs","byte_start":78337,"byte_end":78341,"line_start":445,"line_end":445,"column_start":12,"column_end":16},"name":"help","qualname":"<App>::help","value":"fn <S> (mut self, help: S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets a custom help message and overrides the auto-generated one. This should only be used\n when the auto-generated message does not suffice.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":697},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs","byte_start":79362,"byte_end":79372,"line_start":471,"line_end":471,"column_start":12,"column_end":22},"name":"help_short","qualname":"<App>::help_short","value":"fn <S> (mut self, s: S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the [`short`] for the auto-generated `help` argument.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":699},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs","byte_start":80386,"byte_end":80399,"line_start":497,"line_end":497,"column_start":12,"column_end":25},"name":"version_short","qualname":"<App>::version_short","value":"fn <S> (mut self, s: S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the [`short`] for the auto-generated `version` argument.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":701},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs","byte_start":81039,"byte_end":81051,"line_start":517,"line_end":517,"column_start":12,"column_end":24},"name":"help_message","qualname":"<App>::help_message","value":"fn <S> (mut self, s: S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the help text for the auto-generated `help` argument.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":703},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs","byte_start":81697,"byte_end":81712,"line_start":535,"line_end":535,"column_start":12,"column_end":27},"name":"version_message","qualname":"<App>::version_message","value":"fn <S> (mut self, s: S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the help text for the auto-generated `version` argument.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":705},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs","byte_start":83703,"byte_end":83711,"line_start":579,"line_end":579,"column_start":12,"column_end":20},"name":"template","qualname":"<App>::template","value":"fn <S> (mut self, s: S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the help template to be used, overriding the default format.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":707},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs","byte_start":84334,"byte_end":84341,"line_start":599,"line_end":599,"column_start":12,"column_end":19},"name":"setting","qualname":"<App>::setting","value":"fn (mut self, setting: AppSettings) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Enables a single command, or [`SubCommand`], level settings.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":708},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs","byte_start":84951,"byte_end":84959,"line_start":619,"line_end":619,"column_start":12,"column_end":20},"name":"settings","qualname":"<App>::settings","value":"fn (mut self, settings: &[AppSettings]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Enables multiple command, or [`SubCommand`], level settings","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":709},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs","byte_start":85688,"byte_end":85702,"line_start":642,"line_end":642,"column_start":12,"column_end":26},"name":"global_setting","qualname":"<App>::global_setting","value":"fn (mut self, setting: AppSettings) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Enables a single setting that is propagated down through all child [`SubCommand`]s.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":710},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs","byte_start":86490,"byte_end":86505,"line_start":665,"line_end":665,"column_start":12,"column_end":27},"name":"global_settings","qualname":"<App>::global_settings","value":"fn (mut self, settings: &[AppSettings]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Enables multiple settings which are propagated *down* through all child [`SubCommand`]s.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":711},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs","byte_start":87132,"byte_end":87145,"line_start":687,"line_end":687,"column_start":12,"column_end":25},"name":"unset_setting","qualname":"<App>::unset_setting","value":"fn (mut self, setting: AppSettings) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Disables a single command, or [`SubCommand`], level setting.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":712},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs","byte_start":87761,"byte_end":87775,"line_start":707,"line_end":707,"column_start":12,"column_end":26},"name":"unset_settings","qualname":"<App>::unset_settings","value":"fn (mut self, settings: &[AppSettings]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Disables multiple command, or [`SubCommand`], level settings.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":713},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs","byte_start":88940,"byte_end":88954,"line_start":739,"line_end":739,"column_start":12,"column_end":26},"name":"set_term_width","qualname":"<App>::set_term_width","value":"fn (mut self, width: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the terminal width at which to wrap help messages. Defaults to `120`. Using `0` will\n ignore terminal widths and use source formatting.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":714},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs","byte_start":89959,"byte_end":89973,"line_start":767,"line_end":767,"column_start":12,"column_end":26},"name":"max_term_width","qualname":"<App>::max_term_width","value":"fn (mut self, w: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the max terminal width at which to wrap help messages. Using `0` will ignore terminal\n widths and use source formatting.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":715},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs","byte_start":90830,"byte_end":90833,"line_start":793,"line_end":793,"column_start":12,"column_end":15},"name":"arg","qualname":"<App>::arg","value":"fn <A> (mut self, a: A) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Adds an [argument] to the list of valid possibilities.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":717},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs","byte_start":91380,"byte_end":91384,"line_start":812,"line_end":812,"column_start":12,"column_end":16},"name":"args","qualname":"<App>::args","value":"fn (mut self, args: &[Arg<'a, 'b>]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Adds multiple [arguments] to the list of valid possibilities","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":718},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs","byte_start":92236,"byte_end":92250,"line_start":836,"line_end":836,"column_start":12,"column_end":26},"name":"arg_from_usage","qualname":"<App>::arg_from_usage","value":"fn (mut self, usage: &'a str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" A convenience method for adding a single [argument] from a usage type string. The string\n used follows the same rules and syntax as [`Arg::from_usage`]","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":719},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs","byte_start":93248,"byte_end":93263,"line_start":863,"line_end":863,"column_start":12,"column_end":27},"name":"args_from_usage","qualname":"<App>::args_from_usage","value":"fn (mut self, usage: &'a str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Adds multiple [arguments] at once from a usage string, one per line. See\n [`Arg::from_usage`] for details on the syntax and rules supported.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":720},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs","byte_start":94279,"byte_end":94284,"line_start":890,"line_end":890,"column_start":12,"column_end":17},"name":"alias","qualname":"<App>::alias","value":"fn <S> (mut self, name: S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Allows adding a [`SubCommand`] alias, which function as \"hidden\" subcommands that\n automatically dispatch as if this subcommand was used. This is more efficient, and easier\n than creating multiple hidden subcommands as one only needs to check for the existence of\n this command, and not all variants.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":722},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs","byte_start":95548,"byte_end":95555,"line_start":919,"line_end":919,"column_start":12,"column_end":19},"name":"aliases","qualname":"<App>::aliases","value":"fn (mut self, names: &[&'b str]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Allows adding [`SubCommand`] aliases, which function as \"hidden\" subcommands that\n automatically dispatch as if this subcommand was used. This is more efficient, and easier\n than creating multiple hidden subcommands as one only needs to check for the existence of\n this command, and not all variants.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":724},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs","byte_start":96540,"byte_end":96553,"line_start":945,"line_end":945,"column_start":12,"column_end":25},"name":"visible_alias","qualname":"<App>::visible_alias","value":"fn <S> (mut self, name: S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Allows adding a [`SubCommand`] alias that functions exactly like those defined with\n [`App::alias`], except that they are visible inside the help message.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":726},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs","byte_start":97509,"byte_end":97524,"line_start":969,"line_end":969,"column_start":12,"column_end":27},"name":"visible_aliases","qualname":"<App>::visible_aliases","value":"fn (mut self, names: &[&'b str]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Allows adding multiple [`SubCommand`] aliases that functions exactly like those defined\n with [`App::aliases`], except that they are visible inside the help message.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":728},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs","byte_start":99495,"byte_end":99500,"line_start":1014,"line_end":1014,"column_start":12,"column_end":17},"name":"group","qualname":"<App>::group","value":"fn (mut self, group: ArgGroup<'a>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Adds an [`ArgGroup`] to the application. [`ArgGroup`]s are a family of related arguments.\n By placing them in a logical group, you can build easier requirement and exclusion rules.\n For instance, you can make an entire [`ArgGroup`] required, meaning that one (and *only*\n one) argument from that group must be present at runtime.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":729},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs","byte_start":100507,"byte_end":100513,"line_start":1044,"line_end":1044,"column_start":12,"column_end":18},"name":"groups","qualname":"<App>::groups","value":"fn (mut self, groups: &[ArgGroup<'a>]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Adds multiple [`ArgGroup`]s to the [`App`] at once.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":730},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs","byte_start":101414,"byte_end":101424,"line_start":1068,"line_end":1068,"column_start":12,"column_end":22},"name":"subcommand","qualname":"<App>::subcommand","value":"fn (mut self, subcmd: App<'a, 'b>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Adds a [`SubCommand`] to the list of valid possibilities. Subcommands are effectively\n sub-[`App`]s, because they can contain their own arguments, subcommands, version, usage,\n etc. They also function just like [`App`]s, in that they get their own auto generated help,\n version, and usage.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":731},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs","byte_start":102245,"byte_end":102256,"line_start":1089,"line_end":1089,"column_start":12,"column_end":23},"name":"subcommands","qualname":"<App>::subcommands","value":"fn <I> (mut self, subcmds: I) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Adds multiple subcommands to the list of valid possibilities by iterating over an\n [`IntoIterator`] of [`SubCommand`]s","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":733},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs","byte_start":104653,"byte_end":104666,"line_start":1146,"line_end":1146,"column_start":12,"column_end":25},"name":"display_order","qualname":"<App>::display_order","value":"fn (mut self, ord: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Allows custom ordering of [`SubCommand`]s within the help message. Subcommands with a lower\n value will be displayed first in the help message. This is helpful when one would like to\n emphasise frequently used subcommands, or prioritize those towards the top of the list.\n Duplicate values **are** allowed. Subcommands with duplicate display orders will be\n displayed in alphabetical order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":734},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs","byte_start":105526,"byte_end":105536,"line_start":1168,"line_end":1168,"column_start":12,"column_end":22},"name":"print_help","qualname":"<App>::print_help","value":"fn (&mut self) -> ClapResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Prints the full help message to [`io::stdout()`] using a [`BufWriter`] using the same\n method as if someone ran `-h` to request the help message","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":735},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs","byte_start":106788,"byte_end":106803,"line_start":1198,"line_end":1198,"column_start":12,"column_end":27},"name":"print_long_help","qualname":"<App>::print_long_help","value":"fn (&mut self) -> ClapResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Prints the full help message to [`io::stdout()`] using a [`BufWriter`] using the same\n method as if someone ran `--help` to request the help message","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":736},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs","byte_start":107968,"byte_end":107978,"line_start":1226,"line_end":1226,"column_start":12,"column_end":22},"name":"write_help","qualname":"<App>::write_help","value":"fn <W> (&self, w: &mut W) -> ClapResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Writes the full help message to the user to a [`io::Write`] object in the same method as if\n the user ran `-h`","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":738},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs","byte_start":109261,"byte_end":109276,"line_start":1257,"line_end":1257,"column_start":12,"column_end":27},"name":"write_long_help","qualname":"<App>::write_long_help","value":"fn <W> (&mut self, w: &mut W) -> ClapResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Writes the full help message to the user to a [`io::Write`] object in the same method as if\n the user ran `--help`","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":740},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs","byte_start":110442,"byte_end":110455,"line_start":1285,"line_end":1285,"column_start":12,"column_end":25},"name":"write_version","qualname":"<App>::write_version","value":"fn <W> (&self, w: &mut W) -> ClapResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Writes the version message to the user to a [`io::Write`] object as if the user ran `-V`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":742},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs","byte_start":111299,"byte_end":111317,"line_start":1306,"line_end":1306,"column_start":12,"column_end":30},"name":"write_long_version","qualname":"<App>::write_long_version","value":"fn <W> (&self, w: &mut W) -> ClapResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Writes the version message to the user to a [`io::Write`] object","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":744},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs","byte_start":114460,"byte_end":114475,"line_start":1393,"line_end":1393,"column_start":12,"column_end":27},"name":"gen_completions","qualname":"<App>::gen_completions","value":"fn <T, S> (&mut self, bin_name: S, for_shell: Shell, out_dir: T) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Generate a completions file for a specified shell at compile time.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":747},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs","byte_start":115832,"byte_end":115850,"line_start":1435,"line_end":1435,"column_start":12,"column_end":30},"name":"gen_completions_to","qualname":"<App>::gen_completions_to","value":"fn <W, S> (&mut self, bin_name: S, for_shell: Shell, buf: &mut W) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Generate a completions file for a specified shell at runtime.  Until `cargo install` can\n install extra files like a completion script, this may be used e.g. in a command that\n outputs the contents of the completion script, to be redirected into a file by the user.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":750},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs","byte_start":116722,"byte_end":116733,"line_start":1459,"line_end":1459,"column_start":12,"column_end":23},"name":"get_matches","qualname":"<App>::get_matches","value":"fn (self) -> ArgMatches<'a>","parent":null,"children":[],"decl_id":null,"docs":" Starts the parsing process, upon a failed parse an error will be displayed to the user and\n the process will exit with the appropriate error code. By default this method gets all user\n provided arguments from [`env::args_os`] in order to allow for invalid UTF-8 code points,\n which are legal on many platforms.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":751},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs","byte_start":118137,"byte_end":118153,"line_start":1488,"line_end":1488,"column_start":12,"column_end":28},"name":"get_matches_safe","qualname":"<App>::get_matches_safe","value":"fn (self) -> ClapResult<ArgMatches<'a>>","parent":null,"children":[],"decl_id":null,"docs":" Starts the parsing process. This method will return a [`clap::Result`] type instead of exiting\n the process on failed parse. By default this method gets matches from [`env::args_os`]","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":752},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs","byte_start":119284,"byte_end":119300,"line_start":1514,"line_end":1514,"column_start":12,"column_end":28},"name":"get_matches_from","qualname":"<App>::get_matches_from","value":"fn <I, T> (mut self, itr: I) -> ArgMatches<'a>","parent":null,"children":[],"decl_id":null,"docs":" Starts the parsing process. Like [`App::get_matches`] this method does not return a [`clap::Result`]\n and will automatically exit with an error message. This method, however, lets you specify\n what iterator to use when performing matches, such as a [`Vec`] of your making.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":756},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs","byte_start":121756,"byte_end":121777,"line_start":1571,"line_end":1571,"column_start":12,"column_end":33},"name":"get_matches_from_safe","qualname":"<App>::get_matches_from_safe","value":"fn <I, T> (mut self, itr: I) -> ClapResult<ArgMatches<'a>>","parent":null,"children":[],"decl_id":null,"docs":" Starts the parsing process. A combination of [`App::get_matches_from`], and\n [`App::get_matches_safe`]","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":759},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs","byte_start":122936,"byte_end":122964,"line_start":1600,"line_end":1600,"column_start":12,"column_end":40},"name":"get_matches_from_safe_borrow","qualname":"<App>::get_matches_from_safe_borrow","value":"fn <I, T> (&mut self, itr: I) -> ClapResult<ArgMatches<'a>>","parent":null,"children":[],"decl_id":null,"docs":" Starts the parsing process without consuming the [`App`] struct `self`. This is normally not\n the desired functionality, instead prefer [`App::get_matches_from_safe`] which *does*\n consume `self`.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":838},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/any_arg.rs","byte_start":343561,"byte_end":343567,"line_start":12,"line_end":12,"column_start":11,"column_end":17},"name":"AnyArg","qualname":"::args::any_arg::AnyArg","value":"AnyArg<'n, 'e>: std_fmt::Display","parent":null,"children":[{"krate":0,"index":841},{"krate":0,"index":842},{"krate":0,"index":843},{"krate":0,"index":844},{"krate":0,"index":845},{"krate":0,"index":846},{"krate":0,"index":847},{"krate":0,"index":848},{"krate":0,"index":849},{"krate":0,"index":850},{"krate":0,"index":851},{"krate":0,"index":852},{"krate":0,"index":853},{"krate":0,"index":854},{"krate":0,"index":855},{"krate":0,"index":856},{"krate":0,"index":857},{"krate":0,"index":858},{"krate":0,"index":859},{"krate":0,"index":860},{"krate":0,"index":861},{"krate":0,"index":862},{"krate":0,"index":863},{"krate":0,"index":864},{"krate":0,"index":865},{"krate":0,"index":867},{"krate":0,"index":868}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":841},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/any_arg.rs","byte_start":343603,"byte_end":343607,"line_start":13,"line_end":13,"column_start":8,"column_end":12},"name":"name","qualname":"::args::any_arg::AnyArg::name","value":"fn (&self) -> &'n str","parent":{"krate":0,"index":838},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":842},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/any_arg.rs","byte_start":343634,"byte_end":343643,"line_start":14,"line_end":14,"column_start":8,"column_end":17},"name":"overrides","qualname":"::args::any_arg::AnyArg::overrides","value":"fn (&self) -> Option<&[&'e str]>","parent":{"krate":0,"index":838},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":843},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/any_arg.rs","byte_start":343681,"byte_end":343688,"line_start":15,"line_end":15,"column_start":8,"column_end":15},"name":"aliases","qualname":"::args::any_arg::AnyArg::aliases","value":"fn (&self) -> Option<Vec<&'e str>>","parent":{"krate":0,"index":838},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":844},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/any_arg.rs","byte_start":343728,"byte_end":343736,"line_start":16,"line_end":16,"column_start":8,"column_end":16},"name":"requires","qualname":"::args::any_arg::AnyArg::requires","value":"fn (&self) -> Option<&[(Option<&'e str>, &'n str)]>","parent":{"krate":0,"index":838},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":845},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/any_arg.rs","byte_start":343793,"byte_end":343802,"line_start":17,"line_end":17,"column_start":8,"column_end":17},"name":"blacklist","qualname":"::args::any_arg::AnyArg::blacklist","value":"fn (&self) -> Option<&[&'e str]>","parent":{"krate":0,"index":838},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":846},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/any_arg.rs","byte_start":343840,"byte_end":343855,"line_start":18,"line_end":18,"column_start":8,"column_end":23},"name":"required_unless","qualname":"::args::any_arg::AnyArg::required_unless","value":"fn (&self) -> Option<&[&'e str]>","parent":{"krate":0,"index":838},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":847},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/any_arg.rs","byte_start":343893,"byte_end":343899,"line_start":19,"line_end":19,"column_start":8,"column_end":14},"name":"is_set","qualname":"::args::any_arg::AnyArg::is_set","value":"fn (&self, ArgSettings) -> bool","parent":{"krate":0,"index":838},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":848},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/any_arg.rs","byte_start":343936,"byte_end":343939,"line_start":20,"line_end":20,"column_start":8,"column_end":11},"name":"set","qualname":"::args::any_arg::AnyArg::set","value":"fn (&mut self, ArgSettings) -> ()","parent":{"krate":0,"index":838},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":849},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/any_arg.rs","byte_start":343972,"byte_end":343982,"line_start":21,"line_end":21,"column_start":8,"column_end":18},"name":"has_switch","qualname":"::args::any_arg::AnyArg::has_switch","value":"fn (&self) -> bool","parent":{"krate":0,"index":838},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":850},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/any_arg.rs","byte_start":344006,"byte_end":344014,"line_start":22,"line_end":22,"column_start":8,"column_end":16},"name":"max_vals","qualname":"::args::any_arg::AnyArg::max_vals","value":"fn (&self) -> Option<u64>","parent":{"krate":0,"index":838},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":851},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/any_arg.rs","byte_start":344045,"byte_end":344053,"line_start":23,"line_end":23,"column_start":8,"column_end":16},"name":"min_vals","qualname":"::args::any_arg::AnyArg::min_vals","value":"fn (&self) -> Option<u64>","parent":{"krate":0,"index":838},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":852},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/any_arg.rs","byte_start":344084,"byte_end":344092,"line_start":24,"line_end":24,"column_start":8,"column_end":16},"name":"num_vals","qualname":"::args::any_arg::AnyArg::num_vals","value":"fn (&self) -> Option<u64>","parent":{"krate":0,"index":838},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":853},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/any_arg.rs","byte_start":344123,"byte_end":344136,"line_start":25,"line_end":25,"column_start":8,"column_end":21},"name":"possible_vals","qualname":"::args::any_arg::AnyArg::possible_vals","value":"fn (&self) -> Option<&[&'e str]>","parent":{"krate":0,"index":838},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":854},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/any_arg.rs","byte_start":344174,"byte_end":344183,"line_start":26,"line_end":26,"column_start":8,"column_end":17},"name":"validator","qualname":"::args::any_arg::AnyArg::validator","value":"fn (&self) -> Option<&Rc<Fn(String) -> Result<(), String>>>","parent":{"krate":0,"index":838},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":855},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/any_arg.rs","byte_start":344248,"byte_end":344260,"line_start":27,"line_end":27,"column_start":8,"column_end":20},"name":"validator_os","qualname":"::args::any_arg::AnyArg::validator_os","value":"fn (&self) -> Option<&Rc<Fn(&OsStr) -> Result<(), OsString>>>","parent":{"krate":0,"index":838},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":856},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/any_arg.rs","byte_start":344327,"byte_end":344332,"line_start":28,"line_end":28,"column_start":8,"column_end":13},"name":"short","qualname":"::args::any_arg::AnyArg::short","value":"fn (&self) -> Option<char>","parent":{"krate":0,"index":838},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":857},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/any_arg.rs","byte_start":344364,"byte_end":344368,"line_start":29,"line_end":29,"column_start":8,"column_end":12},"name":"long","qualname":"::args::any_arg::AnyArg::long","value":"fn (&self) -> Option<&'e str>","parent":{"krate":0,"index":838},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":858},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/any_arg.rs","byte_start":344403,"byte_end":344412,"line_start":30,"line_end":30,"column_start":8,"column_end":17},"name":"val_delim","qualname":"::args::any_arg::AnyArg::val_delim","value":"fn (&self) -> Option<char>","parent":{"krate":0,"index":838},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":859},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/any_arg.rs","byte_start":344444,"byte_end":344455,"line_start":31,"line_end":31,"column_start":8,"column_end":19},"name":"takes_value","qualname":"::args::any_arg::AnyArg::takes_value","value":"fn (&self) -> bool","parent":{"krate":0,"index":838},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":860},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/any_arg.rs","byte_start":344479,"byte_end":344488,"line_start":32,"line_end":32,"column_start":8,"column_end":17},"name":"val_names","qualname":"::args::any_arg::AnyArg::val_names","value":"fn (&self) -> Option<&VecMap<&'e str>>","parent":{"krate":0,"index":838},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":861},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/any_arg.rs","byte_start":344532,"byte_end":344536,"line_start":33,"line_end":33,"column_start":8,"column_end":12},"name":"help","qualname":"::args::any_arg::AnyArg::help","value":"fn (&self) -> Option<&'e str>","parent":{"krate":0,"index":838},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":862},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/any_arg.rs","byte_start":344571,"byte_end":344580,"line_start":34,"line_end":34,"column_start":8,"column_end":17},"name":"long_help","qualname":"::args::any_arg::AnyArg::long_help","value":"fn (&self) -> Option<&'e str>","parent":{"krate":0,"index":838},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":863},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/any_arg.rs","byte_start":344615,"byte_end":344626,"line_start":35,"line_end":35,"column_start":8,"column_end":19},"name":"default_val","qualname":"::args::any_arg::AnyArg::default_val","value":"fn (&self) -> Option<&'e OsStr>","parent":{"krate":0,"index":838},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":864},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/any_arg.rs","byte_start":344663,"byte_end":344679,"line_start":36,"line_end":36,"column_start":8,"column_end":24},"name":"default_vals_ifs","qualname":"::args::any_arg::AnyArg::default_vals_ifs","value":"fn (&self) -> Option<map::Values<(&'n str, Option<&'e OsStr>, &'e OsStr)>>","parent":{"krate":0,"index":838},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":865},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/any_arg.rs","byte_start":344759,"byte_end":344762,"line_start":37,"line_end":37,"column_start":8,"column_end":11},"name":"env","qualname":"::args::any_arg::AnyArg::env","value":"fn <'s> (&'s self) -> Option<(&'n OsStr, Option<&'s OsString>)>","parent":{"krate":0,"index":838},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":867},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/any_arg.rs","byte_start":344830,"byte_end":344844,"line_start":38,"line_end":38,"column_start":8,"column_end":22},"name":"longest_filter","qualname":"::args::any_arg::AnyArg::longest_filter","value":"fn (&self) -> bool","parent":{"krate":0,"index":838},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":868},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/any_arg.rs","byte_start":344868,"byte_end":344882,"line_start":39,"line_end":39,"column_start":8,"column_end":22},"name":"val_terminator","qualname":"::args::any_arg::AnyArg::val_terminator","value":"fn (&self) -> Option<&'e str>","parent":{"krate":0,"index":838},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2528},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs","byte_start":348876,"byte_end":348879,"line_start":43,"line_end":43,"column_start":12,"column_end":15},"name":"Arg","qualname":"::args::arg::Arg","value":"Arg { b, s, v, index, r_ifs }","parent":null,"children":[{"krate":0,"index":2531},{"krate":0,"index":2532},{"krate":0,"index":2533},{"krate":0,"index":2534},{"krate":0,"index":2535}],"decl_id":null,"docs":" The abstract representation of a command line argument. Used to set all the options and\n relationships that define a valid argument for the program.","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs","byte_start":348799,"byte_end":348838,"line_start":41,"line_end":41,"column_start":1,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":2531},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs","byte_start":348935,"byte_end":348936,"line_start":48,"line_end":48,"column_start":9,"column_end":10},"name":"b","qualname":"::args::arg::Arg::b","value":"args::arg_builder::base::Base<'a, 'b>","parent":{"krate":0,"index":2528},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2532},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs","byte_start":348979,"byte_end":348980,"line_start":50,"line_end":50,"column_start":9,"column_end":10},"name":"s","qualname":"::args::arg::Arg::s","value":"args::arg_builder::switched::Switched<'b>","parent":{"krate":0,"index":2528},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2533},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs","byte_start":349023,"byte_end":349024,"line_start":52,"line_end":52,"column_start":9,"column_end":10},"name":"v","qualname":"::args::arg::Arg::v","value":"args::arg_builder::valued::Valued<'a, 'b>","parent":{"krate":0,"index":2528},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2534},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs","byte_start":349069,"byte_end":349074,"line_start":54,"line_end":54,"column_start":9,"column_end":14},"name":"index","qualname":"::args::arg::Arg::index","value":"std::option::Option<u64>","parent":{"krate":0,"index":2528},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2535},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs","byte_start":349116,"byte_end":349121,"line_start":56,"line_end":56,"column_start":9,"column_end":14},"name":"r_ifs","qualname":"::args::arg::Arg::r_ifs","value":"std::option::Option<std::vec::Vec<(&'a str, &'b str)>>","parent":{"krate":0,"index":2528},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":921},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs","byte_start":349964,"byte_end":349973,"line_start":77,"line_end":77,"column_start":12,"column_end":21},"name":"with_name","qualname":"<Arg>::with_name","value":"fn (n: &'a str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new instance of [`Arg`] using a unique string name. The name will be used to get\n information about whether or not the argument was used at runtime, get values, set\n relationships with other args, etc..","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":922},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs","byte_start":358975,"byte_end":358985,"line_start":295,"line_end":295,"column_start":12,"column_end":22},"name":"from_usage","qualname":"<Arg>::from_usage","value":"fn (u: &'a str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new instance of [`Arg`] from a usage string. Allows creation of basic settings\n for the [`Arg`]. The syntax is flexible, but there are some rules to follow.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":923},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs","byte_start":360420,"byte_end":360425,"line_start":336,"line_end":336,"column_start":12,"column_end":17},"name":"short","qualname":"<Arg>::short","value":"fn <S> (mut self, s: S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the short version of the argument without the preceding `-`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":926},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs","byte_start":361920,"byte_end":361924,"line_start":376,"line_end":376,"column_start":12,"column_end":16},"name":"long","qualname":"<Arg>::long","value":"fn (mut self, l: &'b str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the long version of the argument without the preceding `--`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":928},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs","byte_start":362887,"byte_end":362892,"line_start":402,"line_end":402,"column_start":12,"column_end":17},"name":"alias","qualname":"<Arg>::alias","value":"fn <S> (mut self, name: S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Allows adding a [`Arg`] alias, which function as \"hidden\" arguments that\n automatically dispatch as if this argument was used. This is more efficient, and easier\n than creating multiple hidden arguments as one only needs to check for the existence of\n this command, and not all variants.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":930},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs","byte_start":364053,"byte_end":364060,"line_start":432,"line_end":432,"column_start":12,"column_end":19},"name":"aliases","qualname":"<Arg>::aliases","value":"fn (mut self, names: &[&'b str]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Allows adding [`Arg`] aliases, which function as \"hidden\" arguments that\n automatically dispatch as if this argument was used. This is more efficient, and easier\n than creating multiple hidden subcommands as one only needs to check for the existence of\n this command, and not all variants.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":932},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs","byte_start":365166,"byte_end":365179,"line_start":463,"line_end":463,"column_start":12,"column_end":25},"name":"visible_alias","qualname":"<Arg>::visible_alias","value":"fn <S> (mut self, name: S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Allows adding a [`Arg`] alias that functions exactly like those defined with\n [`Arg::alias`], except that they are visible inside the help message.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":934},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs","byte_start":366139,"byte_end":366154,"line_start":490,"line_end":490,"column_start":12,"column_end":27},"name":"visible_aliases","qualname":"<Arg>::visible_aliases","value":"fn (mut self, names: &[&'b str]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Allows adding multiple [`Arg`] aliases that functions exactly like those defined\n with [`Arg::aliases`], except that they are visible inside the help message.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":936},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs","byte_start":368276,"byte_end":368280,"line_start":551,"line_end":551,"column_start":12,"column_end":16},"name":"help","qualname":"<Arg>::help","value":"fn (mut self, h: &'b str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the short help text of the argument that will be displayed to the user when they print\n the help information with `-h`. Typically, this is a short (one line) description of the\n arg.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":937},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs","byte_start":370836,"byte_end":370845,"line_start":622,"line_end":622,"column_start":12,"column_end":21},"name":"long_help","qualname":"<Arg>::long_help","value":"fn (mut self, h: &'b str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the long help text of the argument that will be displayed to the user when they print\n the help information with `--help`. Typically this a more detailed (multi-line) message\n that describes the arg.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":938},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs","byte_start":374284,"byte_end":374288,"line_start":699,"line_end":699,"column_start":12,"column_end":16},"name":"last","qualname":"<Arg>::last","value":"fn (self, l: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specifies that this arg is the last, or final, positional argument (i.e. has the highest\n index) and is *only* able to be accessed via the `--` syntax (i.e. `$ prog args --\n last_arg`). Even, if no other arguments are left to parse, if the user omits the `--` syntax\n they will receive an [`UnknownArgument`] error. Setting an argument to `.last(true)` also\n allows one to access this arg early using the `--` syntax. Accessing an arg early, even with\n the `--` syntax is otherwise not possible.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":939},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs","byte_start":376296,"byte_end":376304,"line_start":758,"line_end":758,"column_start":12,"column_end":20},"name":"required","qualname":"<Arg>::required","value":"fn (self, r: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets whether or not the argument is required by default. Required by default means it is\n required, when no other conflicting rules have been evaluated. Conflicting rules take\n precedence over being required. **Default:** `false`","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":940},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs","byte_start":378378,"byte_end":378392,"line_start":820,"line_end":820,"column_start":12,"column_end":26},"name":"require_equals","qualname":"<Arg>::require_equals","value":"fn (mut self, r: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Requires that options use the `--option=val` syntax (i.e. an equals between the option and\n associated value) **Default:** `false`","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":941},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs","byte_start":380991,"byte_end":381010,"line_start":885,"line_end":885,"column_start":12,"column_end":31},"name":"allow_hyphen_values","qualname":"<Arg>::allow_hyphen_values","value":"fn (self, a: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Allows values which start with a leading hyphen (`-`)","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":942},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs","byte_start":383239,"byte_end":383254,"line_start":948,"line_end":948,"column_start":12,"column_end":27},"name":"required_unless","qualname":"<Arg>::required_unless","value":"fn (mut self, name: &'a str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets an arg that override this arg's required setting. (i.e. this arg will be required\n unless this other argument is present).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":943},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs","byte_start":385835,"byte_end":385854,"line_start":1020,"line_end":1020,"column_start":12,"column_end":31},"name":"required_unless_all","qualname":"<Arg>::required_unless_all","value":"fn (mut self, names: &[&'a str]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets args that override this arg's required setting. (i.e. this arg will be required unless\n all these other arguments are present).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":945},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs","byte_start":388645,"byte_end":388664,"line_start":1096,"line_end":1096,"column_start":12,"column_end":31},"name":"required_unless_one","qualname":"<Arg>::required_unless_one","value":"fn (mut self, names: &[&'a str]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets args that override this arg's [required] setting. (i.e. this arg will be required\n unless *at least one of* these other arguments are present).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":947},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs","byte_start":390412,"byte_end":390426,"line_start":1144,"line_end":1144,"column_start":12,"column_end":26},"name":"conflicts_with","qualname":"<Arg>::conflicts_with","value":"fn (mut self, name: &'a str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets a conflicting argument by name. I.e. when using this argument,\n the following argument can't be present and vice versa.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":948},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs","byte_start":392269,"byte_end":392287,"line_start":1194,"line_end":1194,"column_start":12,"column_end":30},"name":"conflicts_with_all","qualname":"<Arg>::conflicts_with_all","value":"fn (mut self, names: &[&'a str]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The same as [`Arg::conflicts_with`] but allows specifying multiple two-way conlicts per\n argument.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":950},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs","byte_start":397401,"byte_end":397415,"line_start":1303,"line_end":1303,"column_start":12,"column_end":26},"name":"overrides_with","qualname":"<Arg>::overrides_with","value":"fn (mut self, name: &'a str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets a overridable argument by name. I.e. this argument and the following argument\n will override each other in POSIX style (whichever argument was specified at runtime\n **last** \"wins\")","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":951},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs","byte_start":398975,"byte_end":398993,"line_start":1339,"line_end":1339,"column_start":12,"column_end":30},"name":"overrides_with_all","qualname":"<Arg>::overrides_with_all","value":"fn (mut self, names: &[&'a str]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets multiple mutually overridable arguments by name. I.e. this argument and the following\n argument will override each other in POSIX style (whichever argument was specified at\n runtime **last** \"wins\")","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":953},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs","byte_start":401248,"byte_end":401256,"line_start":1405,"line_end":1405,"column_start":12,"column_end":20},"name":"requires","qualname":"<Arg>::requires","value":"fn (mut self, name: &'a str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets an argument by name that is required when this one is present I.e. when\n using this argument, the following argument *must* be present.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":954},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs","byte_start":403619,"byte_end":403630,"line_start":1475,"line_end":1475,"column_start":12,"column_end":23},"name":"requires_if","qualname":"<Arg>::requires_if","value":"fn (mut self, val: &'b str, arg: &'a str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Allows a conditional requirement. The requirement will only become valid if this arg's value\n equals `val`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":955},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs","byte_start":405710,"byte_end":405722,"line_start":1535,"line_end":1535,"column_start":12,"column_end":24},"name":"requires_ifs","qualname":"<Arg>::requires_ifs","value":"fn (mut self, ifs: &[(&'b str, &'a str)]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Allows multiple conditional requirements. The requirement will only become valid if this arg's value\n equals `val`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":956},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs","byte_start":408393,"byte_end":408404,"line_start":1613,"line_end":1613,"column_start":12,"column_end":23},"name":"required_if","qualname":"<Arg>::required_if","value":"fn (mut self, arg: &'a str, val: &'b str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Allows specifying that an argument is [required] conditionally. The requirement will only\n become valid if the specified `arg`'s value equals `val`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":957},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs","byte_start":411522,"byte_end":411534,"line_start":1702,"line_end":1702,"column_start":12,"column_end":24},"name":"required_ifs","qualname":"<Arg>::required_ifs","value":"fn (mut self, ifs: &[(&'a str, &'b str)]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Allows specifying that an argument is [required] based on multiple conditions. The\n conditions are set up in a `(arg, val)` style tuple. The requirement will only become valid\n if one of the specified `arg`'s value equals it's corresponding `val`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":958},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs","byte_start":414196,"byte_end":414208,"line_start":1779,"line_end":1779,"column_start":12,"column_end":24},"name":"requires_all","qualname":"<Arg>::requires_all","value":"fn (mut self, names: &[&'a str]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets multiple arguments by names that are required when this one is present I.e. when\n using this argument, the following arguments *must* be present.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":959},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs","byte_start":416142,"byte_end":416153,"line_start":1832,"line_end":1832,"column_start":12,"column_end":23},"name":"takes_value","qualname":"<Arg>::takes_value","value":"fn (self, tv: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specifies that the argument takes a value at run time.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":960},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs","byte_start":417250,"byte_end":417270,"line_start":1868,"line_end":1868,"column_start":12,"column_end":32},"name":"hide_possible_values","qualname":"<Arg>::hide_possible_values","value":"fn (self, hide: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specifies if the possible values of an argument should be displayed in the help text or\n not. Defaults to `false` (i.e. show possible values)","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":961},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs","byte_start":418321,"byte_end":418339,"line_start":1902,"line_end":1902,"column_start":12,"column_end":30},"name":"hide_default_value","qualname":"<Arg>::hide_default_value","value":"fn (self, hide: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specifies if the default value of an argument should be displayed in the help text or\n not. Defaults to `false` (i.e. show default value)","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":962},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs","byte_start":420504,"byte_end":420509,"line_start":1957,"line_end":1957,"column_start":12,"column_end":17},"name":"index","qualname":"<Arg>::index","value":"fn (mut self, idx: u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specifies the index of a positional argument **starting at** 1.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":963},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs","byte_start":428624,"byte_end":428632,"line_start":2153,"line_end":2153,"column_start":12,"column_end":20},"name":"multiple","qualname":"<Arg>::multiple","value":"fn (self, multi: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specifies that the argument may appear more than once. For flags, this results\n in the number of occurrences of the flag being recorded. For example `-ddd` or `-d -d -d`\n would count as three occurrences. For options there is a distinct difference in multiple\n occurrences vs multiple values.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":964},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs","byte_start":430812,"byte_end":430828,"line_start":2206,"line_end":2206,"column_start":12,"column_end":28},"name":"value_terminator","qualname":"<Arg>::value_terminator","value":"fn (mut self, term: &'b str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specifies a value that *stops* parsing multiple values of a give argument. By default when\n one sets [`multiple(true)`] on an argument, clap will continue parsing values for that\n argument until it reaches another valid argument, or one of the other more specific settings\n for multiple values is used (such as [`min_values`], [`max_values`] or\n [`number_of_values`]).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":965},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs","byte_start":432782,"byte_end":432788,"line_start":2255,"line_end":2255,"column_start":12,"column_end":18},"name":"global","qualname":"<Arg>::global","value":"fn (self, g: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specifies that an argument can be matched to all child [`SubCommand`]s.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":966},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs","byte_start":434162,"byte_end":434174,"line_start":2297,"line_end":2297,"column_start":12,"column_end":24},"name":"empty_values","qualname":"<Arg>::empty_values","value":"fn (mut self, ev: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Allows an argument to accept explicitly empty values. An empty value must be specified at\n the command line with an explicit `\"\"`, or `''`","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":967},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs","byte_start":435737,"byte_end":435743,"line_start":2349,"line_end":2349,"column_start":12,"column_end":18},"name":"hidden","qualname":"<Arg>::hidden","value":"fn (self, h: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Hides an argument from help message output.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":968},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs","byte_start":437600,"byte_end":437615,"line_start":2404,"line_end":2404,"column_start":12,"column_end":27},"name":"possible_values","qualname":"<Arg>::possible_values","value":"fn (mut self, names: &[&'b str]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specifies a list of possible values for this argument. At runtime, `clap` verifies that\n only one of the specified values was used, or fails with an error message.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":970},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs","byte_start":439790,"byte_end":439804,"line_start":2468,"line_end":2468,"column_start":12,"column_end":26},"name":"possible_value","qualname":"<Arg>::possible_value","value":"fn (mut self, name: &'b str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specifies a possible value for this argument, one at a time. At runtime, `clap` verifies\n that only one of the specified values was used, or fails with error message.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":971},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs","byte_start":441697,"byte_end":441713,"line_start":2522,"line_end":2522,"column_start":12,"column_end":28},"name":"case_insensitive","qualname":"<Arg>::case_insensitive","value":"fn (self, ci: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" When used with [`Arg::possible_values`] it allows the argument value to pass validation even if\n the case differs from that of the specified `possible_value`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":972},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs","byte_start":442793,"byte_end":442798,"line_start":2560,"line_end":2560,"column_start":12,"column_end":17},"name":"group","qualname":"<Arg>::group","value":"fn (mut self, name: &'a str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specifies the name of the [`ArgGroup`] the argument belongs to.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":973},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs","byte_start":443999,"byte_end":444005,"line_start":2600,"line_end":2600,"column_start":12,"column_end":18},"name":"groups","qualname":"<Arg>::groups","value":"fn (mut self, names: &[&'a str]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specifies the names of multiple [`ArgGroup`]'s the argument belongs to.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":975},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs","byte_start":445698,"byte_end":445714,"line_start":2647,"line_end":2647,"column_start":12,"column_end":28},"name":"number_of_values","qualname":"<Arg>::number_of_values","value":"fn (mut self, qty: u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specifies how many values are required to satisfy this argument. For example, if you had a\n `-f <file>` argument where you wanted exactly 3 'files' you would set\n `.number_of_values(3)`, and this argument wouldn't be satisfied unless the user provided\n 3 and only 3 values.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":976},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs","byte_start":447657,"byte_end":447666,"line_start":2689,"line_end":2689,"column_start":12,"column_end":21},"name":"validator","qualname":"<Arg>::validator","value":"fn <F> (mut self, f: F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Allows one to perform a custom validation on the argument value. You provide a closure\n which accepts a [`String`] value, and return a [`Result`] where the [`Err(String)`] is a\n message displayed to the user.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":978},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs","byte_start":449255,"byte_end":449267,"line_start":2727,"line_end":2727,"column_start":12,"column_end":24},"name":"validator_os","qualname":"<Arg>::validator_os","value":"fn <F> (mut self, f: F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Works identically to Validator but is intended to be used with values that could\n contain non UTF-8 formatted strings.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":980},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs","byte_start":451551,"byte_end":451561,"line_start":2791,"line_end":2791,"column_start":12,"column_end":22},"name":"max_values","qualname":"<Arg>::max_values","value":"fn (mut self, qty: u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specifies the *maximum* number of values are for this argument. For example, if you had a\n `-f <file>` argument where you wanted up to 3 'files' you would set `.max_values(3)`, and\n this argument would be satisfied if the user provided, 1, 2, or 3 values.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":981},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs","byte_start":453811,"byte_end":453821,"line_start":2854,"line_end":2854,"column_start":12,"column_end":22},"name":"min_values","qualname":"<Arg>::min_values","value":"fn (mut self, qty: u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specifies the *minimum* number of values for this argument. For example, if you had a\n `-f <file>` argument where you wanted at least 2 'files' you would set\n `.min_values(2)`, and this argument would be satisfied if the user provided, 2 or more\n values.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":982},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs","byte_start":455865,"byte_end":455878,"line_start":2905,"line_end":2905,"column_start":12,"column_end":25},"name":"use_delimiter","qualname":"<Arg>::use_delimiter","value":"fn (mut self, d: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specifies whether or not an argument should allow grouping of multiple values via a\n delimiter. I.e. should `--option=val1,val2,val3` be parsed as three values (`val1`, `val2`,\n and `val3`) or as a single value (`val1,val2,val3`). Defaults to using `,` (comma) as the\n value delimiter for all arguments that accept values (options and positional arguments)","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":983},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs","byte_start":459410,"byte_end":459427,"line_start":2992,"line_end":2992,"column_start":12,"column_end":29},"name":"require_delimiter","qualname":"<Arg>::require_delimiter","value":"fn (mut self, d: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specifies that *multiple values* may only be set using the delimiter. This means if an\n if an option is encountered, and no delimiter is found, it automatically assumed that no\n additional values for that option follow. This is unlike the default, where it is generally\n assumed that more values will follow regardless of whether or not a delimiter is used.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":984},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs","byte_start":460750,"byte_end":460765,"line_start":3028,"line_end":3028,"column_start":12,"column_end":27},"name":"value_delimiter","qualname":"<Arg>::value_delimiter","value":"fn (mut self, d: &str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specifies the separator to use when values are clumped together, defaults to `,` (comma).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":985},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs","byte_start":463594,"byte_end":463605,"line_start":3099,"line_end":3099,"column_start":12,"column_end":23},"name":"value_names","qualname":"<Arg>::value_names","value":"fn (mut self, names: &[&'b str]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify multiple names for values of option arguments. These names are cosmetic only, used\n for help and usage strings only. The names are **not** used to access arguments. The values\n of the arguments are accessed in numeric order (i.e. if you specify two names `one` and\n `two` `one` will be the first matched value, `two` will be the second).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":986},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs","byte_start":465869,"byte_end":465879,"line_start":3167,"line_end":3167,"column_start":12,"column_end":22},"name":"value_name","qualname":"<Arg>::value_name","value":"fn (mut self, name: &'b str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specifies the name for value of [option] or [positional] arguments inside of help\n documentation. This name is cosmetic only, the name is **not** used to access arguments.\n This setting can be very helpful when describing the type of input the user should be\n using, such as `FILE`, `INTERFACE`, etc. Although not required, it's somewhat convention to\n use all capital letters for the value name.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":987},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs","byte_start":469242,"byte_end":469255,"line_start":3243,"line_end":3243,"column_start":12,"column_end":25},"name":"default_value","qualname":"<Arg>::default_value","value":"fn (self, val: &'a str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specifies the value of the argument when *not* specified at runtime.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":988},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs","byte_start":469634,"byte_end":469650,"line_start":3251,"line_end":3251,"column_start":12,"column_end":28},"name":"default_value_os","qualname":"<Arg>::default_value_os","value":"fn (mut self, val: &'a OsStr) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Provides a default value in the exact same manner as [`Arg::default_value`]\n only using [`OsStr`]s instead.\n [`Arg::default_value`]: ./struct.Arg.html#method.default_value\n [`OsStr`]: https://doc.rust-lang.org/std/ffi/struct.OsStr.html\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":989},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs","byte_start":473430,"byte_end":473446,"line_start":3353,"line_end":3353,"column_start":12,"column_end":28},"name":"default_value_if","qualname":"<Arg>::default_value_if","value":"fn (self, arg: &'a str, val: Option<&'b str>, default: &'b str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specifies the value of the argument if `arg` has been used at runtime. If `val` is set to\n `None`, `arg` only needs to be present. If `val` is set to `\"some-val\"` then `arg` must be\n present at runtime **and** have the value `val`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":990},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs","byte_start":473992,"byte_end":474011,"line_start":3365,"line_end":3365,"column_start":12,"column_end":31},"name":"default_value_if_os","qualname":"<Arg>::default_value_if_os","value":"fn (mut self, arg: &'a str, val: Option<&'b OsStr>, default: &'b OsStr) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Provides a conditional default value in the exact same manner as [`Arg::default_value_if`]\n only using [`OsStr`]s instead.\n [`Arg::default_value_if`]: ./struct.Arg.html#method.default_value_if\n [`OsStr`]: https://doc.rust-lang.org/std/ffi/struct.OsStr.html\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":991},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs","byte_start":477477,"byte_end":477494,"line_start":3467,"line_end":3467,"column_start":12,"column_end":29},"name":"default_value_ifs","qualname":"<Arg>::default_value_ifs","value":"fn (mut self, ifs: &[(&'a str, Option<&'b str>, &'b str)]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specifies multiple values and conditions in the same manner as [`Arg::default_value_if`].\n The method takes a slice of tuples in the `(arg, Option<val>, default)` format.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":992},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs","byte_start":478204,"byte_end":478224,"line_start":3483,"line_end":3483,"column_start":12,"column_end":32},"name":"default_value_ifs_os","qualname":"<Arg>::default_value_ifs_os","value":"fn (mut self, ifs: &[(&'a str, Option<&'b OsStr>, &'b OsStr)]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Provides multiple conditional default values in the exact same manner as\n [`Arg::default_value_ifs`] only using [`OsStr`]s instead.\n [`Arg::default_value_ifs`]: ./struct.Arg.html#method.default_value_ifs\n [`OsStr`]: https://doc.rust-lang.org/std/ffi/struct.OsStr.html\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":993},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs","byte_start":482356,"byte_end":482359,"line_start":3595,"line_end":3595,"column_start":12,"column_end":15},"name":"env","qualname":"<Arg>::env","value":"fn (self, name: &'a str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specifies that if the value is not passed in as an argument, that it should be retrieved\n from the environment, if available. If it is not present in the environment, then default\n rules will apply.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":994},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs","byte_start":482666,"byte_end":482672,"line_start":3602,"line_end":3602,"column_start":12,"column_end":18},"name":"env_os","qualname":"<Arg>::env_os","value":"fn (mut self, name: &'a OsStr) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specifies that if the value is not passed in as an argument, that it should be retrieved\n from the environment if available in the exact same manner as [`Arg::env`] only using\n [`OsStr`]s instead.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":995},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs","byte_start":482885,"byte_end":482900,"line_start":3610,"line_end":3610,"column_start":12,"column_end":27},"name":"hide_env_values","qualname":"<Arg>::hide_env_values","value":"fn (self, hide: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" @TODO @p2 @docs @release: write docs\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":996},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs","byte_start":484737,"byte_end":484751,"line_start":3663,"line_end":3663,"column_start":12,"column_end":26},"name":"next_line_help","qualname":"<Arg>::next_line_help","value":"fn (mut self, nlh: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" When set to `true` the help string will be displayed on the line after the argument and\n indented once. This can be helpful for arguments with very long or complex help messages.\n This can also be helpful for arguments with very long flag names, or many/long value names.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":997},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs","byte_start":487309,"byte_end":487322,"line_start":3727,"line_end":3727,"column_start":12,"column_end":25},"name":"display_order","qualname":"<Arg>::display_order","value":"fn (mut self, ord: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Allows custom ordering of args within the help message. Args with a lower value will be\n displayed first in the help message. This is helpful when one would like to emphasise\n frequently used args, or prioritize those towards the top of the list. Duplicate values\n **are** allowed. Args with duplicate display orders will be displayed in alphabetical\n order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":998},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs","byte_start":488484,"byte_end":488487,"line_start":3751,"line_end":3751,"column_start":12,"column_end":15},"name":"raw","qualname":"<Arg>::raw","value":"fn (self, raw: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Indicates that all parameters passed after this should not be parsed\n individually, but rather passed in their entirety. It is worth noting\n that setting this requires all values to come after a `--` to indicate they\n should all be captured. For example:","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":999},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs","byte_start":490561,"byte_end":490578,"line_start":3824,"line_end":3824,"column_start":12,"column_end":29},"name":"hidden_short_help","qualname":"<Arg>::hidden_short_help","value":"fn (self, hide: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Hides an argument from short help message output.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1000},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs","byte_start":492730,"byte_end":492746,"line_start":3901,"line_end":3901,"column_start":12,"column_end":28},"name":"hidden_long_help","qualname":"<Arg>::hidden_long_help","value":"fn (self, hide: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Hides an argument from long help message output.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1001},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs","byte_start":493076,"byte_end":493082,"line_start":3912,"line_end":3912,"column_start":12,"column_end":18},"name":"is_set","qualname":"<Arg>::is_set","value":"fn (&self, s: ArgSettings) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if one of the [`ArgSettings`] settings is set for the argument.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1002},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs","byte_start":493283,"byte_end":493286,"line_start":3919,"line_end":3919,"column_start":12,"column_end":15},"name":"set","qualname":"<Arg>::set","value":"fn (mut self, s: ArgSettings) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets one of the [`ArgSettings`] settings for the argument.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1003},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs","byte_start":493502,"byte_end":493507,"line_start":3927,"line_end":3927,"column_start":12,"column_end":17},"name":"unset","qualname":"<Arg>::unset","value":"fn (mut self, s: ArgSettings) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Unsets one of the [`ArgSettings`] settings for the argument.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1004},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs","byte_start":493618,"byte_end":493622,"line_start":3933,"line_end":3933,"column_start":12,"column_end":16},"name":"setb","qualname":"<Arg>::setb","value":"fn (&mut self, s: ArgSettings) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1005},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs","byte_start":493712,"byte_end":493718,"line_start":3938,"line_end":3938,"column_start":12,"column_end":18},"name":"unsetb","qualname":"<Arg>::unsetb","value":"fn (&mut self, s: ArgSettings) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2544},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/base.rs","byte_start":494542,"byte_end":494546,"line_start":4,"line_end":4,"column_start":12,"column_end":16},"name":"Base","qualname":"::args::arg_builder::base::Base","value":"Base { name, help, long_help, blacklist, settings, r_unless, overrides, groups, requires }","parent":null,"children":[{"krate":0,"index":2547},{"krate":0,"index":2548},{"krate":0,"index":2549},{"krate":0,"index":2550},{"krate":0,"index":2551},{"krate":0,"index":2552},{"krate":0,"index":2553},{"krate":0,"index":2554},{"krate":0,"index":2555}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2547},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/base.rs","byte_start":494583,"byte_end":494587,"line_start":8,"line_end":8,"column_start":9,"column_end":13},"name":"name","qualname":"::args::arg_builder::base::Base::name","value":"&'a str","parent":{"krate":0,"index":2544},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2548},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/base.rs","byte_start":494606,"byte_end":494610,"line_start":9,"line_end":9,"column_start":9,"column_end":13},"name":"help","qualname":"::args::arg_builder::base::Base::help","value":"std::option::Option<&'b str>","parent":{"krate":0,"index":2544},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2549},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/base.rs","byte_start":494637,"byte_end":494646,"line_start":10,"line_end":10,"column_start":9,"column_end":18},"name":"long_help","qualname":"::args::arg_builder::base::Base::long_help","value":"std::option::Option<&'b str>","parent":{"krate":0,"index":2544},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2550},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/base.rs","byte_start":494673,"byte_end":494682,"line_start":11,"line_end":11,"column_start":9,"column_end":18},"name":"blacklist","qualname":"::args::arg_builder::base::Base::blacklist","value":"std::option::Option<std::vec::Vec<&'a str>>","parent":{"krate":0,"index":2544},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2551},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/base.rs","byte_start":494714,"byte_end":494722,"line_start":12,"line_end":12,"column_start":9,"column_end":17},"name":"settings","qualname":"::args::arg_builder::base::Base::settings","value":"args::settings::ArgFlags","parent":{"krate":0,"index":2544},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2552},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/base.rs","byte_start":494742,"byte_end":494750,"line_start":13,"line_end":13,"column_start":9,"column_end":17},"name":"r_unless","qualname":"::args::arg_builder::base::Base::r_unless","value":"std::option::Option<std::vec::Vec<&'a str>>","parent":{"krate":0,"index":2544},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2553},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/base.rs","byte_start":494782,"byte_end":494791,"line_start":14,"line_end":14,"column_start":9,"column_end":18},"name":"overrides","qualname":"::args::arg_builder::base::Base::overrides","value":"std::option::Option<std::vec::Vec<&'a str>>","parent":{"krate":0,"index":2544},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2554},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/base.rs","byte_start":494823,"byte_end":494829,"line_start":15,"line_end":15,"column_start":9,"column_end":15},"name":"groups","qualname":"::args::arg_builder::base::Base::groups","value":"std::option::Option<std::vec::Vec<&'a str>>","parent":{"krate":0,"index":2544},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2555},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/base.rs","byte_start":494861,"byte_end":494869,"line_start":16,"line_end":16,"column_start":9,"column_end":17},"name":"requires","qualname":"::args::arg_builder::base::Base::requires","value":"std::option::Option<std::vec::Vec<(std::option::Option<&'b str>, &'a str)>>","parent":{"krate":0,"index":2544},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1030},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/base.rs","byte_start":494954,"byte_end":494957,"line_start":20,"line_end":20,"column_start":12,"column_end":15},"name":"new","qualname":"<Base>::new","value":"fn (name: &'n str) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1031},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/base.rs","byte_start":495083,"byte_end":495086,"line_start":27,"line_end":27,"column_start":12,"column_end":15},"name":"set","qualname":"<Base>::set","value":"fn (&mut self, s: ArgSettings) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1032},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/base.rs","byte_start":495163,"byte_end":495168,"line_start":30,"line_end":30,"column_start":12,"column_end":17},"name":"unset","qualname":"<Base>::unset","value":"fn (&mut self, s: ArgSettings) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1033},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/base.rs","byte_start":495247,"byte_end":495253,"line_start":33,"line_end":33,"column_start":12,"column_end":18},"name":"is_set","qualname":"<Base>::is_set","value":"fn (&self, s: ArgSettings) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2568},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/flag.rs","byte_start":495933,"byte_end":495944,"line_start":16,"line_end":16,"column_start":12,"column_end":23},"name":"FlagBuilder","qualname":"::args::arg_builder::flag::FlagBuilder","value":"FlagBuilder { b, s }","parent":null,"children":[{"krate":0,"index":2571},{"krate":0,"index":2572}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2571},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/flag.rs","byte_start":495981,"byte_end":495982,"line_start":20,"line_end":20,"column_start":9,"column_end":10},"name":"b","qualname":"::args::arg_builder::flag::FlagBuilder::b","value":"args::arg_builder::base::Base<'n, 'e>","parent":{"krate":0,"index":2568},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2572},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/flag.rs","byte_start":496006,"byte_end":496007,"line_start":21,"line_end":21,"column_start":9,"column_end":10},"name":"s","qualname":"::args::arg_builder::flag::FlagBuilder::s","value":"args::arg_builder::switched::Switched<'e>","parent":{"krate":0,"index":2568},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1068},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/flag.rs","byte_start":496072,"byte_end":496075,"line_start":25,"line_end":25,"column_start":12,"column_end":15},"name":"new","qualname":"<FlagBuilder>::new","value":"fn (name: &'n str) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2585},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/option.rs","byte_start":501178,"byte_end":501188,"line_start":16,"line_end":16,"column_start":12,"column_end":22},"name":"OptBuilder","qualname":"::args::arg_builder::option::OptBuilder","value":"OptBuilder { b, s, v }","parent":null,"children":[{"krate":0,"index":2588},{"krate":0,"index":2589},{"krate":0,"index":2590}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/option.rs","byte_start":501086,"byte_end":501125,"line_start":13,"line_end":13,"column_start":1,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":2588},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/option.rs","byte_start":501225,"byte_end":501226,"line_start":20,"line_end":20,"column_start":9,"column_end":10},"name":"b","qualname":"::args::arg_builder::option::OptBuilder::b","value":"args::arg_builder::base::Base<'n, 'e>","parent":{"krate":0,"index":2585},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2589},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/option.rs","byte_start":501250,"byte_end":501251,"line_start":21,"line_end":21,"column_start":9,"column_end":10},"name":"s","qualname":"::args::arg_builder::option::OptBuilder::s","value":"args::arg_builder::switched::Switched<'e>","parent":{"krate":0,"index":2585},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2590},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/option.rs","byte_start":501275,"byte_end":501276,"line_start":22,"line_end":22,"column_start":9,"column_end":10},"name":"v","qualname":"::args::arg_builder::option::OptBuilder::v","value":"args::arg_builder::valued::Valued<'n, 'e>","parent":{"krate":0,"index":2585},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1152},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/option.rs","byte_start":501342,"byte_end":501345,"line_start":26,"line_end":26,"column_start":12,"column_end":15},"name":"new","qualname":"<OptBuilder>::new","value":"fn (name: &'n str) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2599},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/positional.rs","byte_start":509160,"byte_end":509170,"line_start":18,"line_end":18,"column_start":12,"column_end":22},"name":"PosBuilder","qualname":"::args::arg_builder::positional::PosBuilder","value":"PosBuilder { b, v, index }","parent":null,"children":[{"krate":0,"index":2602},{"krate":0,"index":2603},{"krate":0,"index":2604}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/positional.rs","byte_start":509068,"byte_end":509107,"line_start":15,"line_end":15,"column_start":1,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":2602},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/positional.rs","byte_start":509207,"byte_end":509208,"line_start":22,"line_end":22,"column_start":9,"column_end":10},"name":"b","qualname":"::args::arg_builder::positional::PosBuilder::b","value":"args::arg_builder::base::Base<'n, 'e>","parent":{"krate":0,"index":2599},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2603},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/positional.rs","byte_start":509232,"byte_end":509233,"line_start":23,"line_end":23,"column_start":9,"column_end":10},"name":"v","qualname":"::args::arg_builder::positional::PosBuilder::v","value":"args::arg_builder::valued::Valued<'n, 'e>","parent":{"krate":0,"index":2599},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2604},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/positional.rs","byte_start":509259,"byte_end":509264,"line_start":24,"line_end":24,"column_start":9,"column_end":14},"name":"index","qualname":"::args::arg_builder::positional::PosBuilder::index","value":"u64","parent":{"krate":0,"index":2599},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1239},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/positional.rs","byte_start":509319,"byte_end":509322,"line_start":28,"line_end":28,"column_start":12,"column_end":15},"name":"new","qualname":"<PosBuilder>::new","value":"fn (name: &'n str, idx: u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1240},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/positional.rs","byte_start":509496,"byte_end":509508,"line_start":36,"line_end":36,"column_start":12,"column_end":24},"name":"from_arg_ref","qualname":"<PosBuilder>::from_arg_ref","value":"fn (a: &Arg<'n, 'e>, idx: u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1241},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/positional.rs","byte_start":509921,"byte_end":509929,"line_start":51,"line_end":51,"column_start":12,"column_end":20},"name":"from_arg","qualname":"<PosBuilder>::from_arg","value":"fn (mut a: Arg<'n, 'e>, idx: u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1242},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/positional.rs","byte_start":510371,"byte_end":510383,"line_start":65,"line_end":65,"column_start":12,"column_end":24},"name":"multiple_str","qualname":"<PosBuilder>::multiple_str","value":"fn (&self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1244},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/positional.rs","byte_start":510681,"byte_end":510697,"line_start":78,"line_end":78,"column_start":12,"column_end":28},"name":"name_no_brackets","qualname":"<PosBuilder>::name_no_brackets","value":"fn (&self) -> Cow<str>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2614},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/switched.rs","byte_start":516436,"byte_end":516444,"line_start":4,"line_end":4,"column_start":12,"column_end":20},"name":"Switched","qualname":"::args::arg_builder::switched::Switched","value":"Switched { short, long, aliases, disp_ord, unified_ord }","parent":null,"children":[{"krate":0,"index":2616},{"krate":0,"index":2617},{"krate":0,"index":2618},{"krate":0,"index":2619},{"krate":0,"index":2620}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2616},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/switched.rs","byte_start":516459,"byte_end":516464,"line_start":5,"line_end":5,"column_start":9,"column_end":14},"name":"short","qualname":"::args::arg_builder::switched::Switched::short","value":"std::option::Option<char>","parent":{"krate":0,"index":2614},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2617},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/switched.rs","byte_start":516488,"byte_end":516492,"line_start":6,"line_end":6,"column_start":9,"column_end":13},"name":"long","qualname":"::args::arg_builder::switched::Switched::long","value":"std::option::Option<&'b str>","parent":{"krate":0,"index":2614},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2618},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/switched.rs","byte_start":516519,"byte_end":516526,"line_start":7,"line_end":7,"column_start":9,"column_end":16},"name":"aliases","qualname":"::args::arg_builder::switched::Switched::aliases","value":"std::option::Option<std::vec::Vec<(&'b str, bool)>>","parent":{"krate":0,"index":2614},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2619},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/switched.rs","byte_start":516585,"byte_end":516593,"line_start":8,"line_end":8,"column_start":9,"column_end":17},"name":"disp_ord","qualname":"::args::arg_builder::switched::Switched::disp_ord","value":"usize","parent":{"krate":0,"index":2614},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2620},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/switched.rs","byte_start":516610,"byte_end":516621,"line_start":9,"line_end":9,"column_start":9,"column_end":20},"name":"unified_ord","qualname":"::args::arg_builder::switched::Switched::unified_ord","value":"usize","parent":{"krate":0,"index":2614},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2624},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/valued.rs","byte_start":517428,"byte_end":517434,"line_start":10,"line_end":10,"column_start":12,"column_end":18},"name":"Valued","qualname":"::args::arg_builder::valued::Valued","value":"Valued { possible_vals, val_names, num_vals, max_vals, min_vals, validator, validator_os, val_delim, default_val, default_vals_ifs, env, terminator }","parent":null,"children":[{"krate":0,"index":2627},{"krate":0,"index":2628},{"krate":0,"index":2629},{"krate":0,"index":2630},{"krate":0,"index":2631},{"krate":0,"index":2632},{"krate":0,"index":2633},{"krate":0,"index":2634},{"krate":0,"index":2635},{"krate":0,"index":2636},{"krate":0,"index":2637},{"krate":0,"index":2638}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/valued.rs","byte_start":517360,"byte_end":517399,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":2627},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/valued.rs","byte_start":517471,"byte_end":517484,"line_start":14,"line_end":14,"column_start":9,"column_end":22},"name":"possible_vals","qualname":"::args::arg_builder::valued::Valued::possible_vals","value":"std::option::Option<std::vec::Vec<&'b str>>","parent":{"krate":0,"index":2624},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2628},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/valued.rs","byte_start":517516,"byte_end":517525,"line_start":15,"line_end":15,"column_start":9,"column_end":18},"name":"val_names","qualname":"::args::arg_builder::valued::Valued::val_names","value":"std::option::Option<vec_map::VecMap<&'b str>>","parent":{"krate":0,"index":2624},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2629},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/valued.rs","byte_start":517560,"byte_end":517568,"line_start":16,"line_end":16,"column_start":9,"column_end":17},"name":"num_vals","qualname":"::args::arg_builder::valued::Valued::num_vals","value":"std::option::Option<u64>","parent":{"krate":0,"index":2624},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2630},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/valued.rs","byte_start":517591,"byte_end":517599,"line_start":17,"line_end":17,"column_start":9,"column_end":17},"name":"max_vals","qualname":"::args::arg_builder::valued::Valued::max_vals","value":"std::option::Option<u64>","parent":{"krate":0,"index":2624},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2631},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/valued.rs","byte_start":517622,"byte_end":517630,"line_start":18,"line_end":18,"column_start":9,"column_end":17},"name":"min_vals","qualname":"::args::arg_builder::valued::Valued::min_vals","value":"std::option::Option<u64>","parent":{"krate":0,"index":2624},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2632},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/valued.rs","byte_start":517653,"byte_end":517662,"line_start":19,"line_end":19,"column_start":9,"column_end":18},"name":"validator","qualname":"::args::arg_builder::valued::Valued::validator","value":"std::option::Option<std::rc::Rc<(dyn std::ops::Fn(std::string::String) -> std::result::Result<(), std::string::String> + 'static)>>","parent":{"krate":0,"index":2624},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2633},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/valued.rs","byte_start":517718,"byte_end":517730,"line_start":20,"line_end":20,"column_start":9,"column_end":21},"name":"validator_os","qualname":"::args::arg_builder::valued::Valued::validator_os","value":"std::option::Option<std::rc::Rc<(dyn for<'r> std::ops::Fn(&'r std::ffi::OsStr) -> std::result::Result<(), std::ffi::OsString> + 'static)>>","parent":{"krate":0,"index":2624},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2634},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/valued.rs","byte_start":517788,"byte_end":517797,"line_start":21,"line_end":21,"column_start":9,"column_end":18},"name":"val_delim","qualname":"::args::arg_builder::valued::Valued::val_delim","value":"std::option::Option<char>","parent":{"krate":0,"index":2624},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2635},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/valued.rs","byte_start":517821,"byte_end":517832,"line_start":22,"line_end":22,"column_start":9,"column_end":20},"name":"default_val","qualname":"::args::arg_builder::valued::Valued::default_val","value":"std::option::Option<&'b std::ffi::OsStr>","parent":{"krate":0,"index":2624},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2636},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/valued.rs","byte_start":517861,"byte_end":517877,"line_start":23,"line_end":23,"column_start":9,"column_end":25},"name":"default_vals_ifs","qualname":"::args::arg_builder::valued::Valued::default_vals_ifs","value":"std::option::Option<vec_map::VecMap<(&'a str, std::option::Option<&'b std::ffi::OsStr>, &'b std::ffi::OsStr)>>","parent":{"krate":0,"index":2624},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2637},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/valued.rs","byte_start":517944,"byte_end":517947,"line_start":24,"line_end":24,"column_start":9,"column_end":12},"name":"env","qualname":"::args::arg_builder::valued::Valued::env","value":"std::option::Option<(&'a std::ffi::OsStr, std::option::Option<std::ffi::OsString>)>","parent":{"krate":0,"index":2624},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2638},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/valued.rs","byte_start":517996,"byte_end":518006,"line_start":25,"line_end":25,"column_start":9,"column_end":19},"name":"terminator","qualname":"::args::arg_builder::valued::Valued::terminator","value":"std::option::Option<&'b str>","parent":{"krate":0,"index":2624},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1323},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/valued.rs","byte_start":518530,"byte_end":518537,"line_start":48,"line_end":48,"column_start":12,"column_end":19},"name":"fill_in","qualname":"<Valued>::fill_in","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1343},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matcher.rs","byte_start":519348,"byte_end":519358,"line_start":15,"line_end":15,"column_start":12,"column_end":22},"name":"ArgMatcher","qualname":"::args::arg_matcher::ArgMatcher","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matcher.rs","byte_start":519297,"byte_end":519336,"line_start":14,"line_end":14,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1352},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matcher.rs","byte_start":519538,"byte_end":519541,"line_start":24,"line_end":24,"column_start":12,"column_end":15},"name":"new","qualname":"<ArgMatcher>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1353},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matcher.rs","byte_start":519602,"byte_end":519623,"line_start":28,"line_end":28,"column_start":12,"column_end":33},"name":"process_arg_overrides","qualname":"<ArgMatcher>::process_arg_overrides","value":"fn <'b> (&mut self, a: Option<&AnyArg<'a, 'b>>, overrides: &mut Vec<(&'b str, &'a str)>, required: &mut Vec<&'a str>, check_all: bool) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1355},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matcher.rs","byte_start":521439,"byte_end":521460,"line_start":75,"line_end":75,"column_start":12,"column_end":33},"name":"handle_self_overrides","qualname":"<ArgMatcher>::handle_self_overrides","value":"fn <'b> (&mut self, a: Option<&AnyArg<'a, 'b>>) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1357},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matcher.rs","byte_start":522444,"byte_end":522454,"line_start":101,"line_end":101,"column_start":12,"column_end":22},"name":"is_present","qualname":"<ArgMatcher>::is_present","value":"fn (&self, name: &str) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1358},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matcher.rs","byte_start":522534,"byte_end":522551,"line_start":105,"line_end":105,"column_start":12,"column_end":29},"name":"propagate_globals","qualname":"<ArgMatcher>::propagate_globals","value":"fn (&mut self, global_arg_vec: &[&'a str]) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1360},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matcher.rs","byte_start":524356,"byte_end":524363,"line_start":150,"line_end":150,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<ArgMatcher>::get_mut","value":"fn (&mut self, arg: &str) -> Option<&mut MatchedArg>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1361},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matcher.rs","byte_start":524466,"byte_end":524469,"line_start":154,"line_end":154,"column_start":12,"column_end":15},"name":"get","qualname":"<ArgMatcher>::get","value":"fn (&self, arg: &str) -> Option<&MatchedArg>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1362},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matcher.rs","byte_start":524560,"byte_end":524566,"line_start":158,"line_end":158,"column_start":12,"column_end":18},"name":"remove","qualname":"<ArgMatcher>::remove","value":"fn (&mut self, arg: &str) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1363},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matcher.rs","byte_start":524642,"byte_end":524652,"line_start":162,"line_end":162,"column_start":12,"column_end":22},"name":"remove_all","qualname":"<ArgMatcher>::remove_all","value":"fn (&mut self, args: &[&str]) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1364},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matcher.rs","byte_start":524773,"byte_end":524779,"line_start":168,"line_end":168,"column_start":12,"column_end":18},"name":"insert","qualname":"<ArgMatcher>::insert","value":"fn (&mut self, name: &'a str) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1365},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matcher.rs","byte_start":524879,"byte_end":524887,"line_start":172,"line_end":172,"column_start":12,"column_end":20},"name":"contains","qualname":"<ArgMatcher>::contains","value":"fn (&self, arg: &str) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1366},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matcher.rs","byte_start":524972,"byte_end":524980,"line_start":176,"line_end":176,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<ArgMatcher>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1367},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matcher.rs","byte_start":525047,"byte_end":525052,"line_start":180,"line_end":180,"column_start":12,"column_end":17},"name":"usage","qualname":"<ArgMatcher>::usage","value":"fn (&mut self, usage: String) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1368},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matcher.rs","byte_start":525135,"byte_end":525144,"line_start":184,"line_end":184,"column_start":12,"column_end":21},"name":"arg_names","qualname":"<ArgMatcher>::arg_names","value":"fn (&'a self) -> Vec<&'a str>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1369},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matcher.rs","byte_start":525246,"byte_end":525251,"line_start":188,"line_end":188,"column_start":12,"column_end":17},"name":"entry","qualname":"<ArgMatcher>::entry","value":"fn (&mut self, arg: &'a str) -> Entry<&'a str, MatchedArg>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1370},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matcher.rs","byte_start":525358,"byte_end":525368,"line_start":192,"line_end":192,"column_start":12,"column_end":22},"name":"subcommand","qualname":"<ArgMatcher>::subcommand","value":"fn (&mut self, sc: SubCommand<'a>) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1371},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matcher.rs","byte_start":525468,"byte_end":525483,"line_start":196,"line_end":196,"column_start":12,"column_end":27},"name":"subcommand_name","qualname":"<ArgMatcher>::subcommand_name","value":"fn (&self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1372},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matcher.rs","byte_start":525560,"byte_end":525564,"line_start":200,"line_end":200,"column_start":12,"column_end":16},"name":"iter","qualname":"<ArgMatcher>::iter","value":"fn (&self) -> Iter<&str, MatchedArg>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1373},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matcher.rs","byte_start":525645,"byte_end":525662,"line_start":204,"line_end":204,"column_start":12,"column_end":29},"name":"inc_occurrence_of","qualname":"<ArgMatcher>::inc_occurrence_of","value":"fn (&mut self, arg: &'a str) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1374},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matcher.rs","byte_start":525967,"byte_end":525985,"line_start":214,"line_end":214,"column_start":12,"column_end":30},"name":"inc_occurrences_of","qualname":"<ArgMatcher>::inc_occurrences_of","value":"fn (&mut self, args: &[&'a str]) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1375},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matcher.rs","byte_start":526181,"byte_end":526191,"line_start":221,"line_end":221,"column_start":12,"column_end":22},"name":"add_val_to","qualname":"<ArgMatcher>::add_val_to","value":"fn (&mut self, arg: &'a str, val: &OsStr) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1376},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matcher.rs","byte_start":526464,"byte_end":526476,"line_start":230,"line_end":230,"column_start":12,"column_end":24},"name":"add_index_to","qualname":"<ArgMatcher>::add_index_to","value":"fn (&mut self, arg: &'a str, idx: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1377},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matcher.rs","byte_start":526729,"byte_end":526744,"line_start":239,"line_end":239,"column_start":12,"column_end":27},"name":"needs_more_vals","qualname":"<ArgMatcher>::needs_more_vals","value":"fn <'b, A> (&self, o: &A) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2643},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matches.rs","byte_start":530117,"byte_end":530127,"line_start":61,"line_end":61,"column_start":12,"column_end":22},"name":"ArgMatches","qualname":"::args::arg_matches::ArgMatches","value":"ArgMatches { args, subcommand, usage }","parent":null,"children":[{"krate":0,"index":2645},{"krate":0,"index":2646},{"krate":0,"index":2647}],"decl_id":null,"docs":" Used to get information about the arguments that were supplied to the program at runtime by\n the user. New instances of this struct are obtained by using the [`App::get_matches`] family of\n methods.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2645},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matches.rs","byte_start":530161,"byte_end":530165,"line_start":63,"line_end":63,"column_start":9,"column_end":13},"name":"args","qualname":"::args::arg_matches::ArgMatches::args","value":"std::collections::HashMap<&'a str, args::matched_arg::MatchedArg>","parent":{"krate":0,"index":2643},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2646},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matches.rs","byte_start":530224,"byte_end":530234,"line_start":65,"line_end":65,"column_start":9,"column_end":19},"name":"subcommand","qualname":"::args::arg_matches::ArgMatches::subcommand","value":"std::option::Option<std::boxed::Box<args::subcommand::SubCommand<'a>>>","parent":{"krate":0,"index":2643},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2647},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matches.rs","byte_start":530292,"byte_end":530297,"line_start":67,"line_end":67,"column_start":9,"column_end":14},"name":"usage","qualname":"::args::arg_matches::ArgMatches::usage","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":2643},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1399},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matches.rs","byte_start":530568,"byte_end":530571,"line_start":82,"line_end":82,"column_start":12,"column_end":15},"name":"new","qualname":"<ArgMatches>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1400},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matches.rs","byte_start":531794,"byte_end":531802,"line_start":115,"line_end":115,"column_start":12,"column_end":20},"name":"value_of","qualname":"<ArgMatches>::value_of","value":"fn <S> (&self, name: S) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of a specific [option] or [positional] argument (i.e. an argument that takes\n an additional value at runtime). If the option wasn't present at runtime\n it returns `None`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1402},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matches.rs","byte_start":533228,"byte_end":533242,"line_start":147,"line_end":147,"column_start":12,"column_end":26},"name":"value_of_lossy","qualname":"<ArgMatches>::value_of_lossy","value":"fn <S> (&'a self, name: S) -> Option<Cow<'a, str>>","parent":null,"children":[],"decl_id":null,"docs":" Gets the lossy value of a specific argument. If the argument wasn't present at runtime\n it returns `None`. A lossy value is one which contains invalid UTF-8 code points, those\n invalid points will be replaced with `\\u{FFFD}`","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1404},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matches.rs","byte_start":534972,"byte_end":534983,"line_start":183,"line_end":183,"column_start":12,"column_end":23},"name":"value_of_os","qualname":"<ArgMatches>::value_of_os","value":"fn <S> (&self, name: S) -> Option<&OsStr>","parent":null,"children":[],"decl_id":null,"docs":" Gets the OS version of a string value of a specific argument. If the option wasn't present\n at runtime it returns `None`. An OS value on Unix-like systems is any series of bytes,\n regardless of whether or not they contain valid UTF-8 code points. Since [`String`]s in\n Rust are guaranteed to be valid UTF-8, a valid filename on a Unix system as an argument\n value may contain invalid UTF-8 code points.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1408},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matches.rs","byte_start":536137,"byte_end":536146,"line_start":214,"line_end":214,"column_start":12,"column_end":21},"name":"values_of","qualname":"<ArgMatches>::values_of","value":"fn <S> (&'a self, name: S) -> Option<Values<'a>>","parent":null,"children":[],"decl_id":null,"docs":" Gets a [`Values`] struct which implements [`Iterator`] for values of a specific argument\n (i.e. an argument that takes multiple values at runtime). If the option wasn't present at\n runtime it returns `None`","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1411},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matches.rs","byte_start":537727,"byte_end":537742,"line_start":251,"line_end":251,"column_start":12,"column_end":27},"name":"values_of_lossy","qualname":"<ArgMatches>::values_of_lossy","value":"fn <S> (&'a self, name: S) -> Option<Vec<String>>","parent":null,"children":[],"decl_id":null,"docs":" Gets the lossy values of a specific argument. If the option wasn't present at runtime\n it returns `None`. A lossy value is one where if it contains invalid UTF-8 code points,\n those invalid points will be replaced with `\\u{FFFD}`","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1414},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matches.rs","byte_start":539771,"byte_end":539783,"line_start":294,"line_end":294,"column_start":12,"column_end":24},"name":"values_of_os","qualname":"<ArgMatches>::values_of_os","value":"fn <S> (&'a self, name: S) -> Option<OsValues<'a>>","parent":null,"children":[],"decl_id":null,"docs":" Gets a [`OsValues`] struct which is implements [`Iterator`] for [`OsString`] values of a\n specific argument. If the option wasn't present at runtime it returns `None`. An OS value\n on Unix-like systems is any series of bytes, regardless of whether or not they contain\n valid UTF-8 code points. Since [`String`]s in Rust are guaranteed to be valid UTF-8, a valid\n filename as an argument value on Linux (for example) may contain invalid UTF-8 code points.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1417},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matches.rs","byte_start":540635,"byte_end":540645,"line_start":322,"line_end":322,"column_start":12,"column_end":22},"name":"is_present","qualname":"<ArgMatches>::is_present","value":"fn <S> (&self, name: S) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if an argument was present at runtime, otherwise `false`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1419},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matches.rs","byte_start":542183,"byte_end":542197,"line_start":370,"line_end":370,"column_start":12,"column_end":26},"name":"occurrences_of","qualname":"<ArgMatches>::occurrences_of","value":"fn <S> (&self, name: S) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of times an argument was used at runtime. If an argument isn't present\n it will return `0`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1422},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matches.rs","byte_start":547748,"byte_end":547756,"line_start":504,"line_end":504,"column_start":12,"column_end":20},"name":"index_of","qualname":"<ArgMatches>::index_of","value":"fn <S> (&self, name: S) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Gets the starting index of the argument in respect to all other arguments. Indices are\n similar to argv indices, but are not exactly 1:1.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1424},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matches.rs","byte_start":551366,"byte_end":551376,"line_start":586,"line_end":586,"column_start":12,"column_end":22},"name":"indices_of","qualname":"<ArgMatches>::indices_of","value":"fn <S> (&'a self, name: S) -> Option<Indices<'a>>","parent":null,"children":[],"decl_id":null,"docs":" Gets all indices of the argument in respect to all other arguments. Indices are\n similar to argv indices, but are not exactly 1:1.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1427},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matches.rs","byte_start":553068,"byte_end":553086,"line_start":630,"line_end":630,"column_start":12,"column_end":30},"name":"subcommand_matches","qualname":"<ArgMatches>::subcommand_matches","value":"fn <S> (&self, name: S) -> Option<&ArgMatches<'a>>","parent":null,"children":[],"decl_id":null,"docs":" Because [`Subcommand`]s are essentially \"sub-[`App`]s\" they have their own [`ArgMatches`]\n as well. This method returns the [`ArgMatches`] for a particular subcommand or `None` if\n the subcommand wasn't present at runtime.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1429},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matches.rs","byte_start":556040,"byte_end":556055,"line_start":697,"line_end":697,"column_start":12,"column_end":27},"name":"subcommand_name","qualname":"<ArgMatches>::subcommand_name","value":"fn (&self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Because [`Subcommand`]s are essentially \"sub-[`App`]s\" they have their own [`ArgMatches`]\n as well.But simply getting the sub-[`ArgMatches`] doesn't help much if we don't also know\n which subcommand was actually used. This method returns the name of the subcommand that was\n used at runtime, or `None` if one wasn't.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1431},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matches.rs","byte_start":558251,"byte_end":558261,"line_start":748,"line_end":748,"column_start":12,"column_end":22},"name":"subcommand","qualname":"<ArgMatches>::subcommand","value":"fn (&self) -> (&str, Option<&ArgMatches<'a>>)","parent":null,"children":[],"decl_id":null,"docs":" This brings together [`ArgMatches::subcommand_matches`] and [`ArgMatches::subcommand_name`]\n by returning a tuple with both pieces of information.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1433},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matches.rs","byte_start":558892,"byte_end":558897,"line_start":768,"line_end":768,"column_start":12,"column_end":17},"name":"usage","qualname":"<ArgMatches>::usage","value":"fn (&self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Returns a string slice of the usage statement for the [`App`] or [`SubCommand`]","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2654},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matches.rs","byte_start":559893,"byte_end":559899,"line_start":800,"line_end":800,"column_start":12,"column_end":18},"name":"Values","qualname":"::args::arg_matches::Values","value":"Values {  }","parent":null,"children":[{"krate":0,"index":2656}],"decl_id":null,"docs":" An iterator for getting multiple values out of an argument via the [`ArgMatches::values_of`]\n method.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2663},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matches.rs","byte_start":561700,"byte_end":561708,"line_start":859,"line_end":859,"column_start":12,"column_end":20},"name":"OsValues","qualname":"::args::arg_matches::OsValues","value":"OsValues {  }","parent":null,"children":[{"krate":0,"index":2665}],"decl_id":null,"docs":" An iterator for getting multiple values out of an argument via the [`ArgMatches::values_of_os`]\n method. Usage of this iterator allows values which contain invalid UTF-8 code points unlike\n [`Values`].","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2672},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matches.rs","byte_start":563273,"byte_end":563280,"line_start":918,"line_end":918,"column_start":12,"column_end":19},"name":"Indices","qualname":"::args::arg_matches::Indices","value":"Indices {  }","parent":null,"children":[{"krate":0,"index":2674}],"decl_id":null,"docs":" An iterator for getting multiple indices out of an argument via the [`ArgMatches::indices_of`]\n method.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2681},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/group.rs","byte_start":569352,"byte_end":569360,"line_start":81,"line_end":81,"column_start":12,"column_end":20},"name":"ArgGroup","qualname":"::args::group::ArgGroup","value":"ArgGroup { name, args, required, requires, conflicts, multiple }","parent":null,"children":[{"krate":0,"index":2683},{"krate":0,"index":2684},{"krate":0,"index":2685},{"krate":0,"index":2686},{"krate":0,"index":2687},{"krate":0,"index":2688}],"decl_id":null,"docs":" `ArgGroup`s are a family of related [arguments] and way for you to express, \"Any of these\n arguments\". By placing arguments in a logical group, you can create easier requirement and\n exclusion rules instead of having to list each argument individually, or when you want a rule\n to apply \"any but not all\" arguments.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2683},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/group.rs","byte_start":569394,"byte_end":569398,"line_start":83,"line_end":83,"column_start":9,"column_end":13},"name":"name","qualname":"::args::group::ArgGroup::name","value":"&'a str","parent":{"krate":0,"index":2681},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2684},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/group.rs","byte_start":569436,"byte_end":569440,"line_start":85,"line_end":85,"column_start":9,"column_end":13},"name":"args","qualname":"::args::group::ArgGroup::args","value":"std::vec::Vec<&'a str>","parent":{"krate":0,"index":2681},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2685},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/group.rs","byte_start":569483,"byte_end":569491,"line_start":87,"line_end":87,"column_start":9,"column_end":17},"name":"required","qualname":"::args::group::ArgGroup::required","value":"bool","parent":{"krate":0,"index":2681},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2686},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/group.rs","byte_start":569526,"byte_end":569534,"line_start":89,"line_end":89,"column_start":9,"column_end":17},"name":"requires","qualname":"::args::group::ArgGroup::requires","value":"std::option::Option<std::vec::Vec<&'a str>>","parent":{"krate":0,"index":2681},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2687},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/group.rs","byte_start":569585,"byte_end":569594,"line_start":91,"line_end":91,"column_start":9,"column_end":18},"name":"conflicts","qualname":"::args::group::ArgGroup::conflicts","value":"std::option::Option<std::vec::Vec<&'a str>>","parent":{"krate":0,"index":2681},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2688},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/group.rs","byte_start":569645,"byte_end":569653,"line_start":93,"line_end":93,"column_start":9,"column_end":17},"name":"multiple","qualname":"::args::group::ArgGroup::multiple","value":"bool","parent":{"krate":0,"index":2681},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1490},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/group.rs","byte_start":570045,"byte_end":570054,"line_start":107,"line_end":107,"column_start":12,"column_end":21},"name":"with_name","qualname":"<ArgGroup>::with_name","value":"fn (n: &'a str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new instance of `ArgGroup` using a unique string name. The name will be used to\n get values from the group or refer to the group inside of conflict and requirement rules.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1491},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/group.rs","byte_start":571552,"byte_end":571555,"line_start":158,"line_end":158,"column_start":12,"column_end":15},"name":"arg","qualname":"<ArgGroup>::arg","value":"fn (mut self, n: &'a str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Adds an [argument] to this group by name","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1492},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/group.rs","byte_start":572522,"byte_end":572526,"line_start":188,"line_end":188,"column_start":12,"column_end":16},"name":"args","qualname":"<ArgGroup>::args","value":"fn (mut self, ns: &[&'a str]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Adds multiple [arguments] to this group by name","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1493},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/group.rs","byte_start":574268,"byte_end":574276,"line_start":235,"line_end":235,"column_start":12,"column_end":20},"name":"multiple","qualname":"<ArgGroup>::multiple","value":"fn (mut self, m: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Allows more than one of the ['Arg']s in this group to be used. (Default: `false`)","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1494},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/group.rs","byte_start":576028,"byte_end":576036,"line_start":274,"line_end":274,"column_start":12,"column_end":20},"name":"required","qualname":"<ArgGroup>::required","value":"fn (mut self, r: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the group as required or not. A required group will be displayed in the usage string\n of the application in the format `<arg|arg2|arg3>`. A required `ArgGroup` simply states\n that one argument from this group *must* be present at runtime (unless\n conflicting with another argument).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1495},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/group.rs","byte_start":577454,"byte_end":577462,"line_start":309,"line_end":309,"column_start":12,"column_end":20},"name":"requires","qualname":"<ArgGroup>::requires","value":"fn (mut self, n: &'a str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the requirement rules of this group. This is not to be confused with a\n [required group]. Requirement rules function just like [argument requirement rules], you\n can name other arguments or groups that must be present when any one of the arguments from\n this group is used.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1496},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/group.rs","byte_start":579126,"byte_end":579138,"line_start":350,"line_end":350,"column_start":12,"column_end":24},"name":"requires_all","qualname":"<ArgGroup>::requires_all","value":"fn (mut self, ns: &[&'a str]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the requirement rules of this group. This is not to be confused with a\n [required group]. Requirement rules function just like [argument requirement rules], you\n can name other arguments or groups that must be present when one of the arguments from this\n group is used.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1497},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/group.rs","byte_start":580485,"byte_end":580499,"line_start":384,"line_end":384,"column_start":12,"column_end":26},"name":"conflicts_with","qualname":"<ArgGroup>::conflicts_with","value":"fn (mut self, n: &'a str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the exclusion rules of this group. Exclusion (aka conflict) rules function just like\n [argument exclusion rules], you can name other arguments or groups that must *not* be\n present when one of the arguments from this group are used.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1498},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/group.rs","byte_start":582024,"byte_end":582042,"line_start":423,"line_end":423,"column_start":12,"column_end":30},"name":"conflicts_with_all","qualname":"<ArgGroup>::conflicts_with_all","value":"fn (mut self, ns: &[&'a str]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the exclusion rules of this group. Exclusion rules function just like\n [argument exclusion rules], you can name other arguments or groups that must *not* be\n present when one of the arguments from this group are used.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2692},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/matched_arg.rs","byte_start":588147,"byte_end":588157,"line_start":6,"line_end":6,"column_start":12,"column_end":22},"name":"MatchedArg","qualname":"::args::matched_arg::MatchedArg","value":"MatchedArg { occurs, indices, vals }","parent":null,"children":[{"krate":0,"index":2693},{"krate":0,"index":2694},{"krate":0,"index":2695}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2693},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/matched_arg.rs","byte_start":588187,"byte_end":588193,"line_start":8,"line_end":8,"column_start":9,"column_end":15},"name":"occurs","qualname":"::args::matched_arg::MatchedArg::occurs","value":"u64","parent":{"krate":0,"index":2692},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2694},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/matched_arg.rs","byte_start":588227,"byte_end":588234,"line_start":10,"line_end":10,"column_start":9,"column_end":16},"name":"indices","qualname":"::args::matched_arg::MatchedArg::indices","value":"std::vec::Vec<usize>","parent":{"krate":0,"index":2692},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2695},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/matched_arg.rs","byte_start":588275,"byte_end":588279,"line_start":12,"line_end":12,"column_start":9,"column_end":13},"name":"vals","qualname":"::args::matched_arg::MatchedArg::vals","value":"std::vec::Vec<std::ffi::OsString>","parent":{"krate":0,"index":2692},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1514},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/matched_arg.rs","byte_start":588511,"byte_end":588514,"line_start":26,"line_end":26,"column_start":12,"column_end":15},"name":"new","qualname":"<MatchedArg>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2879},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/settings.rs","byte_start":589586,"byte_end":589594,"line_start":33,"line_end":33,"column_start":12,"column_end":20},"name":"ArgFlags","qualname":"::args::settings::ArgFlags","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1519},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/settings.rs","byte_start":589631,"byte_end":589634,"line_start":36,"line_end":36,"column_start":12,"column_end":15},"name":"new","qualname":"<ArgFlags>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2891},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/settings.rs","byte_start":591161,"byte_end":591169,"line_start":79,"line_end":79,"column_start":5,"column_end":13},"name":"Required","qualname":"::args::settings::ArgSettings::Required","value":"ArgSettings::Required","parent":{"krate":0,"index":2890},"children":[],"decl_id":null,"docs":" The argument must be used\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2893},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/settings.rs","byte_start":591247,"byte_end":591255,"line_start":81,"line_end":81,"column_start":5,"column_end":13},"name":"Multiple","qualname":"::args::settings::ArgSettings::Multiple","value":"ArgSettings::Multiple","parent":{"krate":0,"index":2890},"children":[],"decl_id":null,"docs":" The argument may be used multiple times such as `--flag --flag`\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2895},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/settings.rs","byte_start":591324,"byte_end":591335,"line_start":83,"line_end":83,"column_start":5,"column_end":16},"name":"EmptyValues","qualname":"::args::settings::ArgSettings::EmptyValues","value":"ArgSettings::EmptyValues","parent":{"krate":0,"index":2890},"children":[],"decl_id":null,"docs":" The argument allows empty values such as `--option \"\"`\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2897},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/settings.rs","byte_start":591479,"byte_end":591485,"line_start":87,"line_end":87,"column_start":5,"column_end":11},"name":"Global","qualname":"::args::settings::ArgSettings::Global","value":"ArgSettings::Global","parent":{"krate":0,"index":2890},"children":[],"decl_id":null,"docs":" The argument should be propagated down through all child [`SubCommand`]s","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2899},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/settings.rs","byte_start":591549,"byte_end":591555,"line_start":89,"line_end":89,"column_start":5,"column_end":11},"name":"Hidden","qualname":"::args::settings::ArgSettings::Hidden","value":"ArgSettings::Hidden","parent":{"krate":0,"index":2890},"children":[],"decl_id":null,"docs":" The argument should **not** be shown in help text\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2901},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/settings.rs","byte_start":591626,"byte_end":591636,"line_start":91,"line_end":91,"column_start":5,"column_end":15},"name":"TakesValue","qualname":"::args::settings::ArgSettings::TakesValue","value":"ArgSettings::TakesValue","parent":{"krate":0,"index":2890},"children":[],"decl_id":null,"docs":" The argument accepts a value, such as `--option <value>`\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2903},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/settings.rs","byte_start":591721,"byte_end":591738,"line_start":93,"line_end":93,"column_start":5,"column_end":22},"name":"UseValueDelimiter","qualname":"::args::settings::ArgSettings::UseValueDelimiter","value":"ArgSettings::UseValueDelimiter","parent":{"krate":0,"index":2890},"children":[],"decl_id":null,"docs":" Determines if the argument allows values to be grouped via a delimiter\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2905},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/settings.rs","byte_start":591804,"byte_end":591816,"line_start":95,"line_end":95,"column_start":5,"column_end":17},"name":"NextLineHelp","qualname":"::args::settings::ArgSettings::NextLineHelp","value":"ArgSettings::NextLineHelp","parent":{"krate":0,"index":2890},"children":[],"decl_id":null,"docs":" Prints the help text on the line after the argument\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2907},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/settings.rs","byte_start":591892,"byte_end":591908,"line_start":97,"line_end":97,"column_start":5,"column_end":21},"name":"RequireDelimiter","qualname":"::args::settings::ArgSettings::RequireDelimiter","value":"ArgSettings::RequireDelimiter","parent":{"krate":0,"index":2890},"children":[],"decl_id":null,"docs":" Requires the use of a value delimiter for all multiple values\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2909},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/settings.rs","byte_start":591969,"byte_end":591987,"line_start":99,"line_end":99,"column_start":5,"column_end":23},"name":"HidePossibleValues","qualname":"::args::settings::ArgSettings::HidePossibleValues","value":"ArgSettings::HidePossibleValues","parent":{"krate":0,"index":2890},"children":[],"decl_id":null,"docs":" Hides the possible values from the help string\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2911},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/settings.rs","byte_start":592035,"byte_end":592053,"line_start":101,"line_end":101,"column_start":5,"column_end":23},"name":"AllowLeadingHyphen","qualname":"::args::settings::ArgSettings::AllowLeadingHyphen","value":"ArgSettings::AllowLeadingHyphen","parent":{"krate":0,"index":2890},"children":[],"decl_id":null,"docs":" Allows vals that start with a '-'\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2913},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/settings.rs","byte_start":592109,"byte_end":592122,"line_start":103,"line_end":103,"column_start":5,"column_end":18},"name":"RequireEquals","qualname":"::args::settings::ArgSettings::RequireEquals","value":"ArgSettings::RequireEquals","parent":{"krate":0,"index":2890},"children":[],"decl_id":null,"docs":" Require options use `--option=val` syntax\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2915},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/settings.rs","byte_start":592241,"byte_end":592245,"line_start":106,"line_end":106,"column_start":5,"column_end":9},"name":"Last","qualname":"::args::settings::ArgSettings::Last","value":"ArgSettings::Last","parent":{"krate":0,"index":2890},"children":[],"decl_id":null,"docs":" Specifies that the arg is the last positional argument and may be accessed early via `--`\n syntax\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2917},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/settings.rs","byte_start":592304,"byte_end":592320,"line_start":108,"line_end":108,"column_start":5,"column_end":21},"name":"HideDefaultValue","qualname":"::args::settings::ArgSettings::HideDefaultValue","value":"ArgSettings::HideDefaultValue","parent":{"krate":0,"index":2890},"children":[],"decl_id":null,"docs":" Hides the default value from the help string\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2919},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/settings.rs","byte_start":592380,"byte_end":592395,"line_start":110,"line_end":110,"column_start":5,"column_end":20},"name":"CaseInsensitive","qualname":"::args::settings::ArgSettings::CaseInsensitive","value":"ArgSettings::CaseInsensitive","parent":{"krate":0,"index":2890},"children":[],"decl_id":null,"docs":" Makes `Arg::possible_values` case insensitive\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2921},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/settings.rs","byte_start":592446,"byte_end":592459,"line_start":112,"line_end":112,"column_start":5,"column_end":18},"name":"HideEnvValues","qualname":"::args::settings::ArgSettings::HideEnvValues","value":"ArgSettings::HideEnvValues","parent":{"krate":0,"index":2890},"children":[],"decl_id":null,"docs":" Hides ENV values in the help message\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2923},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/settings.rs","byte_start":592529,"byte_end":592544,"line_start":114,"line_end":114,"column_start":5,"column_end":20},"name":"HiddenShortHelp","qualname":"::args::settings::ArgSettings::HiddenShortHelp","value":"ArgSettings::HiddenShortHelp","parent":{"krate":0,"index":2890},"children":[],"decl_id":null,"docs":" The argument should **not** be shown in short help text\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2925},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/settings.rs","byte_start":592613,"byte_end":592627,"line_start":116,"line_end":116,"column_start":5,"column_end":19},"name":"HiddenLongHelp","qualname":"::args::settings::ArgSettings::HiddenLongHelp","value":"ArgSettings::HiddenLongHelp","parent":{"krate":0,"index":2890},"children":[],"decl_id":null,"docs":" The argument should **not** be shown in long help text\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2927},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/settings.rs","byte_start":592652,"byte_end":592669,"line_start":118,"line_end":118,"column_start":5,"column_end":22},"name":"RequiredUnlessAll","qualname":"::args::settings::ArgSettings::RequiredUnlessAll","value":"ArgSettings::RequiredUnlessAll","parent":{"krate":0,"index":2890},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2929},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/settings.rs","byte_start":592694,"byte_end":592714,"line_start":120,"line_end":120,"column_start":5,"column_end":25},"name":"ValueDelimiterNotSet","qualname":"::args::settings::ArgSettings::ValueDelimiterNotSet","value":"ArgSettings::ValueDelimiterNotSet","parent":{"krate":0,"index":2890},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2890},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/settings.rs","byte_start":591109,"byte_end":591120,"line_start":77,"line_end":77,"column_start":10,"column_end":21},"name":"ArgSettings","qualname":"::args::settings::ArgSettings","value":"ArgSettings::{Required, Multiple, EmptyValues, Global, Hidden, TakesValue, UseValueDelimiter, NextLineHelp, RequireDelimiter, HidePossibleValues, AllowLeadingHyphen, RequireEquals, Last, HideDefaultValue, CaseInsensitive, HideEnvValues, HiddenShortHelp, HiddenLongHelp, RequiredUnlessAll, ValueDelimiterNotSet}","parent":null,"children":[{"krate":0,"index":2891},{"krate":0,"index":2893},{"krate":0,"index":2895},{"krate":0,"index":2897},{"krate":0,"index":2899},{"krate":0,"index":2901},{"krate":0,"index":2903},{"krate":0,"index":2905},{"krate":0,"index":2907},{"krate":0,"index":2909},{"krate":0,"index":2911},{"krate":0,"index":2913},{"krate":0,"index":2915},{"krate":0,"index":2917},{"krate":0,"index":2919},{"krate":0,"index":2921},{"krate":0,"index":2923},{"krate":0,"index":2925},{"krate":0,"index":2927},{"krate":0,"index":2929}],"decl_id":null,"docs":" Various settings that apply to arguments and may be set, unset, and checked via getter/setter\n methods [`Arg::set`], [`Arg::unset`], and [`Arg::is_set`]","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2938},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/subcommand.rs","byte_start":597851,"byte_end":597861,"line_start":31,"line_end":31,"column_start":12,"column_end":22},"name":"SubCommand","qualname":"::args::subcommand::SubCommand","value":"SubCommand { name, matches }","parent":null,"children":[{"krate":0,"index":2940},{"krate":0,"index":2941}],"decl_id":null,"docs":" The abstract representation of a command line subcommand.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2940},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/subcommand.rs","byte_start":597895,"byte_end":597899,"line_start":33,"line_end":33,"column_start":9,"column_end":13},"name":"name","qualname":"::args::subcommand::SubCommand::name","value":"std::string::String","parent":{"krate":0,"index":2938},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2941},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/subcommand.rs","byte_start":597936,"byte_end":597943,"line_start":35,"line_end":35,"column_start":9,"column_end":16},"name":"matches","qualname":"::args::subcommand::SubCommand::matches","value":"args::arg_matches::ArgMatches<'a>","parent":{"krate":0,"index":2938},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1530},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/subcommand.rs","byte_start":598388,"byte_end":598397,"line_start":51,"line_end":51,"column_start":12,"column_end":21},"name":"with_name","qualname":"<SubCommand>::with_name","value":"fn <'b> (name: &str) -> App<'a, 'b>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new instance of a subcommand requiring a name. The name will be displayed\n to the user when they print version or help and usage information.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2968},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/completions/shell.rs","byte_start":624125,"byte_end":624129,"line_start":11,"line_end":11,"column_start":5,"column_end":9},"name":"Bash","qualname":"::completions::shell::Shell::Bash","value":"Shell::Bash","parent":{"krate":0,"index":2967},"children":[],"decl_id":null,"docs":" Generates a .bash completion file for the Bourne Again SHell (BASH)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2970},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/completions/shell.rs","byte_start":624219,"byte_end":624223,"line_start":13,"line_end":13,"column_start":5,"column_end":9},"name":"Fish","qualname":"::completions::shell::Shell::Fish","value":"Shell::Fish","parent":{"krate":0,"index":2967},"children":[],"decl_id":null,"docs":" Generates a .fish completion file for the Friendly Interactive SHell (fish)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2972},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/completions/shell.rs","byte_start":624287,"byte_end":624290,"line_start":15,"line_end":15,"column_start":5,"column_end":8},"name":"Zsh","qualname":"::completions::shell::Shell::Zsh","value":"Shell::Zsh","parent":{"krate":0,"index":2967},"children":[],"decl_id":null,"docs":" Generates a completion file for the Z SHell (ZSH)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2974},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/completions/shell.rs","byte_start":624347,"byte_end":624357,"line_start":17,"line_end":17,"column_start":5,"column_end":15},"name":"PowerShell","qualname":"::completions::shell::Shell::PowerShell","value":"Shell::PowerShell","parent":{"krate":0,"index":2967},"children":[],"decl_id":null,"docs":" Generates a completion file for PowerShell\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2976},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/completions/shell.rs","byte_start":624410,"byte_end":624416,"line_start":19,"line_end":19,"column_start":5,"column_end":11},"name":"Elvish","qualname":"::completions::shell::Shell::Elvish","value":"Shell::Elvish","parent":{"krate":0,"index":2967},"children":[],"decl_id":null,"docs":" Generates a completion file for Elvish\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2967},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/completions/shell.rs","byte_start":624037,"byte_end":624042,"line_start":9,"line_end":9,"column_start":10,"column_end":15},"name":"Shell","qualname":"::completions::shell::Shell","value":"Shell::{Bash, Fish, Zsh, PowerShell, Elvish}","parent":null,"children":[{"krate":0,"index":2968},{"krate":0,"index":2970},{"krate":0,"index":2972},{"krate":0,"index":2974},{"krate":0,"index":2976}],"decl_id":null,"docs":" Describes which shell to produce a completions file for\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1620},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/completions/shell.rs","byte_start":624504,"byte_end":624512,"line_start":24,"line_end":24,"column_start":12,"column_end":20},"name":"variants","qualname":"<Shell>::variants","value":"fn () -> [&'static str; 5]","parent":null,"children":[],"decl_id":null,"docs":" A list of possible variants in `&'static str` form\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1704},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/errors.rs","byte_start":640285,"byte_end":640291,"line_start":18,"line_end":18,"column_start":10,"column_end":16},"name":"Result","qualname":"::errors::Result","value":"StdResult<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" Short hand for [`Result`] type","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2988},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/errors.rs","byte_start":641021,"byte_end":641033,"line_start":39,"line_end":39,"column_start":5,"column_end":17},"name":"InvalidValue","qualname":"::errors::ErrorKind::InvalidValue","value":"ErrorKind::InvalidValue","parent":{"krate":0,"index":2987},"children":[],"decl_id":null,"docs":" Occurs when an [`Arg`] has a set of possible values,\n and the user provides a value which isn't in that set.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2990},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/errors.rs","byte_start":641505,"byte_end":641520,"line_start":53,"line_end":53,"column_start":5,"column_end":20},"name":"UnknownArgument","qualname":"::errors::ErrorKind::UnknownArgument","value":"ErrorKind::UnknownArgument","parent":{"krate":0,"index":2987},"children":[],"decl_id":null,"docs":" Occurs when a user provides a flag, option, argument or subcommand which isn't defined.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2992},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/errors.rs","byte_start":642631,"byte_end":642648,"line_start":77,"line_end":77,"column_start":5,"column_end":22},"name":"InvalidSubcommand","qualname":"::errors::ErrorKind::InvalidSubcommand","value":"ErrorKind::InvalidSubcommand","parent":{"krate":0,"index":2987},"children":[],"decl_id":null,"docs":" Occurs when the user provides an unrecognized [`SubCommand`] which meets the threshold for\n being similar enough to an existing subcommand.\n If it doesn't meet the threshold, or the 'suggestions' feature is disabled,\n the more general [`UnknownArgument`] error is returned.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2994},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/errors.rs","byte_start":643924,"byte_end":643946,"line_start":104,"line_end":104,"column_start":5,"column_end":27},"name":"UnrecognizedSubcommand","qualname":"::errors::ErrorKind::UnrecognizedSubcommand","value":"ErrorKind::UnrecognizedSubcommand","parent":{"krate":0,"index":2987},"children":[],"decl_id":null,"docs":" Occurs when the user provides an unrecognized [`SubCommand`] which either\n doesn't meet the threshold for being similar enough to an existing subcommand,\n or the 'suggestions' feature is disabled.\n Otherwise the more detailed [`InvalidSubcommand`] error is returned.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2996},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/errors.rs","byte_start":644474,"byte_end":644484,"line_start":121,"line_end":121,"column_start":5,"column_end":15},"name":"EmptyValue","qualname":"::errors::ErrorKind::EmptyValue","value":"ErrorKind::EmptyValue","parent":{"krate":0,"index":2987},"children":[],"decl_id":null,"docs":" Occurs when the user provides an empty value for an option that does not allow empty\n values.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2998},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/errors.rs","byte_start":645255,"byte_end":645270,"line_start":144,"line_end":144,"column_start":5,"column_end":20},"name":"ValueValidation","qualname":"::errors::ErrorKind::ValueValidation","value":"ErrorKind::ValueValidation","parent":{"krate":0,"index":2987},"children":[],"decl_id":null,"docs":" Occurs when the user provides a value for an argument with a custom validation and the\n value fails that validation.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3000},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/errors.rs","byte_start":645892,"byte_end":645905,"line_start":162,"line_end":162,"column_start":5,"column_end":18},"name":"TooManyValues","qualname":"::errors::ErrorKind::TooManyValues","value":"ErrorKind::TooManyValues","parent":{"krate":0,"index":2987},"children":[],"decl_id":null,"docs":" Occurs when a user provides more values for an argument than were defined by setting\n [`Arg::max_values`].","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3002},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/errors.rs","byte_start":646529,"byte_end":646541,"line_start":180,"line_end":180,"column_start":5,"column_end":17},"name":"TooFewValues","qualname":"::errors::ErrorKind::TooFewValues","value":"ErrorKind::TooFewValues","parent":{"krate":0,"index":2987},"children":[],"decl_id":null,"docs":" Occurs when the user provides fewer values for an argument than were defined by setting\n [`Arg::min_values`].","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3004},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/errors.rs","byte_start":647383,"byte_end":647402,"line_start":202,"line_end":202,"column_start":5,"column_end":24},"name":"WrongNumberOfValues","qualname":"::errors::ErrorKind::WrongNumberOfValues","value":"ErrorKind::WrongNumberOfValues","parent":{"krate":0,"index":2987},"children":[],"decl_id":null,"docs":" Occurs when the user provides a different number of values for an argument than what's\n been defined by setting [`Arg::number_of_values`] or than was implicitly set by\n [`Arg::value_names`].","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3006},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/errors.rs","byte_start":648037,"byte_end":648053,"line_start":221,"line_end":221,"column_start":5,"column_end":21},"name":"ArgumentConflict","qualname":"::errors::ErrorKind::ArgumentConflict","value":"ErrorKind::ArgumentConflict","parent":{"krate":0,"index":2987},"children":[],"decl_id":null,"docs":" Occurs when the user provides two values which conflict with each other and can't be used\n together.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3008},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/errors.rs","byte_start":648522,"byte_end":648545,"line_start":236,"line_end":236,"column_start":5,"column_end":28},"name":"MissingRequiredArgument","qualname":"::errors::ErrorKind::MissingRequiredArgument","value":"ErrorKind::MissingRequiredArgument","parent":{"krate":0,"index":2987},"children":[],"decl_id":null,"docs":" Occurs when the user does not provide one or more required arguments.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3010},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/errors.rs","byte_start":649258,"byte_end":649275,"line_start":256,"line_end":256,"column_start":5,"column_end":22},"name":"MissingSubcommand","qualname":"::errors::ErrorKind::MissingSubcommand","value":"ErrorKind::MissingSubcommand","parent":{"krate":0,"index":2987},"children":[],"decl_id":null,"docs":" Occurs when a subcommand is required (as defined by [`AppSettings::SubcommandRequired`]),\n but the user does not provide one.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3012},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/errors.rs","byte_start":650204,"byte_end":650231,"line_start":277,"line_end":277,"column_start":5,"column_end":32},"name":"MissingArgumentOrSubcommand","qualname":"::errors::ErrorKind::MissingArgumentOrSubcommand","value":"ErrorKind::MissingArgumentOrSubcommand","parent":{"krate":0,"index":2987},"children":[],"decl_id":null,"docs":" Occurs when either an argument or [`SubCommand`] is required, as defined by\n [`AppSettings::ArgRequiredElseHelp`], but the user did not provide one.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3014},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/errors.rs","byte_start":650771,"byte_end":650794,"line_start":293,"line_end":293,"column_start":5,"column_end":28},"name":"UnexpectedMultipleUsage","qualname":"::errors::ErrorKind::UnexpectedMultipleUsage","value":"ErrorKind::UnexpectedMultipleUsage","parent":{"krate":0,"index":2987},"children":[],"decl_id":null,"docs":" Occurs when the user provides multiple values to an argument which doesn't allow that.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3016},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/errors.rs","byte_start":651891,"byte_end":651902,"line_start":321,"line_end":321,"column_start":5,"column_end":16},"name":"InvalidUtf8","qualname":"::errors::ErrorKind::InvalidUtf8","value":"ErrorKind::InvalidUtf8","parent":{"krate":0,"index":2987},"children":[],"decl_id":null,"docs":" Occurs when the user provides a value containing invalid UTF-8 for an argument and\n [`AppSettings::StrictUtf8`] is set.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3018},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/errors.rs","byte_start":652493,"byte_end":652506,"line_start":338,"line_end":338,"column_start":5,"column_end":18},"name":"HelpDisplayed","qualname":"::errors::ErrorKind::HelpDisplayed","value":"ErrorKind::HelpDisplayed","parent":{"krate":0,"index":2987},"children":[],"decl_id":null,"docs":" Not a true \"error\" as it means `--help` or similar was used.\n The help message will be sent to `stdout`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3020},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/errors.rs","byte_start":652947,"byte_end":652963,"line_start":352,"line_end":352,"column_start":5,"column_end":21},"name":"VersionDisplayed","qualname":"::errors::ErrorKind::VersionDisplayed","value":"ErrorKind::VersionDisplayed","parent":{"krate":0,"index":2987},"children":[],"decl_id":null,"docs":" Not a true \"error\" as it means `--version` or similar was used.\n The message will be sent to `stdout`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3022},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/errors.rs","byte_start":653337,"byte_end":653353,"line_start":359,"line_end":359,"column_start":5,"column_end":21},"name":"ArgumentNotFound","qualname":"::errors::ErrorKind::ArgumentNotFound","value":"ErrorKind::ArgumentNotFound","parent":{"krate":0,"index":2987},"children":[],"decl_id":null,"docs":" Occurs when using the [`value_t!`] and [`values_t!`] macros to convert an argument value\n into type `T`, but the argument you requested wasn't used. I.e. you asked for an argument\n with name `config` to be converted, but `config` wasn't used by the user.\n [`value_t!`]: ./macro.value_t!.html\n [`values_t!`]: ./macro.values_t!.html\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3024},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/errors.rs","byte_start":653555,"byte_end":653557,"line_start":364,"line_end":364,"column_start":5,"column_end":7},"name":"Io","qualname":"::errors::ErrorKind::Io","value":"ErrorKind::Io","parent":{"krate":0,"index":2987},"children":[],"decl_id":null,"docs":" Represents an [I/O error].\n Can occur when writing to `stderr` or `stdout` or reading a configuration file.\n [I/O error]: https://doc.rust-lang.org/std/io/struct.Error.html\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3026},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/errors.rs","byte_start":653853,"byte_end":653859,"line_start":371,"line_end":371,"column_start":5,"column_end":11},"name":"Format","qualname":"::errors::ErrorKind::Format","value":"ErrorKind::Format","parent":{"krate":0,"index":2987},"children":[],"decl_id":null,"docs":" Represents a [Format error] (which is a part of [`Display`]).\n Typically caused by writing to `stderr` or `stdout`.","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2987},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/errors.rs","byte_start":640416,"byte_end":640425,"line_start":22,"line_end":22,"column_start":10,"column_end":19},"name":"ErrorKind","qualname":"::errors::ErrorKind","value":"ErrorKind::{InvalidValue, UnknownArgument, InvalidSubcommand, UnrecognizedSubcommand, EmptyValue, ValueValidation, TooManyValues, TooFewValues, WrongNumberOfValues, ArgumentConflict, MissingRequiredArgument, MissingSubcommand, MissingArgumentOrSubcommand, UnexpectedMultipleUsage, InvalidUtf8, HelpDisplayed, VersionDisplayed, ArgumentNotFound, Io, Format}","parent":null,"children":[{"krate":0,"index":2988},{"krate":0,"index":2990},{"krate":0,"index":2992},{"krate":0,"index":2994},{"krate":0,"index":2996},{"krate":0,"index":2998},{"krate":0,"index":3000},{"krate":0,"index":3002},{"krate":0,"index":3004},{"krate":0,"index":3006},{"krate":0,"index":3008},{"krate":0,"index":3010},{"krate":0,"index":3012},{"krate":0,"index":3014},{"krate":0,"index":3016},{"krate":0,"index":3018},{"krate":0,"index":3020},{"krate":0,"index":3022},{"krate":0,"index":3024},{"krate":0,"index":3026}],"decl_id":null,"docs":" Command line argument parser kind of error\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3035},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/errors.rs","byte_start":653931,"byte_end":653936,"line_start":376,"line_end":376,"column_start":12,"column_end":17},"name":"Error","qualname":"::errors::Error","value":"Error { message, kind, info }","parent":null,"children":[{"krate":0,"index":3036},{"krate":0,"index":3037},{"krate":0,"index":3038}],"decl_id":null,"docs":" Command Line Argument Parser Error\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3036},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/errors.rs","byte_start":653979,"byte_end":653986,"line_start":378,"line_end":378,"column_start":9,"column_end":16},"name":"message","qualname":"::errors::Error::message","value":"std::string::String","parent":{"krate":0,"index":3035},"children":[],"decl_id":null,"docs":" Formatted error message\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3037},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/errors.rs","byte_start":654030,"byte_end":654034,"line_start":380,"line_end":380,"column_start":9,"column_end":13},"name":"kind","qualname":"::errors::Error::kind","value":"errors::ErrorKind","parent":{"krate":0,"index":3035},"children":[],"decl_id":null,"docs":" The type of error\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3038},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/errors.rs","byte_start":654152,"byte_end":654156,"line_start":382,"line_end":382,"column_start":9,"column_end":13},"name":"info","qualname":"::errors::Error::info","value":"std::option::Option<std::vec::Vec<std::string::String>>","parent":{"krate":0,"index":3035},"children":[],"decl_id":null,"docs":" Any additional information passed along, such as the argument name that caused the error\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1707},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/errors.rs","byte_start":654263,"byte_end":654273,"line_start":387,"line_end":387,"column_start":12,"column_end":22},"name":"use_stderr","qualname":"<Error>::use_stderr","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Should the message be written to `stdout` or not\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1708},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/errors.rs","byte_start":654513,"byte_end":654517,"line_start":395,"line_end":395,"column_start":12,"column_end":16},"name":"exit","qualname":"<Error>::exit","value":"fn (&self) -> !","parent":null,"children":[],"decl_id":null,"docs":" Prints the error to `stderr` and exits with a status of `1`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1709},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/errors.rs","byte_start":654834,"byte_end":654842,"line_start":406,"line_end":406,"column_start":12,"column_end":20},"name":"write_to","qualname":"<Error>::write_to","value":"fn <W> (&self, w: &mut W) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1711},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/errors.rs","byte_start":654966,"byte_end":654983,"line_start":411,"line_end":411,"column_start":12,"column_end":29},"name":"argument_conflict","qualname":"<Error>::argument_conflict","value":"fn <O, U> (arg: &AnyArg, other: Option<O>, usage: U, color: ColorWhen) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1714},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/errors.rs","byte_start":656124,"byte_end":656135,"line_start":450,"line_end":450,"column_start":12,"column_end":23},"name":"empty_value","qualname":"<Error>::empty_value","value":"fn <U> (arg: &AnyArg, usage: U, color: ColorWhen) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1716},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/errors.rs","byte_start":656851,"byte_end":656864,"line_start":475,"line_end":475,"column_start":12,"column_end":25},"name":"invalid_value","qualname":"<Error>::invalid_value","value":"fn <B, G, U> (bad_val: B, good_vals: &[G], arg: &AnyArg, usage: U, color: ColorWhen) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1720},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/errors.rs","byte_start":658192,"byte_end":658210,"line_start":521,"line_end":521,"column_start":12,"column_end":30},"name":"invalid_subcommand","qualname":"<Error>::invalid_subcommand","value":"fn <S, D, N, U> (subcmd: S, did_you_mean: D, name: N, usage: U, color: ColorWhen) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1725},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/errors.rs","byte_start":659335,"byte_end":659358,"line_start":562,"line_end":562,"column_start":12,"column_end":35},"name":"unrecognized_subcommand","qualname":"<Error>::unrecognized_subcommand","value":"fn <S, N> (subcmd: S, name: N, color: ColorWhen) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1728},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/errors.rs","byte_start":660154,"byte_end":660179,"line_start":590,"line_end":590,"column_start":12,"column_end":37},"name":"missing_required_argument","qualname":"<Error>::missing_required_argument","value":"fn <R, U> (required: R, usage: U, color: ColorWhen) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1731},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/errors.rs","byte_start":660861,"byte_end":660879,"line_start":615,"line_end":615,"column_start":12,"column_end":30},"name":"missing_subcommand","qualname":"<Error>::missing_subcommand","value":"fn <N, U> (name: N, usage: U, color: ColorWhen) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1734},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/errors.rs","byte_start":661570,"byte_end":661582,"line_start":640,"line_end":640,"column_start":12,"column_end":24},"name":"invalid_utf8","qualname":"<Error>::invalid_utf8","value":"fn <U> (usage: U, color: ColorWhen) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1736},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/errors.rs","byte_start":662188,"byte_end":662203,"line_start":663,"line_end":663,"column_start":12,"column_end":27},"name":"too_many_values","qualname":"<Error>::too_many_values","value":"fn <V, U> (val: V, arg: &AnyArg, usage: U, color: ColorWhen) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1739},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/errors.rs","byte_start":663070,"byte_end":663084,"line_start":691,"line_end":691,"column_start":12,"column_end":26},"name":"too_few_values","qualname":"<Error>::too_few_values","value":"fn <U> (arg: &AnyArg, min_vals: u64, curr_vals: usize, usage: U, color: ColorWhen) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1741},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/errors.rs","byte_start":664054,"byte_end":664070,"line_start":725,"line_end":725,"column_start":12,"column_end":28},"name":"value_validation","qualname":"<Error>::value_validation","value":"fn (arg: Option<&AnyArg>, err: String, color: ColorWhen) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1742},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/errors.rs","byte_start":664710,"byte_end":664731,"line_start":747,"line_end":747,"column_start":12,"column_end":33},"name":"value_validation_auto","qualname":"<Error>::value_validation_auto","value":"fn (err: String) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1743},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/errors.rs","byte_start":664888,"byte_end":664910,"line_start":753,"line_end":753,"column_start":12,"column_end":34},"name":"wrong_number_of_values","qualname":"<Error>::wrong_number_of_values","value":"fn <S, U> (arg: &AnyArg, num_vals: u64, curr_vals: usize, suffix: S, usage: U, color: ColorWhen) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1746},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/errors.rs","byte_start":665881,"byte_end":665906,"line_start":789,"line_end":789,"column_start":12,"column_end":37},"name":"unexpected_multiple_usage","qualname":"<Error>::unexpected_multiple_usage","value":"fn <U> (arg: &AnyArg, usage: U, color: ColorWhen) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1748},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/errors.rs","byte_start":666659,"byte_end":666675,"line_start":814,"line_end":814,"column_start":12,"column_end":28},"name":"unknown_argument","qualname":"<Error>::unknown_argument","value":"fn <A, U> (arg: A, did_you_mean: &str, usage: U, color: ColorWhen) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1751},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/errors.rs","byte_start":667626,"byte_end":667634,"line_start":846,"line_end":846,"column_start":12,"column_end":20},"name":"io_error","qualname":"<Error>::io_error","value":"fn (e: &Error, color: ColorWhen) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1752},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/errors.rs","byte_start":667985,"byte_end":668008,"line_start":859,"line_end":859,"column_start":12,"column_end":35},"name":"argument_not_found_auto","qualname":"<Error>::argument_not_found_auto","value":"fn <A> (arg: A) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1754},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/errors.rs","byte_start":668682,"byte_end":668698,"line_start":883,"line_end":883,"column_start":12,"column_end":28},"name":"with_description","qualname":"<Error>::with_description","value":"fn (description: &str, kind: ErrorKind) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an error with a custom description.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3045},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/fmt.rs","byte_start":669896,"byte_end":669900,"line_start":15,"line_end":15,"column_start":5,"column_end":9},"name":"Auto","qualname":"::fmt::ColorWhen::Auto","value":"ColorWhen::Auto","parent":{"krate":0,"index":3044},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3047},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/fmt.rs","byte_start":669906,"byte_end":669912,"line_start":16,"line_end":16,"column_start":5,"column_end":11},"name":"Always","qualname":"::fmt::ColorWhen::Always","value":"ColorWhen::Always","parent":{"krate":0,"index":3044},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3049},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/fmt.rs","byte_start":669918,"byte_end":669923,"line_start":17,"line_end":17,"column_start":5,"column_end":10},"name":"Never","qualname":"::fmt::ColorWhen::Never","value":"ColorWhen::Never","parent":{"krate":0,"index":3044},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3044},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/fmt.rs","byte_start":669880,"byte_end":669889,"line_start":14,"line_end":14,"column_start":10,"column_end":19},"name":"ColorWhen","qualname":"::fmt::ColorWhen","value":"ColorWhen::{Auto, Always, Never}","parent":null,"children":[{"krate":0,"index":3045},{"krate":0,"index":3047},{"krate":0,"index":3049}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3060},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/fmt.rs","byte_start":672342,"byte_end":672347,"line_start":123,"line_end":123,"column_start":5,"column_end":10},"name":"Error","qualname":"::fmt::Format::Error","value":"Format::Error(T)","parent":{"krate":0,"index":3058},"children":[],"decl_id":null,"docs":" Defines the style used for errors, defaults to Red\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3063},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/fmt.rs","byte_start":672420,"byte_end":672427,"line_start":125,"line_end":125,"column_start":5,"column_end":12},"name":"Warning","qualname":"::fmt::Format::Warning","value":"Format::Warning(T)","parent":{"krate":0,"index":3058},"children":[],"decl_id":null,"docs":" Defines the style used for warnings, defaults to Yellow\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3066},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/fmt.rs","byte_start":672502,"byte_end":672506,"line_start":127,"line_end":127,"column_start":5,"column_end":9},"name":"Good","qualname":"::fmt::Format::Good","value":"Format::Good(T)","parent":{"krate":0,"index":3058},"children":[],"decl_id":null,"docs":" Defines the style used for good values, defaults to Green\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3069},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/fmt.rs","byte_start":672551,"byte_end":672555,"line_start":129,"line_end":129,"column_start":5,"column_end":9},"name":"None","qualname":"::fmt::Format::None","value":"Format::None(T)","parent":{"krate":0,"index":3058},"children":[],"decl_id":null,"docs":" Defines no formatting style\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3058},"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/fmt.rs","byte_start":672267,"byte_end":672273,"line_start":121,"line_end":121,"column_start":10,"column_end":16},"name":"Format","qualname":"::fmt::Format","value":"Format::{Error, Warning, Good, None}","parent":null,"children":[{"krate":0,"index":3060},{"krate":0,"index":3063},{"krate":0,"index":3066},{"krate":0,"index":3069}],"decl_id":null,"docs":" Defines styles for different types of error messages. Defaults to Error=Red, Warning=Yellow,\n and Good=Green\n","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/help.rs","byte_start":134127,"byte_end":134128,"line_start":40,"line_end":40,"column_start":44,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/help.rs","byte_start":134325,"byte_end":134326,"line_start":45,"line_end":45,"column_start":42,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":123}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/help.rs","byte_start":134570,"byte_end":134573,"line_start":58,"line_end":58,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":131}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/help.rs","byte_start":135481,"byte_end":135485,"line_start":97,"line_end":97,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":146},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":152}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/help.rs","byte_start":138946,"byte_end":138950,"line_start":204,"line_end":204,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":155},{"krate":0,"index":161},{"krate":0,"index":167},{"krate":0,"index":170},{"krate":0,"index":173},{"krate":0,"index":176},{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":185}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/help.rs","byte_start":153386,"byte_end":153390,"line_start":590,"line_end":590,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":189},{"krate":0,"index":191},{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":196}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/help.rs","byte_start":163851,"byte_end":163855,"line_start":881,"line_end":881,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":222}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/meta.rs","byte_start":170369,"byte_end":170376,"line_start":24,"line_end":24,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":228},{"krate":0,"index":229}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs","byte_start":172641,"byte_end":172647,"line_start":81,"line_end":81,"column_start":14,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":280},{"krate":0,"index":281},{"krate":0,"index":283},{"krate":0,"index":285},{"krate":0,"index":287},{"krate":0,"index":289},{"krate":0,"index":302},{"krate":0,"index":303},{"krate":0,"index":304},{"krate":0,"index":306},{"krate":0,"index":309},{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":312},{"krate":0,"index":315},{"krate":0,"index":316},{"krate":0,"index":317},{"krate":0,"index":321},{"krate":0,"index":322},{"krate":0,"index":323},{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":327},{"krate":0,"index":329},{"krate":0,"index":331},{"krate":0,"index":333},{"krate":0,"index":336},{"krate":0,"index":337},{"krate":0,"index":338},{"krate":0,"index":339},{"krate":0,"index":343},{"krate":0,"index":344},{"krate":0,"index":350},{"krate":0,"index":359},{"krate":0,"index":362},{"krate":0,"index":370},{"krate":0,"index":371},{"krate":0,"index":372},{"krate":0,"index":373},{"krate":0,"index":379},{"krate":0,"index":380},{"krate":0,"index":386},{"krate":0,"index":390},{"krate":0,"index":391},{"krate":0,"index":392},{"krate":0,"index":393},{"krate":0,"index":399},{"krate":0,"index":400},{"krate":0,"index":401},{"krate":0,"index":409},{"krate":0,"index":413},{"krate":0,"index":415},{"krate":0,"index":417},{"krate":0,"index":419},{"krate":0,"index":421},{"krate":0,"index":424},{"krate":0,"index":426},{"krate":0,"index":430},{"krate":0,"index":431},{"krate":0,"index":433},{"krate":0,"index":435},{"krate":0,"index":437},{"krate":0,"index":439},{"krate":0,"index":441},{"krate":0,"index":442},{"krate":0,"index":443},{"krate":0,"index":444},{"krate":0,"index":445},{"krate":0,"index":446},{"krate":0,"index":447},{"krate":0,"index":449},{"krate":0,"index":451},{"krate":0,"index":452},{"krate":0,"index":454}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/settings.rs","byte_start":256516,"byte_end":256524,"line_start":58,"line_end":58,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":461},{"krate":0,"index":462}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/settings.rs","byte_start":256650,"byte_end":256658,"line_start":65,"line_end":65,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":464}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/settings.rs","byte_start":256941,"byte_end":256949,"line_start":78,"line_end":78,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":466},{"krate":0,"index":467},{"krate":0,"index":2361},{"krate":0,"index":2362},{"krate":0,"index":2363}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/settings.rs","byte_start":292157,"byte_end":292168,"line_start":1000,"line_end":1000,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":469},{"krate":0,"index":470}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/validator.rs","byte_start":318007,"byte_end":318016,"line_start":23,"line_end":23,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":588},{"krate":0,"index":589},{"krate":0,"index":591},{"krate":0,"index":594},{"krate":0,"index":600},{"krate":0,"index":603},{"krate":0,"index":606},{"krate":0,"index":608},{"krate":0,"index":610},{"krate":0,"index":615},{"krate":0,"index":619},{"krate":0,"index":625},{"krate":0,"index":627},{"krate":0,"index":631}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs","byte_start":64078,"byte_end":64081,"line_start":68,"line_end":68,"column_start":14,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":668},{"krate":0,"index":670},{"krate":0,"index":671},{"krate":0,"index":673},{"krate":0,"index":675},{"krate":0,"index":677},{"krate":0,"index":679},{"krate":0,"index":681},{"krate":0,"index":683},{"krate":0,"index":685},{"krate":0,"index":687},{"krate":0,"index":689},{"krate":0,"index":691},{"krate":0,"index":693},{"krate":0,"index":695},{"krate":0,"index":697},{"krate":0,"index":699},{"krate":0,"index":701},{"krate":0,"index":703},{"krate":0,"index":705},{"krate":0,"index":707},{"krate":0,"index":708},{"krate":0,"index":709},{"krate":0,"index":710},{"krate":0,"index":711},{"krate":0,"index":712},{"krate":0,"index":713},{"krate":0,"index":714},{"krate":0,"index":715},{"krate":0,"index":717},{"krate":0,"index":718},{"krate":0,"index":719},{"krate":0,"index":720},{"krate":0,"index":722},{"krate":0,"index":724},{"krate":0,"index":726},{"krate":0,"index":728},{"krate":0,"index":729},{"krate":0,"index":730},{"krate":0,"index":731},{"krate":0,"index":733},{"krate":0,"index":734},{"krate":0,"index":735},{"krate":0,"index":736},{"krate":0,"index":738},{"krate":0,"index":740},{"krate":0,"index":742},{"krate":0,"index":744},{"krate":0,"index":747},{"krate":0,"index":750},{"krate":0,"index":751},{"krate":0,"index":752},{"krate":0,"index":756},{"krate":0,"index":759}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs","byte_start":130565,"byte_end":130568,"line_start":1798,"line_end":1798,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":766}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs","byte_start":130684,"byte_end":130687,"line_start":1804,"line_end":1804,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":770},{"krate":0,"index":771},{"krate":0,"index":772},{"krate":0,"index":773},{"krate":0,"index":774},{"krate":0,"index":775},{"krate":0,"index":776},{"krate":0,"index":777},{"krate":0,"index":778},{"krate":0,"index":779},{"krate":0,"index":780},{"krate":0,"index":781},{"krate":0,"index":782},{"krate":0,"index":783},{"krate":0,"index":784},{"krate":0,"index":785},{"krate":0,"index":786},{"krate":0,"index":787},{"krate":0,"index":788},{"krate":0,"index":789},{"krate":0,"index":790},{"krate":0,"index":791},{"krate":0,"index":792},{"krate":0,"index":793},{"krate":0,"index":794},{"krate":0,"index":796},{"krate":0,"index":797}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs","byte_start":133081,"byte_end":133084,"line_start":1900,"line_end":1900,"column_start":31,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":802}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs","byte_start":349172,"byte_end":349175,"line_start":59,"line_end":59,"column_start":14,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":921},{"krate":0,"index":922},{"krate":0,"index":923},{"krate":0,"index":926},{"krate":0,"index":928},{"krate":0,"index":930},{"krate":0,"index":932},{"krate":0,"index":934},{"krate":0,"index":936},{"krate":0,"index":937},{"krate":0,"index":938},{"krate":0,"index":939},{"krate":0,"index":940},{"krate":0,"index":941},{"krate":0,"index":942},{"krate":0,"index":943},{"krate":0,"index":945},{"krate":0,"index":947},{"krate":0,"index":948},{"krate":0,"index":950},{"krate":0,"index":951},{"krate":0,"index":953},{"krate":0,"index":954},{"krate":0,"index":955},{"krate":0,"index":956},{"krate":0,"index":957},{"krate":0,"index":958},{"krate":0,"index":959},{"krate":0,"index":960},{"krate":0,"index":961},{"krate":0,"index":962},{"krate":0,"index":963},{"krate":0,"index":964},{"krate":0,"index":965},{"krate":0,"index":966},{"krate":0,"index":967},{"krate":0,"index":968},{"krate":0,"index":970},{"krate":0,"index":971},{"krate":0,"index":972},{"krate":0,"index":973},{"krate":0,"index":975},{"krate":0,"index":976},{"krate":0,"index":978},{"krate":0,"index":980},{"krate":0,"index":981},{"krate":0,"index":982},{"krate":0,"index":983},{"krate":0,"index":984},{"krate":0,"index":985},{"krate":0,"index":986},{"krate":0,"index":987},{"krate":0,"index":988},{"krate":0,"index":989},{"krate":0,"index":990},{"krate":0,"index":991},{"krate":0,"index":992},{"krate":0,"index":993},{"krate":0,"index":994},{"krate":0,"index":995},{"krate":0,"index":996},{"krate":0,"index":997},{"krate":0,"index":998},{"krate":0,"index":999},{"krate":0,"index":1000},{"krate":0,"index":1001},{"krate":0,"index":1002},{"krate":0,"index":1003},{"krate":0,"index":1004},{"krate":0,"index":1005}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs","byte_start":493825,"byte_end":493828,"line_start":3943,"line_end":3943,"column_start":44,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1010}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs","byte_start":494089,"byte_end":494092,"line_start":3955,"line_end":3955,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1014}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/base.rs","byte_start":494928,"byte_end":494932,"line_start":19,"line_end":19,"column_start":14,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1030},{"krate":0,"index":1031},{"krate":0,"index":1032},{"krate":0,"index":1033}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/base.rs","byte_start":495371,"byte_end":495375,"line_start":38,"line_end":38,"column_start":44,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1038}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/base.rs","byte_start":495484,"byte_end":495488,"line_start":44,"line_end":44,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1042}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/flag.rs","byte_start":496039,"byte_end":496050,"line_start":24,"line_end":24,"column_start":14,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1068}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/flag.rs","byte_start":496250,"byte_end":496261,"line_start":33,"line_end":33,"column_start":44,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1073}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/flag.rs","byte_start":496454,"byte_end":496465,"line_start":42,"line_end":42,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1077}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/flag.rs","byte_start":496700,"byte_end":496711,"line_start":51,"line_end":51,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1081}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/flag.rs","byte_start":496983,"byte_end":496994,"line_start":63,"line_end":63,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1085},{"krate":0,"index":1086},{"krate":0,"index":1088},{"krate":0,"index":1090},{"krate":0,"index":1092},{"krate":0,"index":1094},{"krate":0,"index":1095},{"krate":0,"index":1096},{"krate":0,"index":1097},{"krate":0,"index":1098},{"krate":0,"index":1099},{"krate":0,"index":1100},{"krate":0,"index":1101},{"krate":0,"index":1102},{"krate":0,"index":1103},{"krate":0,"index":1104},{"krate":0,"index":1105},{"krate":0,"index":1106},{"krate":0,"index":1107},{"krate":0,"index":1108},{"krate":0,"index":1109},{"krate":0,"index":1110},{"krate":0,"index":1111},{"krate":0,"index":1112},{"krate":0,"index":1113},{"krate":0,"index":1115},{"krate":0,"index":1116}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/flag.rs","byte_start":499526,"byte_end":499537,"line_start":159,"line_end":159,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1121}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/flag.rs","byte_start":499642,"byte_end":499653,"line_start":165,"line_end":165,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1125}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/option.rs","byte_start":501310,"byte_end":501320,"line_start":25,"line_end":25,"column_start":14,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1152}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/option.rs","byte_start":501519,"byte_end":501529,"line_start":34,"line_end":34,"column_start":44,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1157}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/option.rs","byte_start":501753,"byte_end":501763,"line_start":44,"line_end":44,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1161}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/option.rs","byte_start":502078,"byte_end":502088,"line_start":55,"line_end":55,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1165}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/option.rs","byte_start":503978,"byte_end":503988,"line_start":116,"line_end":116,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1169},{"krate":0,"index":1170},{"krate":0,"index":1172},{"krate":0,"index":1174},{"krate":0,"index":1176},{"krate":0,"index":1178},{"krate":0,"index":1179},{"krate":0,"index":1180},{"krate":0,"index":1181},{"krate":0,"index":1182},{"krate":0,"index":1183},{"krate":0,"index":1184},{"krate":0,"index":1185},{"krate":0,"index":1187},{"krate":0,"index":1188},{"krate":0,"index":1189},{"krate":0,"index":1190},{"krate":0,"index":1191},{"krate":0,"index":1192},{"krate":0,"index":1193},{"krate":0,"index":1194},{"krate":0,"index":1195},{"krate":0,"index":1196},{"krate":0,"index":1197},{"krate":0,"index":1199},{"krate":0,"index":1202},{"krate":0,"index":1203}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/option.rs","byte_start":506832,"byte_end":506842,"line_start":215,"line_end":215,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1208}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/option.rs","byte_start":506947,"byte_end":506957,"line_start":221,"line_end":221,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1212}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/positional.rs","byte_start":509287,"byte_end":509297,"line_start":27,"line_end":27,"column_start":14,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1239},{"krate":0,"index":1240},{"krate":0,"index":1241},{"krate":0,"index":1242},{"krate":0,"index":1244}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/positional.rs","byte_start":511662,"byte_end":511672,"line_start":106,"line_end":106,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1249}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/positional.rs","byte_start":512575,"byte_end":512585,"line_start":137,"line_end":137,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1253},{"krate":0,"index":1254},{"krate":0,"index":1256},{"krate":0,"index":1258},{"krate":0,"index":1260},{"krate":0,"index":1262},{"krate":0,"index":1263},{"krate":0,"index":1264},{"krate":0,"index":1265},{"krate":0,"index":1266},{"krate":0,"index":1267},{"krate":0,"index":1268},{"krate":0,"index":1269},{"krate":0,"index":1271},{"krate":0,"index":1272},{"krate":0,"index":1273},{"krate":0,"index":1274},{"krate":0,"index":1275},{"krate":0,"index":1276},{"krate":0,"index":1277},{"krate":0,"index":1278},{"krate":0,"index":1279},{"krate":0,"index":1280},{"krate":0,"index":1282},{"krate":0,"index":1283},{"krate":0,"index":1286},{"krate":0,"index":1287}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/positional.rs","byte_start":515034,"byte_end":515044,"line_start":224,"line_end":224,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1291}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/positional.rs","byte_start":515153,"byte_end":515163,"line_start":230,"line_end":230,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1295}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/switched.rs","byte_start":516654,"byte_end":516662,"line_start":12,"line_end":12,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1300}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/switched.rs","byte_start":516910,"byte_end":516918,"line_start":24,"line_end":24,"column_start":44,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1305}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/switched.rs","byte_start":517015,"byte_end":517023,"line_start":30,"line_end":30,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1308}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/valued.rs","byte_start":518053,"byte_end":518059,"line_start":28,"line_end":28,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1319}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/valued.rs","byte_start":518502,"byte_end":518508,"line_start":47,"line_end":47,"column_start":14,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1323}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/valued.rs","byte_start":518762,"byte_end":518768,"line_start":57,"line_end":57,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1328}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matcher.rs","byte_start":519406,"byte_end":519416,"line_start":17,"line_end":17,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1349}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matcher.rs","byte_start":519510,"byte_end":519520,"line_start":23,"line_end":23,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1352},{"krate":0,"index":1353},{"krate":0,"index":1355},{"krate":0,"index":1357},{"krate":0,"index":1358},{"krate":0,"index":1359},{"krate":0,"index":1360},{"krate":0,"index":1361},{"krate":0,"index":1362},{"krate":0,"index":1363},{"krate":0,"index":1364},{"krate":0,"index":1365},{"krate":0,"index":1366},{"krate":0,"index":1367},{"krate":0,"index":1368},{"krate":0,"index":1369},{"krate":0,"index":1370},{"krate":0,"index":1371},{"krate":0,"index":1372},{"krate":0,"index":1373},{"krate":0,"index":1374},{"krate":0,"index":1375},{"krate":0,"index":1376},{"krate":0,"index":1377}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matcher.rs","byte_start":527730,"byte_end":527740,"line_start":265,"line_end":265,"column_start":35,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1382}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matches.rs","byte_start":530339,"byte_end":530349,"line_start":70,"line_end":70,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1396}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matches.rs","byte_start":530521,"byte_end":530531,"line_start":80,"line_end":80,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1399},{"krate":0,"index":1400},{"krate":0,"index":1402},{"krate":0,"index":1404},{"krate":0,"index":1408},{"krate":0,"index":1411},{"krate":0,"index":1414},{"krate":0,"index":1417},{"krate":0,"index":1419},{"krate":0,"index":1422},{"krate":0,"index":1424},{"krate":0,"index":1427},{"krate":0,"index":1429},{"krate":0,"index":1431},{"krate":0,"index":1433}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matches.rs","byte_start":559995,"byte_end":560001,"line_start":804,"line_end":804,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1437},{"krate":0,"index":1438},{"krate":0,"index":1439}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matches.rs","byte_start":560233,"byte_end":560239,"line_start":815,"line_end":815,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1442}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matches.rs","byte_start":560365,"byte_end":560371,"line_start":821,"line_end":821,"column_start":32,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matches.rs","byte_start":560432,"byte_end":560438,"line_start":824,"line_end":824,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1447}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matches.rs","byte_start":561806,"byte_end":561814,"line_start":863,"line_end":863,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1453},{"krate":0,"index":1454},{"krate":0,"index":1455}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matches.rs","byte_start":562050,"byte_end":562058,"line_start":874,"line_end":874,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1458}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matches.rs","byte_start":562186,"byte_end":562194,"line_start":880,"line_end":880,"column_start":32,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matches.rs","byte_start":562255,"byte_end":562263,"line_start":883,"line_end":883,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1463}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matches.rs","byte_start":563448,"byte_end":563455,"line_start":923,"line_end":923,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1469},{"krate":0,"index":1470},{"krate":0,"index":1471}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matches.rs","byte_start":563683,"byte_end":563690,"line_start":934,"line_end":934,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1474}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matches.rs","byte_start":563814,"byte_end":563821,"line_start":940,"line_end":940,"column_start":32,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matches.rs","byte_start":563882,"byte_end":563889,"line_start":943,"line_end":943,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1479}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/group.rs","byte_start":569673,"byte_end":569681,"line_start":96,"line_end":96,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1490},{"krate":0,"index":1491},{"krate":0,"index":1492},{"krate":0,"index":1493},{"krate":0,"index":1494},{"krate":0,"index":1495},{"krate":0,"index":1496},{"krate":0,"index":1497},{"krate":0,"index":1498}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/group.rs","byte_start":582195,"byte_end":582203,"line_start":431,"line_end":431,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1501}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/group.rs","byte_start":582628,"byte_end":582636,"line_start":447,"line_end":447,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1505}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/group.rs","byte_start":587750,"byte_end":587758,"line_start":627,"line_end":627,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1508}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/matched_arg.rs","byte_start":588316,"byte_end":588326,"line_start":15,"line_end":15,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1512}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/matched_arg.rs","byte_start":588487,"byte_end":588497,"line_start":25,"line_end":25,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1514}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/settings.rs","byte_start":589609,"byte_end":589617,"line_start":35,"line_end":35,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1519},{"krate":0,"index":2887},{"krate":0,"index":2888},{"krate":0,"index":2889}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/settings.rs","byte_start":590638,"byte_end":590646,"line_start":64,"line_end":64,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1521}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/settings.rs","byte_start":592736,"byte_end":592747,"line_start":123,"line_end":123,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1523},{"krate":0,"index":1524}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/subcommand.rs","byte_start":597973,"byte_end":597983,"line_start":38,"line_end":38,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1530}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Inherent","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/completions/bash.rs","byte_start":605704,"byte_end":605711,"line_start":16,"line_end":16,"column_start":14,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1548},{"krate":0,"index":1549},{"krate":0,"index":1551},{"krate":0,"index":1552},{"krate":0,"index":1553},{"krate":0,"index":1554},{"krate":0,"index":1556}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Inherent","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/completions/elvish.rs","byte_start":612033,"byte_end":612042,"line_start":15,"line_end":15,"column_start":14,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1569},{"krate":0,"index":1570}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/completions/fish.rs","byte_start":615610,"byte_end":615617,"line_start":14,"line_end":14,"column_start":14,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1589},{"krate":0,"index":1590}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Inherent","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/completions/powershell.rs","byte_start":619086,"byte_end":619099,"line_start":15,"line_end":15,"column_start":14,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1605},{"krate":0,"index":1606}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Inherent","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/completions/shell.rs","byte_start":624426,"byte_end":624431,"line_start":22,"line_end":22,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1620}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/completions/shell.rs","byte_start":624620,"byte_end":624625,"line_start":29,"line_end":29,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1623},{"krate":0,"index":1624}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/completions/shell.rs","byte_start":625293,"byte_end":625298,"line_start":46,"line_end":46,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1626}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Inherent","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/completions/zsh.rs","byte_start":625951,"byte_end":625957,"line_start":20,"line_end":20,"column_start":14,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1644},{"krate":0,"index":1645}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Inherent","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/completions/mod.rs","byte_start":599353,"byte_end":599361,"line_start":29,"line_end":29,"column_start":14,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1677},{"krate":0,"index":1678}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Inherent","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/errors.rs","byte_start":654187,"byte_end":654192,"line_start":385,"line_end":385,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1707},{"krate":0,"index":1708},{"krate":0,"index":1709},{"krate":0,"index":1711},{"krate":0,"index":1714},{"krate":0,"index":1716},{"krate":0,"index":1720},{"krate":0,"index":1725},{"krate":0,"index":1728},{"krate":0,"index":1731},{"krate":0,"index":1734},{"krate":0,"index":1736},{"krate":0,"index":1739},{"krate":0,"index":1741},{"krate":0,"index":1742},{"krate":0,"index":1743},{"krate":0,"index":1746},{"krate":0,"index":1748},{"krate":0,"index":1751},{"krate":0,"index":1752},{"krate":0,"index":1754}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/errors.rs","byte_start":669043,"byte_end":669048,"line_start":896,"line_end":896,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1756}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/errors.rs","byte_start":669136,"byte_end":669141,"line_start":902,"line_end":902,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1758}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/errors.rs","byte_start":669285,"byte_end":669290,"line_start":908,"line_end":908,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1760}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/errors.rs","byte_start":669432,"byte_end":669437,"line_start":914,"line_end":914,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1762}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Inherent","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/fmt.rs","byte_start":670792,"byte_end":670801,"line_start":62,"line_end":62,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1781},{"krate":0,"index":1782},{"krate":0,"index":1784},{"krate":0,"index":1786},{"krate":0,"index":1788}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/fmt.rs","byte_start":671945,"byte_end":671954,"line_start":108,"line_end":108,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1791}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Inherent","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/fmt.rs","byte_start":672642,"byte_end":672648,"line_start":133,"line_end":133,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1794}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/fmt.rs","byte_start":673457,"byte_end":673463,"line_start":158,"line_end":158,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1797}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/osstringext.rs","byte_start":680517,"byte_end":680522,"line_start":101,"line_end":101,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1813},{"krate":0,"index":1814},{"krate":0,"index":1815},{"krate":0,"index":1816},{"krate":0,"index":1817},{"krate":0,"index":1818}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/osstringext.rs","byte_start":682980,"byte_end":682987,"line_start":183,"line_end":183,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1821},{"krate":0,"index":1822}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Inherent","span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/usage_parser.rs","byte_start":688684,"byte_end":688695,"line_start":28,"line_end":28,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1858},{"krate":0,"index":1859},{"krate":0,"index":1860},{"krate":0,"index":1861},{"krate":0,"index":1862},{"krate":0,"index":1865},{"krate":0,"index":1866},{"krate":0,"index":1867},{"krate":0,"index":1868},{"krate":0,"index":1869}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/help.rs","byte_start":134056,"byte_end":134062,"line_start":39,"line_end":39,"column_start":31,"column_end":37},"kind":"SuperTrait","from":{"krate":0,"index":838},"to":{"krate":0,"index":108}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/help.rs","byte_start":134073,"byte_end":134080,"line_start":39,"line_end":39,"column_start":48,"column_end":55},"kind":"SuperTrait","from":{"krate":2,"index":7484},"to":{"krate":0,"index":108}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/help.rs","byte_start":134127,"byte_end":134128,"line_start":40,"line_end":40,"column_start":44,"column_end":45},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":114},"to":{"krate":0,"index":108}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/help.rs","byte_start":134195,"byte_end":134209,"line_start":42,"line_end":42,"column_start":29,"column_end":43},"kind":"SuperTrait","from":{"krate":0,"index":108},"to":{"krate":0,"index":115}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/help.rs","byte_start":134220,"byte_end":134229,"line_start":42,"line_end":42,"column_start":54,"column_end":63},"kind":"SuperTrait","from":{"krate":0,"index":869},"to":{"krate":0,"index":115}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/help.rs","byte_start":134325,"byte_end":134326,"line_start":45,"line_end":45,"column_start":42,"column_end":43},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":122},"to":{"krate":0,"index":115}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/help.rs","byte_start":134570,"byte_end":134573,"line_start":58,"line_end":58,"column_start":28,"column_end":31},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":661},"to":{"krate":0,"index":869}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/help.rs","byte_start":135481,"byte_end":135485,"line_start":97,"line_end":97,"column_start":10,"column_end":14},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":133},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/help.rs","byte_start":138946,"byte_end":138950,"line_start":204,"line_end":204,"column_start":10,"column_end":14},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":133},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/help.rs","byte_start":153386,"byte_end":153390,"line_start":590,"line_end":590,"column_start":10,"column_end":14},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":133},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/help.rs","byte_start":163851,"byte_end":163855,"line_start":881,"line_end":881,"column_start":10,"column_end":14},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":133},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/meta.rs","byte_start":170369,"byte_end":170376,"line_start":24,"line_end":24,"column_start":10,"column_end":17},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1879},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/parser.rs","byte_start":172641,"byte_end":172647,"line_start":81,"line_end":81,"column_start":14,"column_end":20},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1934},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/settings.rs","byte_start":256516,"byte_end":256524,"line_start":58,"line_end":58,"column_start":16,"column_end":24},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":2350},"to":{"krate":2,"index":1658}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/settings.rs","byte_start":256650,"byte_end":256658,"line_start":65,"line_end":65,"column_start":18,"column_end":26},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":2350},"to":{"krate":2,"index":2204}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/settings.rs","byte_start":256941,"byte_end":256949,"line_start":78,"line_end":78,"column_start":6,"column_end":14},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":2350},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/settings.rs","byte_start":292157,"byte_end":292168,"line_start":1000,"line_end":1000,"column_start":18,"column_end":29},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":2364},"to":{"krate":2,"index":6657}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/validator.rs","byte_start":318007,"byte_end":318016,"line_start":23,"line_end":23,"column_start":18,"column_end":27},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":578},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs","byte_start":64078,"byte_end":64081,"line_start":68,"line_end":68,"column_start":14,"column_end":17},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":661},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs","byte_start":130565,"byte_end":130568,"line_start":1798,"line_end":1798,"column_start":24,"column_end":27},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":661},"to":{"krate":2,"index":2179}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs","byte_start":130684,"byte_end":130687,"line_start":1804,"line_end":1804,"column_start":33,"column_end":36},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":661},"to":{"krate":0,"index":838}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/app/mod.rs","byte_start":133081,"byte_end":133084,"line_start":1900,"line_end":1900,"column_start":31,"column_end":34},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":661},"to":{"krate":2,"index":7484}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/any_arg.rs","byte_start":343586,"byte_end":343593,"line_start":12,"line_end":12,"column_start":36,"column_end":43},"kind":"SuperTrait","from":{"krate":2,"index":7484},"to":{"krate":0,"index":838}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs","byte_start":349172,"byte_end":349175,"line_start":59,"line_end":59,"column_start":14,"column_end":17},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":2528},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs","byte_start":493825,"byte_end":493828,"line_start":3943,"line_end":3943,"column_start":44,"column_end":47},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":2528},"to":{"krate":2,"index":2221}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg.rs","byte_start":494089,"byte_end":494092,"line_start":3955,"line_end":3955,"column_start":28,"column_end":31},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":2528},"to":{"krate":2,"index":2039}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/base.rs","byte_start":494928,"byte_end":494932,"line_start":19,"line_end":19,"column_start":14,"column_end":18},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":2544},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/base.rs","byte_start":495371,"byte_end":495375,"line_start":38,"line_end":38,"column_start":44,"column_end":48},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":2544},"to":{"krate":2,"index":2221}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/base.rs","byte_start":495484,"byte_end":495488,"line_start":44,"line_end":44,"column_start":28,"column_end":32},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":2544},"to":{"krate":2,"index":2039}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/flag.rs","byte_start":496039,"byte_end":496050,"line_start":24,"line_end":24,"column_start":14,"column_end":25},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":2568},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/flag.rs","byte_start":496250,"byte_end":496261,"line_start":33,"line_end":33,"column_start":44,"column_end":55},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":2568},"to":{"krate":2,"index":2221}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/flag.rs","byte_start":496454,"byte_end":496465,"line_start":42,"line_end":42,"column_start":36,"column_end":47},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":2568},"to":{"krate":2,"index":2221}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/flag.rs","byte_start":496700,"byte_end":496711,"line_start":51,"line_end":51,"column_start":26,"column_end":37},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":2568},"to":{"krate":2,"index":7484}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/flag.rs","byte_start":496983,"byte_end":496994,"line_start":63,"line_end":63,"column_start":33,"column_end":44},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":2568},"to":{"krate":0,"index":838}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/flag.rs","byte_start":499526,"byte_end":499537,"line_start":159,"line_end":159,"column_start":28,"column_end":39},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":2568},"to":{"krate":0,"index":869}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/flag.rs","byte_start":499642,"byte_end":499653,"line_start":165,"line_end":165,"column_start":28,"column_end":39},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":2568},"to":{"krate":2,"index":2039}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/option.rs","byte_start":501310,"byte_end":501320,"line_start":25,"line_end":25,"column_start":14,"column_end":24},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":2585},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/option.rs","byte_start":501519,"byte_end":501529,"line_start":34,"line_end":34,"column_start":44,"column_end":54},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":2585},"to":{"krate":2,"index":2221}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/option.rs","byte_start":501753,"byte_end":501763,"line_start":44,"line_end":44,"column_start":36,"column_end":46},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":2585},"to":{"krate":2,"index":2221}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/option.rs","byte_start":502078,"byte_end":502088,"line_start":55,"line_end":55,"column_start":26,"column_end":36},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":2585},"to":{"krate":2,"index":7484}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/option.rs","byte_start":503978,"byte_end":503988,"line_start":116,"line_end":116,"column_start":33,"column_end":43},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":2585},"to":{"krate":0,"index":838}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/option.rs","byte_start":506832,"byte_end":506842,"line_start":215,"line_end":215,"column_start":28,"column_end":38},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":2585},"to":{"krate":0,"index":869}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/option.rs","byte_start":506947,"byte_end":506957,"line_start":221,"line_end":221,"column_start":28,"column_end":38},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":2585},"to":{"krate":2,"index":2039}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/positional.rs","byte_start":509287,"byte_end":509297,"line_start":27,"line_end":27,"column_start":14,"column_end":24},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":2599},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/positional.rs","byte_start":511662,"byte_end":511672,"line_start":106,"line_end":106,"column_start":26,"column_end":36},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":2599},"to":{"krate":2,"index":7484}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/positional.rs","byte_start":512575,"byte_end":512585,"line_start":137,"line_end":137,"column_start":33,"column_end":43},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":2599},"to":{"krate":0,"index":838}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/positional.rs","byte_start":515034,"byte_end":515044,"line_start":224,"line_end":224,"column_start":28,"column_end":38},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":2599},"to":{"krate":0,"index":869}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/positional.rs","byte_start":515153,"byte_end":515163,"line_start":230,"line_end":230,"column_start":28,"column_end":38},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":2599},"to":{"krate":2,"index":2039}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/switched.rs","byte_start":516654,"byte_end":516662,"line_start":12,"line_end":12,"column_start":22,"column_end":30},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":2614},"to":{"krate":2,"index":2204}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/switched.rs","byte_start":516910,"byte_end":516918,"line_start":24,"line_end":24,"column_start":44,"column_end":52},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":2614},"to":{"krate":2,"index":2221}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/switched.rs","byte_start":517015,"byte_end":517023,"line_start":30,"line_end":30,"column_start":20,"column_end":28},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":2614},"to":{"krate":2,"index":2179}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/valued.rs","byte_start":518053,"byte_end":518059,"line_start":28,"line_end":28,"column_start":26,"column_end":32},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":2624},"to":{"krate":2,"index":2204}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/valued.rs","byte_start":518502,"byte_end":518508,"line_start":47,"line_end":47,"column_start":14,"column_end":20},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":2624},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_builder/valued.rs","byte_start":518762,"byte_end":518768,"line_start":57,"line_end":57,"column_start":44,"column_end":50},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":2624},"to":{"krate":2,"index":2221}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matcher.rs","byte_start":519406,"byte_end":519416,"line_start":17,"line_end":17,"column_start":22,"column_end":32},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1343},"to":{"krate":2,"index":2204}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matcher.rs","byte_start":519510,"byte_end":519520,"line_start":23,"line_end":23,"column_start":10,"column_end":20},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1343},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matcher.rs","byte_start":527730,"byte_end":527740,"line_start":265,"line_end":265,"column_start":35,"column_end":45},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1343},"to":{"krate":2,"index":2218}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matches.rs","byte_start":530339,"byte_end":530349,"line_start":70,"line_end":70,"column_start":22,"column_end":32},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":2643},"to":{"krate":2,"index":2204}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matches.rs","byte_start":530521,"byte_end":530531,"line_start":80,"line_end":80,"column_start":10,"column_end":20},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":2643},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matches.rs","byte_start":559995,"byte_end":560001,"line_start":804,"line_end":804,"column_start":23,"column_end":29},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":2654},"to":{"krate":2,"index":3510}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matches.rs","byte_start":560233,"byte_end":560239,"line_start":815,"line_end":815,"column_start":34,"column_end":40},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":2654},"to":{"krate":2,"index":3767}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matches.rs","byte_start":560365,"byte_end":560371,"line_start":821,"line_end":821,"column_start":32,"column_end":38},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":2654},"to":{"krate":2,"index":3796}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matches.rs","byte_start":560432,"byte_end":560438,"line_start":824,"line_end":824,"column_start":22,"column_end":28},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":2654},"to":{"krate":2,"index":2204}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matches.rs","byte_start":561806,"byte_end":561814,"line_start":863,"line_end":863,"column_start":23,"column_end":31},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":2663},"to":{"krate":2,"index":3510}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matches.rs","byte_start":562050,"byte_end":562058,"line_start":874,"line_end":874,"column_start":34,"column_end":42},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":2663},"to":{"krate":2,"index":3767}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matches.rs","byte_start":562186,"byte_end":562194,"line_start":880,"line_end":880,"column_start":32,"column_end":40},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":2663},"to":{"krate":2,"index":3796}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matches.rs","byte_start":562255,"byte_end":562263,"line_start":883,"line_end":883,"column_start":22,"column_end":30},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":2663},"to":{"krate":2,"index":2204}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matches.rs","byte_start":563448,"byte_end":563455,"line_start":923,"line_end":923,"column_start":23,"column_end":30},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":2672},"to":{"krate":2,"index":3510}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matches.rs","byte_start":563683,"byte_end":563690,"line_start":934,"line_end":934,"column_start":34,"column_end":41},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":2672},"to":{"krate":2,"index":3767}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matches.rs","byte_start":563814,"byte_end":563821,"line_start":940,"line_end":940,"column_start":32,"column_end":39},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":2672},"to":{"krate":2,"index":3796}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/arg_matches.rs","byte_start":563882,"byte_end":563889,"line_start":943,"line_end":943,"column_start":22,"column_end":29},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":2672},"to":{"krate":2,"index":2204}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/group.rs","byte_start":569673,"byte_end":569681,"line_start":96,"line_end":96,"column_start":10,"column_end":18},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":2681},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/group.rs","byte_start":582195,"byte_end":582203,"line_start":431,"line_end":431,"column_start":20,"column_end":28},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":2681},"to":{"krate":2,"index":7479}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/group.rs","byte_start":582628,"byte_end":582636,"line_start":447,"line_end":447,"column_start":41,"column_end":49},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":2681},"to":{"krate":2,"index":2221}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/group.rs","byte_start":587750,"byte_end":587758,"line_start":627,"line_end":627,"column_start":20,"column_end":28},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":2681},"to":{"krate":2,"index":2179}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/matched_arg.rs","byte_start":588316,"byte_end":588326,"line_start":15,"line_end":15,"column_start":18,"column_end":28},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":2692},"to":{"krate":2,"index":2204}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/matched_arg.rs","byte_start":588487,"byte_end":588497,"line_start":25,"line_end":25,"column_start":6,"column_end":16},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":2692},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/settings.rs","byte_start":589609,"byte_end":589617,"line_start":35,"line_end":35,"column_start":6,"column_end":14},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":2879},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/settings.rs","byte_start":590638,"byte_end":590646,"line_start":64,"line_end":64,"column_start":18,"column_end":26},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":2879},"to":{"krate":2,"index":2204}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/settings.rs","byte_start":592736,"byte_end":592747,"line_start":123,"line_end":123,"column_start":18,"column_end":29},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":2890},"to":{"krate":2,"index":6657}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/args/subcommand.rs","byte_start":597973,"byte_end":597983,"line_start":38,"line_end":38,"column_start":10,"column_end":20},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":2938},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/completions/bash.rs","byte_start":605704,"byte_end":605711,"line_start":16,"line_end":16,"column_start":14,"column_end":21},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1541},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/completions/elvish.rs","byte_start":612033,"byte_end":612042,"line_start":15,"line_end":15,"column_start":14,"column_end":23},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1562},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/completions/fish.rs","byte_start":615610,"byte_end":615617,"line_start":14,"line_end":14,"column_start":14,"column_end":21},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1582},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/completions/powershell.rs","byte_start":619086,"byte_end":619099,"line_start":15,"line_end":15,"column_start":14,"column_end":27},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1598},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/completions/shell.rs","byte_start":624426,"byte_end":624431,"line_start":22,"line_end":22,"column_start":6,"column_end":11},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":2967},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/completions/shell.rs","byte_start":624620,"byte_end":624625,"line_start":29,"line_end":29,"column_start":18,"column_end":23},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":2967},"to":{"krate":2,"index":6657}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/completions/shell.rs","byte_start":625293,"byte_end":625298,"line_start":46,"line_end":46,"column_start":23,"column_end":28},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":2967},"to":{"krate":2,"index":7484}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/completions/zsh.rs","byte_start":625951,"byte_end":625957,"line_start":20,"line_end":20,"column_start":14,"column_end":20},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1637},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/completions/mod.rs","byte_start":599353,"byte_end":599361,"line_start":29,"line_end":29,"column_start":14,"column_end":22},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1670},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/errors.rs","byte_start":654187,"byte_end":654192,"line_start":385,"line_end":385,"column_start":6,"column_end":11},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":3035},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/errors.rs","byte_start":669043,"byte_end":669048,"line_start":896,"line_end":896,"column_start":19,"column_end":24},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":3035},"to":{"krate":1,"index":1623}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/errors.rs","byte_start":669136,"byte_end":669141,"line_start":902,"line_end":902,"column_start":18,"column_end":23},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":3035},"to":{"krate":2,"index":7484}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/errors.rs","byte_start":669285,"byte_end":669290,"line_start":908,"line_end":908,"column_start":26,"column_end":31},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":3035},"to":{"krate":2,"index":2221}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/errors.rs","byte_start":669432,"byte_end":669437,"line_start":914,"line_end":914,"column_start":31,"column_end":36},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":3035},"to":{"krate":2,"index":2221}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/fmt.rs","byte_start":670792,"byte_end":670801,"line_start":62,"line_end":62,"column_start":6,"column_end":15},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1777},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/fmt.rs","byte_start":671945,"byte_end":671954,"line_start":108,"line_end":108,"column_start":18,"column_end":27},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1777},"to":{"krate":2,"index":2204}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/fmt.rs","byte_start":672642,"byte_end":672648,"line_start":133,"line_end":133,"column_start":21,"column_end":27},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":3058},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/fmt.rs","byte_start":673457,"byte_end":673463,"line_start":158,"line_end":158,"column_start":38,"column_end":44},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":3058},"to":{"krate":2,"index":7484}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/osstringext.rs","byte_start":680517,"byte_end":680522,"line_start":101,"line_end":101,"column_start":20,"column_end":25},"kind":{"Impl":{"id":94}},"from":{"krate":1,"index":1920},"to":{"krate":0,"index":1805}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/osstringext.rs","byte_start":682980,"byte_end":682987,"line_start":183,"line_end":183,"column_start":23,"column_end":30},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":3075},"to":{"krate":2,"index":3510}},{"span":{"file_name":"/home/acer/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-2.33.1/src/usage_parser.rs","byte_start":688684,"byte_end":688695,"line_start":28,"line_end":28,"column_start":10,"column_end":21},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":3105},"to":{"krate":4294967295,"index":4294967295}}]}